{"version":3,"sources":["../src/index.ts","../src/routerComponent.tsx","../src/routeProvider.tsx","../src/prompt.tsx"],"sourcesContent":["import React from \"react\";\nimport { handleUseParams, IRouterProvider } from \"@pankod/refine-core\";\nimport {\n    useLocation,\n    useParams,\n    Link,\n    RouteProps,\n    BrowserRouterProps,\n    useNavigate,\n} from \"react-router-dom\";\n\nimport {\n    BrowserRouterComponent,\n    MemoryRouterComponent,\n    HashRouterComponent,\n} from \"./routerComponent\";\nimport { Prompt } from \"./prompt\";\n\nexport type RefineRouteProps = RouteProps & {\n    layout?: boolean;\n};\ninterface IReactRouterProvider extends IRouterProvider {\n    useLocation: typeof useLocation;\n    Link: typeof Link;\n    useParams: <\n        Params extends { [K in keyof Params]?: string } = {},\n    >() => Params;\n    RouterComponent: React.FC<BrowserRouterProps>;\n    routes?: RefineRouteProps[];\n}\n\nconst RouterProvider: IReactRouterProvider = {\n    useHistory: () => {\n        const navigate = useNavigate();\n\n        return {\n            push: navigate,\n            replace: (path: string) => {\n                navigate(path, { replace: true });\n            },\n            goBack: () => {\n                navigate(-1);\n            },\n        };\n    },\n    useLocation,\n    useParams: () => {\n        const params = useParams();\n        const { pathname } = useLocation();\n\n        const paramsString = `/${Object.values(params).join(\"/\")}`;\n        return handleUseParams({\n            ...params,\n            resource:\n                Object.keys(params).length === 0\n                    ? pathname.substring(1)\n                    : decodeURIComponent(pathname.substring(1)).replace(\n                          paramsString,\n                          \"\",\n                      ),\n        });\n    },\n    Prompt: Prompt as any,\n    Link,\n    RouterComponent: BrowserRouterComponent,\n};\n\nexport * from \"react-router-dom\";\n\nexport default RouterProvider;\nexport { MemoryRouterComponent, HashRouterComponent, BrowserRouterComponent };\n","import React from \"react\";\nimport {\n    BrowserRouter,\n    BrowserRouterProps,\n    MemoryRouter,\n    MemoryRouterProps,\n    HashRouter,\n    HashRouterProps,\n} from \"react-router-dom\";\n\nimport { RouteProvider } from \"./routeProvider\";\n\nexport function BrowserRouterComponent(\n    this: { initialRoute?: string },\n    { children, ...props }: BrowserRouterProps,\n): JSX.Element {\n    return (\n        <BrowserRouter {...props}>\n            <RouteProvider\n                initialRoute={\n                    typeof this !== \"undefined\" ? this.initialRoute : undefined\n                }\n            />\n            {children}\n        </BrowserRouter>\n    );\n}\n\nexport function MemoryRouterComponent(\n    this: { initialRoute?: string },\n    { children, ...props }: MemoryRouterProps,\n): JSX.Element {\n    return (\n        <MemoryRouter {...props}>\n            <RouteProvider\n                initialRoute={\n                    typeof this !== \"undefined\" ? this.initialRoute : undefined\n                }\n            />\n            {children}\n        </MemoryRouter>\n    );\n}\n\nexport function HashRouterComponent(\n    this: { initialRoute?: string },\n    { children, ...props }: HashRouterProps,\n): JSX.Element {\n    return (\n        <HashRouter {...props}>\n            <RouteProvider\n                initialRoute={\n                    typeof this !== \"undefined\" ? this.initialRoute : undefined\n                }\n            />\n            {children}\n        </HashRouter>\n    );\n}\n","/* eslint-disable react/display-name */\nimport React from \"react\";\nimport { Route, Routes, Navigate, Outlet } from \"react-router-dom\";\nimport {\n    LoginPage as DefaultLoginPage,\n    ErrorComponent,\n    LayoutWrapper,\n    useAuthenticated,\n    useResource,\n    useRefineContext,\n    useRouterContext,\n    CanAccess,\n    ResourceRouterParams,\n} from \"@pankod/refine-core\";\nimport { RefineRouteProps } from \"./index\";\n\nconst ResourceComponent: React.FC<{ route: string }> = ({ route }) => {\n    const { catchAll } = useRefineContext();\n    const { useParams } = useRouterContext();\n    const { resources } = useResource();\n\n    const { action, id } = useParams<ResourceRouterParams>();\n\n    const resource = resources.find((res) => res.route === route);\n\n    if (resource) {\n        const {\n            list,\n            create,\n            edit,\n            show,\n            name,\n            canCreate,\n            canEdit,\n            canShow,\n            canDelete,\n            options,\n        } = resource;\n\n        const List = list ?? (() => null);\n        const Create = create ?? (() => null);\n        const Edit = edit ?? (() => null);\n        const Show = show ?? (() => null);\n\n        const renderCrud = () => {\n            switch (action) {\n                case undefined:\n                    return (\n                        <CanAccess\n                            resource={name}\n                            action=\"list\"\n                            fallback={catchAll ?? <ErrorComponent />}\n                            params={{\n                                resource,\n                            }}\n                        >\n                            {!list ? (\n                                catchAll ?? <ErrorComponent />\n                            ) : (\n                                <List\n                                    name={name}\n                                    canCreate={canCreate}\n                                    canEdit={canEdit}\n                                    canDelete={canDelete}\n                                    canShow={canShow}\n                                    options={options}\n                                />\n                            )}\n                        </CanAccess>\n                    );\n                case \"create\":\n                case \"clone\":\n                    return (\n                        <CanAccess\n                            resource={name}\n                            action=\"create\"\n                            fallback={catchAll ?? <ErrorComponent />}\n                            params={{\n                                id: id ? decodeURIComponent(id) : undefined,\n                                resource,\n                            }}\n                        >\n                            {!create ? (\n                                catchAll ?? <ErrorComponent />\n                            ) : (\n                                <Create\n                                    name={name}\n                                    canCreate={canCreate}\n                                    canEdit={canEdit}\n                                    canDelete={canDelete}\n                                    canShow={canShow}\n                                    options={options}\n                                />\n                            )}\n                        </CanAccess>\n                    );\n\n                case \"edit\":\n                    return (\n                        <CanAccess\n                            resource={name}\n                            action=\"edit\"\n                            params={{\n                                id: id ? decodeURIComponent(id) : undefined,\n                                resource,\n                            }}\n                            fallback={catchAll ?? <ErrorComponent />}\n                        >\n                            {!edit ? (\n                                catchAll ?? <ErrorComponent />\n                            ) : (\n                                <Edit\n                                    name={name}\n                                    canCreate={canCreate}\n                                    canEdit={canEdit}\n                                    canDelete={canDelete}\n                                    canShow={canShow}\n                                    options={options}\n                                />\n                            )}\n                        </CanAccess>\n                    );\n\n                case \"show\":\n                    return (\n                        <CanAccess\n                            resource={name}\n                            action=\"show\"\n                            params={{\n                                id: id ? decodeURIComponent(id) : undefined,\n                                resource,\n                            }}\n                            fallback={catchAll ?? <ErrorComponent />}\n                        >\n                            {!show ? (\n                                catchAll ?? <ErrorComponent />\n                            ) : (\n                                <Show\n                                    name={name}\n                                    canCreate={canCreate}\n                                    canEdit={canEdit}\n                                    canDelete={canDelete}\n                                    canShow={canShow}\n                                    options={options}\n                                />\n                            )}\n                        </CanAccess>\n                    );\n                default:\n                    return <>{catchAll ?? <ErrorComponent />}</>;\n            }\n        };\n\n        return renderCrud();\n    }\n\n    return <>{catchAll ?? <ErrorComponent />}</>;\n};\n\ntype RouteProviderProps = {\n    initialRoute?: string;\n};\n\nexport const RouteProvider = ({\n    initialRoute,\n}: RouteProviderProps): JSX.Element => {\n    const { resources } = useResource();\n    const { catchAll, DashboardPage, LoginPage } = useRefineContext();\n\n    const { routes: customRoutes } = useRouterContext();\n\n    const { isFetching, isError } = useAuthenticated({\n        type: \"routeProvider\",\n    });\n\n    if (isFetching) {\n        return (\n            <Routes>\n                <Route path=\"*\" element={null} />\n            </Routes>\n        );\n    }\n    const isAuthenticated = isError ? false : true;\n    const CustomPathAfterLogin: React.FC = (): JSX.Element | null => {\n        const { pathname, search } = location;\n        const toURL = `${pathname}${search}`;\n\n        return <Navigate to={`/login?to=${encodeURIComponent(toURL)}`} />;\n    };\n\n    const resourceRoutes: JSX.Element[] = [];\n\n    resources.map((resource) => {\n        const route = (\n            <Route\n                key={`${resource.route}`}\n                path={`${resource.route}`}\n                element={<ResourceComponent route={resource.route!} />}\n            >\n                <Route\n                    path=\":action\"\n                    element={<ResourceComponent route={resource.route!} />}\n                >\n                    <Route\n                        path=\":id\"\n                        element={<ResourceComponent route={resource.route!} />}\n                    />\n                </Route>\n            </Route>\n        );\n        resourceRoutes.push(route);\n    });\n\n    const renderAuthorized = () => (\n        <Routes>\n            {[...(customRoutes || [])]\n                .filter((p: RefineRouteProps) => !p.layout)\n                .map((route, i) => (\n                    <Route\n                        key={`custom-route-${i}`}\n                        {...route}\n                        element={route.element}\n                    />\n                ))}\n            <Route\n                path=\"/\"\n                element={\n                    <LayoutWrapper>\n                        <Outlet />\n                    </LayoutWrapper>\n                }\n            >\n                {[...(customRoutes || [])]\n                    .filter((p: RefineRouteProps) => p.layout)\n                    .map((route, i) => (\n                        <Route\n                            key={`custom-route-${i}`}\n                            {...route}\n                            element={route.element}\n                        />\n                    ))}\n                <Route\n                    index\n                    element={\n                        DashboardPage ? (\n                            <CanAccess\n                                resource=\"dashboard\"\n                                action=\"list\"\n                                fallback={catchAll ?? <ErrorComponent />}\n                            >\n                                <DashboardPage />\n                            </CanAccess>\n                        ) : (\n                            <Navigate\n                                to={\n                                    initialRoute ??\n                                    `/${resources.find((p) => p.list)?.route}`\n                                }\n                            />\n                        )\n                    }\n                />\n                {...[...(resourceRoutes || [])]}\n                <Route path=\"*\" element={<ResourceComponent route=\"\" />} />\n            </Route>\n        </Routes>\n    );\n\n    const renderLoginRouteElement = (): JSX.Element => {\n        if (LoginPage) return <LoginPage />;\n        return <DefaultLoginPage />;\n    };\n\n    const renderUnauthorized = () => (\n        <Routes>\n            {[...(customRoutes || [])].map((route, i) => (\n                <Route key={`custom-route-${i}`} {...route} />\n            ))}\n            <Route path=\"/\" element={renderLoginRouteElement()} />\n            <Route path=\"/login\" element={renderLoginRouteElement()} />\n            <Route path=\"*\" element={<CustomPathAfterLogin />} />\n        </Routes>\n    );\n    return isAuthenticated ? renderAuthorized() : renderUnauthorized();\n};\n","import { useEffect, useContext } from \"react\";\nimport { UNSAFE_NavigationContext as NavigationContext } from \"react-router-dom\";\nimport type { History } from \"history\";\n\nimport type { PromptProps } from \"@pankod/refine-core\";\n\nexport const Prompt: React.FC<PromptProps> = ({\n    message,\n    when,\n    setWarnWhen,\n}) => {\n    const navigator = useContext(NavigationContext).navigator as History;\n\n    useEffect(() => {\n        if (!when) return;\n\n        const unblock = navigator.block((transition: any) => {\n            if (window.confirm(message)) {\n                setWarnWhen?.(false);\n                unblock();\n                transition.retry();\n            } else {\n                navigator.location.pathname = window.location.pathname;\n            }\n        });\n        return unblock;\n    }, [when, location, message]);\n\n    return null;\n};\n"],"mappings":"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","names":["src_exports","__export","BrowserRouterComponent","HashRouterComponent","MemoryRouterComponent","src_default","__toCommonJS","import_refine_core","import_react_router_dom","import_react","import_react_router_dom","import_react","import_react_router_dom","import_refine_core","ResourceComponent","route","catchAll","useParams","resources","action","id","resource","res","list","create","edit","show","name","canCreate","canEdit","canShow","canDelete","options","List","Create","Edit","Show","React","RouteProvider","initialRoute","DashboardPage","LoginPage","customRoutes","isFetching","isError","isAuthenticated","CustomPathAfterLogin","pathname","search","toURL","resourceRoutes","renderAuthorized","_a","p","i","renderLoginRouteElement","DefaultLoginPage","BrowserRouterComponent","children","props","React","RouteProvider","MemoryRouterComponent","HashRouterComponent","import_react","import_react_router_dom","Prompt","message","when","setWarnWhen","navigator","NavigationContext","unblock","transition","__reExport","src_exports","RouterProvider","navigate","path","params","pathname","paramsString","Prompt","BrowserRouterComponent","src_default"]}