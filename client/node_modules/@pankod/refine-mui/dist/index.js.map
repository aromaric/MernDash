{"version":3,"sources":["../src/index.tsx","../src/components/layout/index.tsx","../src/components/layout/sider/index.tsx","../src/components/layout/header/index.tsx","../src/components/layout/title/index.tsx","../src/components/pages/login/index.tsx","../src/components/pages/ready/index.tsx","../src/components/pages/error/index.tsx","../src/components/pages/auth/index.tsx","../src/components/pages/auth/components/login/index.tsx","../src/components/pages/auth/components/styles.ts","../src/components/pages/auth/components/register/index.tsx","../src/components/pages/auth/components/forgotPassword/index.tsx","../src/components/pages/auth/components/updatePassword/index.tsx","../src/components/crud/create/index.tsx","../src/components/crud/edit/index.tsx","../src/components/crud/list/index.tsx","../src/components/crud/show/index.tsx","../src/components/buttons/create/index.tsx","../src/components/buttons/edit/index.tsx","../src/components/buttons/delete/index.tsx","../src/components/buttons/refresh/index.tsx","../src/components/buttons/show/index.tsx","../src/components/buttons/list/index.tsx","../src/components/buttons/export/index.tsx","../src/components/buttons/save/index.tsx","../src/components/buttons/clone/index.tsx","../src/components/buttons/import/index.tsx","../src/components/circularDeterminate/index.tsx","../src/components/fields/text/index.tsx","../src/components/fields/tag/index.tsx","../src/components/fields/email/index.tsx","../src/components/fields/boolean/index.tsx","../src/components/fields/date/index.tsx","../src/components/fields/file/index.tsx","../src/components/fields/url/index.tsx","../src/components/fields/number/index.tsx","../src/components/fields/markdown/index.tsx","../src/components/breadcrumb/index.tsx","../src/hooks/useAutocomplete/index.ts","../src/hooks/useDataGrid/index.ts","../src/definitions/dataGrid/index.ts","../src/hooks/useMenu/index.tsx","../src/theme/index.ts","../src/theme/palette/lightPalette.ts","../src/theme/palette/darkPalette.ts","../src/theme/typography.ts","../src/providers/notificationProvider/index.tsx","../src/providers/refineSnackbarProvider/index.tsx"],"sourcesContent":["export * from \"@mui/x-data-grid\";\nexport * from \"@mui/system\";\n\nexport { default as LoadingButton } from \"@mui/lab/LoadingButton\";\nexport * from \"@mui/lab/LoadingButton\";\n\nimport * as colors from \"@mui/material/colors\";\nimport * as locale from \"@mui/material/locale\";\n\nexport { colors };\nexport { locale };\nexport {\n    alpha,\n    createStyles,\n    createTheme,\n    css,\n    darken,\n    decomposeColor,\n    duration,\n    easing,\n    emphasize,\n    experimentalStyled,\n    experimental_extendTheme,\n    getContrastRatio,\n    getInitColorSchemeScript,\n    getLuminance,\n    hexToRgb,\n    hslToRgb,\n    keyframes,\n    lighten,\n    makeStyles,\n    recomposeColor,\n    responsiveFontSizes,\n    rgbToHex,\n    styled,\n    unstable_createMuiStrictModeTheme,\n    unstable_getUnit,\n    unstable_toUnitless,\n    useColorScheme,\n    useTheme,\n    useThemeProps,\n    withStyles,\n    ThemeProvider,\n    withTheme,\n} from \"@mui/material/styles\";\nexport type {\n    Breakpoint,\n    BreakpointOverrides,\n    Breakpoints,\n    BreakpointsOptions,\n    CSSInterpolation,\n    CSSObject,\n    ClassNameMap,\n    ColorFormat,\n    ColorObject,\n    ColorSchemeOverrides,\n    ComponentNameToClassKey,\n    Components,\n    ComponentsOverrides,\n    ComponentsProps,\n    ComponentsPropsList,\n    ComponentsVariants,\n    CreateMUIStyled,\n    DeprecatedThemeOptions,\n    Direction,\n    Duration,\n    Easing,\n    Experimental_CssVarsProvider,\n    Interpolation,\n    Opacity,\n    Palette,\n    PaletteColor,\n    PaletteColorOptions,\n    PaletteOptions,\n    SimplePaletteColorOptions,\n    StyledComponentProps,\n    SupportedColorScheme,\n    SxProps,\n    Theme,\n    ThemeOptions,\n    ThemeWithProps,\n    ThemedProps,\n    Transitions,\n    TransitionsOptions,\n    TypeAction,\n    TypeBackground,\n    TypeText,\n    TypographyStyle,\n    TypographyVariant,\n    TypographyVariants,\n    TypographyVariantsOptions,\n} from \"@mui/material/styles\";\n\n/** @deprecated not exists anymore - this type exists as a fallback for existing usages */\nexport type ThemeInput = any;\n\nexport type {\n    DefaultColorScheme,\n    ExtendedColorScheme,\n} from \"@mui/material/styles/experimental_extendTheme\";\n\nexport * from \"@mui/material/utils\";\n\nexport { default as Accordion } from \"@mui/material/Accordion\";\nexport * from \"@mui/material/Accordion\";\n\nexport { default as AccordionActions } from \"@mui/material/AccordionActions\";\nexport * from \"@mui/material/AccordionActions\";\n\nexport { default as AccordionDetails } from \"@mui/material/AccordionDetails\";\nexport * from \"@mui/material/AccordionDetails\";\n\nexport { default as AccordionSummary } from \"@mui/material/AccordionSummary\";\nexport * from \"@mui/material/AccordionSummary\";\n\nexport { default as Alert } from \"@mui/material/Alert\";\nexport * from \"@mui/material/Alert\";\n\nexport { default as AlertTitle } from \"@mui/material/AlertTitle\";\nexport * from \"@mui/material/AlertTitle\";\n\nexport { default as AppBar } from \"@mui/material/AppBar\";\nexport * from \"@mui/material/AppBar\";\n\nexport { default as Autocomplete } from \"@mui/material/Autocomplete\";\nexport * from \"@mui/material/Autocomplete\";\n\nexport { default as Avatar } from \"@mui/material/Avatar\";\nexport * from \"@mui/material/Avatar\";\n\nexport { default as AvatarGroup } from \"@mui/material/AvatarGroup\";\nexport * from \"@mui/material/AvatarGroup\";\n\nexport { default as Backdrop } from \"@mui/material/Backdrop\";\nexport * from \"@mui/material/Backdrop\";\n\nexport { default as Badge } from \"@mui/material/Badge\";\nexport * from \"@mui/material/Badge\";\n\nexport { default as BottomNavigation } from \"@mui/material/BottomNavigation\";\nexport * from \"@mui/material/BottomNavigation\";\n\nexport { default as BottomNavigationAction } from \"@mui/material/BottomNavigationAction\";\nexport * from \"@mui/material/BottomNavigationAction\";\n\nexport { default as Box } from \"@mui/material/Box\";\n\nexport { default as Breadcrumbs } from \"@mui/material/Breadcrumbs\";\nexport * from \"@mui/material/Breadcrumbs\";\n\nexport { default as Button } from \"@mui/material/Button\";\nexport * from \"@mui/material/Button\";\n\nexport { default as ButtonBase } from \"@mui/material/ButtonBase\";\nexport * from \"@mui/material/ButtonBase\";\n\nexport { default as ButtonGroup } from \"@mui/material/ButtonGroup\";\nexport * from \"@mui/material/ButtonGroup\";\n\nexport { default as Card } from \"@mui/material/Card\";\nexport * from \"@mui/material/Card\";\n\nexport { default as CardActionArea } from \"@mui/material/CardActionArea\";\nexport * from \"@mui/material/CardActionArea\";\n\nexport { default as CardActions } from \"@mui/material/CardActions\";\nexport * from \"@mui/material/CardActions\";\n\nexport { default as CardContent } from \"@mui/material/CardContent\";\nexport * from \"@mui/material/CardContent\";\n\nexport { default as CardHeader } from \"@mui/material/CardHeader\";\nexport * from \"@mui/material/CardHeader\";\n\nexport { default as CardMedia } from \"@mui/material/CardMedia\";\nexport * from \"@mui/material/CardMedia\";\n\nexport { default as Checkbox } from \"@mui/material/Checkbox\";\nexport * from \"@mui/material/Checkbox\";\n\nexport { default as Chip } from \"@mui/material/Chip\";\nexport * from \"@mui/material/Chip\";\n\nexport { default as CircularProgress } from \"@mui/material/CircularProgress\";\nexport * from \"@mui/material/CircularProgress\";\n\nexport { default as ClickAwayListener } from \"@mui/material/ClickAwayListener\";\nexport * from \"@mui/material/ClickAwayListener\";\n\nexport { default as Collapse } from \"@mui/material/Collapse\";\nexport * from \"@mui/material/Collapse\";\n\nexport { default as Container } from \"@mui/material/Container\";\nexport type {\n    ContainerClassKey,\n    ContainerClasses,\n    ContainerProps,\n    ContainerTypeMap,\n} from \"@mui/material/Container\";\n\nexport { default as CssBaseline } from \"@mui/material/CssBaseline\";\nexport * from \"@mui/material/CssBaseline\";\n\nexport { default as darkScrollbar } from \"@mui/material/darkScrollbar\";\nexport * from \"@mui/material/darkScrollbar\";\n\nexport { default as Dialog } from \"@mui/material/Dialog\";\nexport * from \"@mui/material/Dialog\";\n\nexport { default as DialogActions } from \"@mui/material/DialogActions\";\nexport * from \"@mui/material/DialogActions\";\n\nexport { default as DialogContent } from \"@mui/material/DialogContent\";\nexport * from \"@mui/material/DialogContent\";\n\nexport { default as DialogContentText } from \"@mui/material/DialogContentText\";\nexport * from \"@mui/material/DialogContentText\";\n\nexport { default as DialogTitle } from \"@mui/material/DialogTitle\";\nexport * from \"@mui/material/DialogTitle\";\n\nexport { default as Divider } from \"@mui/material/Divider\";\nexport * from \"@mui/material/Divider\";\n\nexport { default as Drawer } from \"@mui/material/Drawer\";\nexport * from \"@mui/material/Drawer\";\n\nexport { default as Fab } from \"@mui/material/Fab\";\nexport * from \"@mui/material/Fab\";\n\nexport { default as Fade } from \"@mui/material/Fade\";\nexport * from \"@mui/material/Fade\";\n\nexport { default as FilledInput } from \"@mui/material/FilledInput\";\nexport * from \"@mui/material/FilledInput\";\n\nexport { default as FormControl } from \"@mui/material/FormControl\";\nexport * from \"@mui/material/FormControl\";\n\nexport { default as FormControlLabel } from \"@mui/material/FormControlLabel\";\nexport * from \"@mui/material/FormControlLabel\";\n\nexport { default as FormGroup } from \"@mui/material/FormGroup\";\nexport * from \"@mui/material/FormGroup\";\n\nexport { default as FormHelperText } from \"@mui/material/FormHelperText\";\nexport * from \"@mui/material/FormHelperText\";\n\nexport { default as FormLabel } from \"@mui/material/FormLabel\";\nexport * from \"@mui/material/FormLabel\";\n\nexport { default as Grid } from \"@mui/material/Grid\";\nexport { getGridUtilityClass, gridClasses } from \"@mui/material/Grid\";\nexport type {\n    GridClassKey,\n    GridClasses,\n    GridDirection,\n    GridProps,\n    GridSize,\n    GridSpacing,\n    GridTypeMap,\n    GridWrap,\n} from \"@mui/material/Grid\";\n\nexport { default as Grow } from \"@mui/material/Grow\";\nexport * from \"@mui/material/Grow\";\n\nexport { default as Hidden } from \"@mui/material/Hidden\";\nexport * from \"@mui/material/Hidden\";\n\nexport { default as Icon } from \"@mui/material/Icon\";\nexport * from \"@mui/material/Icon\";\n\nexport { default as IconButton } from \"@mui/material/IconButton\";\nexport * from \"@mui/material/IconButton\";\n\nexport { default as ImageList } from \"@mui/material/ImageList\";\nexport * from \"@mui/material/ImageList\";\n\nexport { default as ImageListItem } from \"@mui/material/ImageListItem\";\nexport * from \"@mui/material/ImageListItem\";\n\nexport { default as ImageListItemBar } from \"@mui/material/ImageListItemBar\";\nexport * from \"@mui/material/ImageListItemBar\";\n\nexport { default as Input } from \"@mui/material/Input\";\nexport * from \"@mui/material/Input\";\n\nexport { default as InputAdornment } from \"@mui/material/InputAdornment\";\nexport * from \"@mui/material/InputAdornment\";\n\nexport { default as InputBase } from \"@mui/material/InputBase\";\nexport * from \"@mui/material/InputBase\";\n\nexport { default as InputLabel } from \"@mui/material/InputLabel\";\nexport * from \"@mui/material/InputLabel\";\n\nexport { default as LinearProgress } from \"@mui/material/LinearProgress\";\nexport * from \"@mui/material/LinearProgress\";\n\nexport { default as Link } from \"@mui/material/Link\";\nexport * from \"@mui/material/Link\";\n\nexport { default as MuiList } from \"@mui/material/List\";\nexport { getListUtilityClass, listClasses } from \"@mui/material/List\";\nexport type {\n    ExtendList,\n    ExtendListTypeMap,\n    ListClassKey,\n    ListClasses,\n    ListProps as MuiListProps,\n    ListTypeMap,\n} from \"@mui/material/List\";\n\nexport { default as ListItem } from \"@mui/material/ListItem\";\nexport * from \"@mui/material/ListItem\";\n\nexport { default as ListItemAvatar } from \"@mui/material/ListItemAvatar\";\nexport * from \"@mui/material/ListItemAvatar\";\n\nexport { default as ListItemButton } from \"@mui/material/ListItemButton\";\nexport * from \"@mui/material/ListItemButton\";\n\nexport { default as ListItemIcon } from \"@mui/material/ListItemIcon\";\nexport * from \"@mui/material/ListItemIcon\";\n\nexport { default as ListItemSecondaryAction } from \"@mui/material/ListItemSecondaryAction\";\nexport * from \"@mui/material/ListItemSecondaryAction\";\n\nexport { default as ListItemText } from \"@mui/material/ListItemText\";\nexport * from \"@mui/material/ListItemText\";\n\nexport { default as ListSubheader } from \"@mui/material/ListSubheader\";\nexport * from \"@mui/material/ListSubheader\";\n\nexport { default as Menu } from \"@mui/material/Menu\";\nexport * from \"@mui/material/Menu\";\n\nexport { default as MenuItem } from \"@mui/material/MenuItem\";\nexport * from \"@mui/material/MenuItem\";\n\nexport { default as MenuList } from \"@mui/material/MenuList\";\nexport * from \"@mui/material/MenuList\";\n\nexport { default as MobileStepper } from \"@mui/material/MobileStepper\";\nexport * from \"@mui/material/MobileStepper\";\n\nexport { default as Modal } from \"@mui/material/Modal\";\nexport * from \"@mui/material/Modal\";\n\nexport { default as NativeSelect } from \"@mui/material/NativeSelect\";\nexport * from \"@mui/material/NativeSelect\";\n\nexport { default as NoSsr } from \"@mui/material/NoSsr\";\nexport * from \"@mui/material/NoSsr\";\n\nexport { default as OutlinedInput } from \"@mui/material/OutlinedInput\";\nexport * from \"@mui/material/OutlinedInput\";\n\nexport { default as Pagination } from \"@mui/material/Pagination\";\nexport * from \"@mui/material/Pagination\";\n\nexport { default as PaginationItem } from \"@mui/material/PaginationItem\";\nexport * from \"@mui/material/PaginationItem\";\n\nexport { default as Paper } from \"@mui/material/Paper\";\nexport * from \"@mui/material/Paper\";\n\nexport { default as Popover } from \"@mui/material/Popover\";\nexport * from \"@mui/material/Popover\";\n\nexport { default as Popper } from \"@mui/material/Popper\";\nexport * from \"@mui/material/Popper\";\n\nexport { default as Portal } from \"@mui/material/Portal\";\nexport * from \"@mui/material/Portal\";\n\nexport { default as Radio } from \"@mui/material/Radio\";\nexport * from \"@mui/material/Radio\";\n\nexport { default as RadioGroup } from \"@mui/material/RadioGroup\";\nexport * from \"@mui/material/RadioGroup\";\n\nexport { default as Rating } from \"@mui/material/Rating\";\nexport * from \"@mui/material/Rating\";\n\nexport { default as ScopedCssBaseline } from \"@mui/material/ScopedCssBaseline\";\nexport * from \"@mui/material/ScopedCssBaseline\";\n\nexport { default as Select } from \"@mui/material/Select\";\nexport * from \"@mui/material/Select\";\n\nexport { default as Skeleton } from \"@mui/material/Skeleton\";\nexport * from \"@mui/material/Skeleton\";\n\nexport { default as Slide } from \"@mui/material/Slide\";\nexport * from \"@mui/material/Slide\";\n\nexport { default as Slider } from \"@mui/material/Slider\";\nexport * from \"@mui/material/Slider\";\n\nexport { default as Snackbar } from \"@mui/material/Snackbar\";\nexport * from \"@mui/material/Snackbar\";\n\nexport { default as SnackbarContent } from \"@mui/material/SnackbarContent\";\nexport * from \"@mui/material/SnackbarContent\";\n\nexport { default as SpeedDial } from \"@mui/material/SpeedDial\";\nexport * from \"@mui/material/SpeedDial\";\n\nexport { default as SpeedDialAction } from \"@mui/material/SpeedDialAction\";\nexport * from \"@mui/material/SpeedDialAction\";\n\nexport { default as SpeedDialIcon } from \"@mui/material/SpeedDialIcon\";\nexport * from \"@mui/material/SpeedDialIcon\";\n\nexport { default as Stack } from \"@mui/material/Stack\";\nexport type { StackProps, StackTypeMap } from \"@mui/material/Stack\";\n\nexport { default as Step } from \"@mui/material/Step\";\nexport * from \"@mui/material/Step\";\n\nexport { default as StepButton } from \"@mui/material/StepButton\";\nexport * from \"@mui/material/StepButton\";\n\nexport { default as StepConnector } from \"@mui/material/StepConnector\";\nexport * from \"@mui/material/StepConnector\";\n\nexport { default as StepContent } from \"@mui/material/StepContent\";\nexport * from \"@mui/material/StepContent\";\n\nexport { default as StepIcon } from \"@mui/material/StepIcon\";\nexport * from \"@mui/material/StepIcon\";\n\nexport { default as StepLabel } from \"@mui/material/StepLabel\";\nexport * from \"@mui/material/StepLabel\";\n\nexport { default as Stepper } from \"@mui/material/Stepper\";\nexport * from \"@mui/material/Stepper\";\n\nexport { default as SvgIcon } from \"@mui/material/SvgIcon\";\nexport * from \"@mui/material/SvgIcon\";\n\nexport { default as SwipeableDrawer } from \"@mui/material/SwipeableDrawer\";\nexport * from \"@mui/material/SwipeableDrawer\";\n\nexport { default as Switch } from \"@mui/material/Switch\";\nexport * from \"@mui/material/Switch\";\n\nexport { default as Tab } from \"@mui/material/Tab\";\nexport * from \"@mui/material/Tab\";\n\nexport { default as Table } from \"@mui/material/Table\";\nexport * from \"@mui/material/Table\";\n\nexport { default as TableBody } from \"@mui/material/TableBody\";\nexport * from \"@mui/material/TableBody\";\n\nexport { default as TableCell } from \"@mui/material/TableCell\";\nexport * from \"@mui/material/TableCell\";\n\nexport { default as TableContainer } from \"@mui/material/TableContainer\";\nexport * from \"@mui/material/TableContainer\";\n\nexport { default as TableFooter } from \"@mui/material/TableFooter\";\nexport * from \"@mui/material/TableFooter\";\n\nexport { default as TableHead } from \"@mui/material/TableHead\";\nexport * from \"@mui/material/TableHead\";\n\nexport { default as TablePagination } from \"@mui/material/TablePagination\";\nexport * from \"@mui/material/TablePagination\";\n\nexport { default as TableRow } from \"@mui/material/TableRow\";\nexport * from \"@mui/material/TableRow\";\n\nexport { default as TableSortLabel } from \"@mui/material/TableSortLabel\";\nexport * from \"@mui/material/TableSortLabel\";\n\nexport { default as Tabs } from \"@mui/material/Tabs\";\nexport * from \"@mui/material/Tabs\";\n\nexport { default as TabScrollButton } from \"@mui/material/TabScrollButton\";\nexport * from \"@mui/material/TabScrollButton\";\n\nexport { default as TextField } from \"@mui/material/TextField\";\nexport { textFieldClasses } from \"@mui/material/TextField\";\nexport type {\n    BaseTextFieldProps,\n    FilledTextFieldProps,\n    OutlinedTextFieldProps,\n    StandardTextFieldProps,\n    TextFieldClassKey,\n    TextFieldClasses,\n    TextFieldProps as MuiTextFieldProps,\n    TextFieldPropsColorOverrides,\n    TextFieldPropsSizeOverrides,\n    getTextFieldUtilityClass,\n} from \"@mui/material/TextField\";\n\nexport { default as TextareaAutosize } from \"@mui/material/TextareaAutosize\";\nexport * from \"@mui/material/TextareaAutosize\";\n\nexport { default as ToggleButton } from \"@mui/material/ToggleButton\";\nexport * from \"@mui/material/ToggleButton\";\n\nexport { default as ToggleButtonGroup } from \"@mui/material/ToggleButtonGroup\";\nexport * from \"@mui/material/ToggleButtonGroup\";\n\nexport { default as Toolbar } from \"@mui/material/Toolbar\";\nexport * from \"@mui/material/Toolbar\";\n\nexport { default as Tooltip } from \"@mui/material/Tooltip\";\nexport * from \"@mui/material/Tooltip\";\n\nexport { default as Typography } from \"@mui/material/Typography\";\nexport {\n    getTypographyUtilityClass,\n    typographyClasses,\n} from \"@mui/material/Typography\";\nexport type {\n    TypographyClassKey,\n    TypographyClasses,\n    TypographyPropsVariantOverrides,\n    TypographyProps,\n    TypographyTypeMap,\n} from \"@mui/material/Typography\";\n\nexport { default as useMediaQuery } from \"@mui/material/useMediaQuery\";\nexport * from \"@mui/material/useMediaQuery\";\n\nexport { default as usePagination } from \"@mui/material/usePagination\";\nexport * from \"@mui/material/usePagination\";\n\nexport { default as useScrollTrigger } from \"@mui/material/useScrollTrigger\";\nexport * from \"@mui/material/useScrollTrigger\";\n\nexport { default as Zoom } from \"@mui/material/Zoom\";\nexport * from \"@mui/material/Zoom\";\n\nexport { default as useMuiAutocomplete } from \"@mui/material/useAutocomplete\";\n\nexport { default as GlobalStyles } from \"@mui/material/GlobalStyles\";\n\nexport { default as unstable_composeClasses } from \"@mui/base/composeClasses\";\n\nexport { default as generateUtilityClass } from \"@mui/base/generateUtilityClass\";\nexport * from \"@mui/base/generateUtilityClass\";\n\nexport { default as generateUtilityClasses } from \"@mui/base/generateUtilityClasses\";\n\n/** Notistack */\n/**\n * Part of the following typing and documentation is from material-ui/src/Snackbar/Snackbar.d.ts\n */\nexport {\n    SnackbarProvider,\n    withSnackbar,\n    SnackbarContent as NotistackSnackbarContent,\n    useSnackbar,\n} from \"notistack\";\n\nexport type {\n    WithSnackbarProps,\n    SnackbarKey,\n    ProviderContext,\n    VariantType,\n    CloseReason,\n    SnackbarMessage,\n    SnackbarAction,\n    SnackbarContentCallback,\n    TransitionCloseHandler,\n    TransitionEnterHandler,\n    TransitionHandler,\n    ContainerClassKey as NotistackContainerClassKey,\n    VariantClassKey,\n    CombinedClassKey,\n    SnackbarOrigin,\n    IconVariant,\n    TransitionHandlerProps,\n    SnackbarContentProps,\n    SnackbarProps,\n    SharedProps,\n    OptionsObject,\n    SnackbarProviderProps,\n} from \"notistack\";\n\nexport * from \"./components\";\nexport * from \"./hooks\";\nexport * from \"./theme\";\nexport * from \"./providers\";\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\n\nimport { RefineLayoutLayoutProps } from \"./types\";\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\n\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n    Sider,\n    Header,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box display=\"flex\" flexDirection=\"row\">\n            <SiderToRender />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    minHeight: \"100vh\",\n                }}\n            >\n                <HeaderToRender />\n                <Box\n                    component=\"main\"\n                    sx={{\n                        p: { xs: 1, md: 2, lg: 3 },\n                        flexGrow: 1,\n                        bgcolor: (theme) => theme.palette.background.default,\n                    }}\n                >\n                    {children}\n                </Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    Box,\n    Drawer,\n    List,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Collapse,\n    Tooltip,\n    Button,\n    IconButton,\n} from \"@mui/material\";\nimport {\n    ListOutlined,\n    Logout,\n    ExpandLess,\n    ExpandMore,\n    ChevronLeft,\n    ChevronRight,\n    MenuRounded,\n    Dashboard,\n} from \"@mui/icons-material\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLogout,\n    useTitle,\n    useTranslate,\n    useRouterContext,\n    useMenu,\n    useRefineContext,\n} from \"@pankod/refine-core\";\nimport { RefineLayoutSiderProps } from \"../types\";\n\nimport { Title as DefaultTitle } from \"@components\";\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({ render }) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const [opened, setOpened] = useState(false);\n\n    const drawerWidth = () => {\n        if (collapsed) return 64;\n        return 200;\n    };\n\n    const t = useTranslate();\n    const { Link } = useRouterContext();\n    const { hasDashboard } = useRefineContext();\n    const translate = useTranslate();\n\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu();\n    const isExistAuthentication = useIsExistAuthentication();\n    const { mutate: mutateLogout } = useLogout();\n    const Title = useTitle();\n\n    const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n    React.useEffect(() => {\n        setOpen((previous) => {\n            const previousKeys: string[] = Object.keys(previous);\n            const previousOpenKeys = previousKeys.filter(\n                (key) => previous[key],\n            );\n\n            const uniqueKeys = new Set([\n                ...previousOpenKeys,\n                ...defaultOpenKeys,\n            ]);\n            const uniqueKeysRecord = Object.fromEntries(\n                Array.from(uniqueKeys.values()).map((key) => [key, true]),\n            );\n            return uniqueKeysRecord;\n        });\n    }, [defaultOpenKeys]);\n\n    const RenderToTitle = Title ?? DefaultTitle;\n\n    const handleClick = (key: string) => {\n        setOpen({ ...open, [key]: !open[key] });\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const { icon, label, route, name, children, parentName } = item;\n            const isOpen = open[route || \"\"] || false;\n\n            const isSelected = route === selectedKey;\n            const isNested = !(parentName === undefined);\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={route}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <div key={route}>\n                            <Tooltip\n                                title={label ?? name}\n                                placement=\"right\"\n                                disableHoverListener={!collapsed}\n                                arrow\n                            >\n                                <ListItemButton\n                                    onClick={() => {\n                                        if (collapsed) {\n                                            setCollapsed(false);\n                                            if (!isOpen) {\n                                                handleClick(route || \"\");\n                                            }\n                                        } else {\n                                            handleClick(route || \"\");\n                                        }\n                                    }}\n                                    sx={{\n                                        pl: isNested ? 4 : 2,\n                                        justifyContent: \"center\",\n                                        \"&.Mui-selected\": {\n                                            \"&:hover\": {\n                                                backgroundColor: \"transparent\",\n                                            },\n                                            backgroundColor: \"transparent\",\n                                        },\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            justifyContent: \"center\",\n                                            minWidth: 36,\n                                            color: \"primary.contrastText\",\n                                        }}\n                                    >\n                                        {icon ?? <ListOutlined />}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={label}\n                                        primaryTypographyProps={{\n                                            noWrap: true,\n                                            fontSize: \"14px\",\n                                            fontWeight: isSelected\n                                                ? \"bold\"\n                                                : \"normal\",\n                                        }}\n                                    />\n                                    {!collapsed &&\n                                        (isOpen ? (\n                                            <ExpandLess />\n                                        ) : (\n                                            <ExpandMore />\n                                        ))}\n                                </ListItemButton>\n                            </Tooltip>\n                            {!collapsed && (\n                                <Collapse\n                                    in={open[route || \"\"]}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                >\n                                    <List component=\"div\" disablePadding>\n                                        {renderTreeView(children, selectedKey)}\n                                    </List>\n                                </Collapse>\n                            )}\n                        </div>\n                    </CanAccess>\n                );\n            }\n\n            return (\n                <CanAccess\n                    key={route}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{ resource: item }}\n                >\n                    <Tooltip\n                        title={label ?? name}\n                        placement=\"right\"\n                        disableHoverListener={!collapsed}\n                        arrow\n                    >\n                        <ListItemButton\n                            component={Link}\n                            to={route}\n                            selected={isSelected}\n                            onClick={() => {\n                                setOpened(false);\n                            }}\n                            sx={{\n                                pl: isNested ? 4 : 2,\n                                py: isNested ? 1.25 : 1,\n                                \"&.Mui-selected\": {\n                                    \"&:hover\": {\n                                        backgroundColor: \"transparent\",\n                                    },\n                                    backgroundColor: \"transparent\",\n                                },\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <ListItemIcon\n                                sx={{\n                                    justifyContent: \"center\",\n                                    minWidth: 36,\n                                    color: \"primary.contrastText\",\n                                }}\n                            >\n                                {icon ?? <ListOutlined />}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={label}\n                                primaryTypographyProps={{\n                                    noWrap: true,\n                                    fontSize: \"14px\",\n                                    fontWeight: isSelected ? \"bold\" : \"normal\",\n                                }}\n                            />\n                        </ListItemButton>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                title={translate(\"dashboard.title\", \"Dashboard\")}\n                placement=\"right\"\n                disableHoverListener={!collapsed}\n                arrow\n            >\n                <ListItemButton\n                    component={Link}\n                    to=\"/\"\n                    selected={selectedKey === \"/\"}\n                    onClick={() => {\n                        setOpened(false);\n                    }}\n                    sx={{\n                        pl: 2,\n                        py: 1,\n                        \"&.Mui-selected\": {\n                            \"&:hover\": {\n                                backgroundColor: \"transparent\",\n                            },\n                            backgroundColor: \"transparent\",\n                        },\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <ListItemIcon\n                        sx={{\n                            justifyContent: \"center\",\n                            minWidth: 36,\n                            color: \"primary.contrastText\",\n                        }}\n                    >\n                        <Dashboard />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={translate(\"dashboard.title\", \"Dashboard\")}\n                        primaryTypographyProps={{\n                            noWrap: true,\n                            fontSize: \"14px\",\n                            fontWeight: selectedKey === \"/\" ? \"bold\" : \"normal\",\n                        }}\n                    />\n                </ListItemButton>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const logout = isExistAuthentication && (\n        <Tooltip\n            title={t(\"buttons.logout\", \"Logout\")}\n            placement=\"right\"\n            disableHoverListener={!collapsed}\n            arrow\n        >\n            <ListItemButton\n                key=\"logout\"\n                onClick={() => mutateLogout()}\n                sx={{ justifyContent: \"center\" }}\n            >\n                <ListItemIcon\n                    sx={{\n                        justifyContent: \"center\",\n                        minWidth: 36,\n                        color: \"primary.contrastText\",\n                    }}\n                >\n                    <Logout />\n                </ListItemIcon>\n                <ListItemText\n                    primary={t(\"buttons.logout\", \"Logout\")}\n                    primaryTypographyProps={{\n                        noWrap: true,\n                        fontSize: \"14px\",\n                    }}\n                />\n            </ListItemButton>\n        </Tooltip>\n    );\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const drawer = (\n        <List disablePadding sx={{ mt: 1, color: \"primary.contrastText\" }}>\n            {renderSider()}\n        </List>\n    );\n\n    return (\n        <>\n            <Box\n                sx={{\n                    width: { xs: drawerWidth() },\n                    display: {\n                        xs: \"none\",\n                        md: \"block\",\n                    },\n                    transition: \"width 0.3s ease\",\n                }}\n            />\n            <Box\n                component=\"nav\"\n                sx={{\n                    position: \"fixed\",\n                    zIndex: 1101,\n                    width: { sm: drawerWidth() },\n                    display: \"flex\",\n                }}\n            >\n                <Drawer\n                    variant=\"temporary\"\n                    open={opened}\n                    onClose={() => setOpened(false)}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    sx={{\n                        display: { sm: \"block\", md: \"none\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: 256,\n                            bgcolor: \"secondary.main\",\n                        },\n                    }}\n                >\n                    <Box\n                        sx={{\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    {drawer}\n                </Drawer>\n                <Drawer\n                    variant=\"permanent\"\n                    PaperProps={{ elevation: 1 }}\n                    sx={{\n                        display: { xs: \"none\", md: \"block\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: drawerWidth,\n                            bgcolor: \"secondary.main\",\n                            overflow: \"hidden\",\n                            transition:\n                                \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n                        },\n                    }}\n                    open\n                >\n                    <Box\n                        sx={{\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <RenderToTitle collapsed={collapsed} />\n                    </Box>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            overflowX: \"hidden\",\n                            overflowY: \"auto\",\n                        }}\n                    >\n                        {drawer}\n                    </Box>\n                    <Button\n                        sx={{\n                            background: \"rgba(0,0,0,.5)\",\n                            color: \"primary.contrastText\",\n                            textAlign: \"center\",\n                            borderRadius: 0,\n                            borderTop: \"1px solid #ffffff1a\",\n                        }}\n                        fullWidth\n                        size=\"large\"\n                        onClick={() => setCollapsed((prev) => !prev)}\n                    >\n                        {collapsed ? <ChevronRight /> : <ChevronLeft />}\n                    </Button>\n                </Drawer>\n                <Box\n                    sx={{\n                        display: { xs: \"block\", md: \"none\" },\n                        position: \"fixed\",\n                        top: \"64px\",\n                        left: \"0px\",\n                        borderRadius: \"0 6px 6px 0\",\n                        bgcolor: \"secondary.main\",\n                        zIndex: 1199,\n                        width: \"36px\",\n                    }}\n                >\n                    <IconButton\n                        sx={{ color: \"#fff\", width: \"36px\" }}\n                        onClick={() => setOpened((prev) => !prev)}\n                    >\n                        <MenuRounded />\n                    </IconButton>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity } from \"@pankod/refine-core\";\nimport { AppBar, Stack, Toolbar, Typography, Avatar } from \"@mui/material\";\n\nimport { RefineLayoutHeaderProps } from \"../types\";\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n    const { data: user } = useGetIdentity();\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    return shouldRenderHeader ? (\n        <AppBar color=\"default\" position=\"sticky\" elevation={1}>\n            <Toolbar>\n                <Stack\n                    direction=\"row\"\n                    width=\"100%\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                >\n                    <Stack\n                        direction=\"row\"\n                        gap=\"16px\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        <Typography variant=\"subtitle2\">\n                            {user?.name}\n                        </Typography>\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    </Stack>\n                </Stack>\n            </Toolbar>\n        </AppBar>\n    ) : null;\n};\n","import React from \"react\";\nimport { useRouterContext, TitleProps } from \"@pankod/refine-core\";\nimport { Button } from \"@mui/material\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n    const { Link } = useRouterContext();\n\n    return (\n        <Button fullWidth variant=\"text\" disableRipple>\n            <Link to=\"/\">\n                {collapsed ? (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n                        alt=\"Refine\"\n                        width=\"28px\"\n                        style={{ maxHeight: \"38px\" }}\n                    />\n                ) : (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                        alt=\"Refine\"\n                        width=\"140px\"\n                    />\n                )}\n            </Link>\n        </Button>\n    );\n};\n","import * as React from \"react\";\nimport { LoginPageProps } from \"@pankod/refine-core\";\nimport { useForm } from \"@pankod/refine-react-hook-form\";\nimport {\n    Button,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Box,\n    Typography,\n    Container,\n    Card,\n    CardContent,\n} from \"@mui/material\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useLogin,\n    useTranslate,\n} from \"@pankod/refine-core\";\n\ntype ILoginForm = {\n    username: string;\n    password: string;\n    remember?: boolean;\n};\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-references/components/refine-config#loginpage} for more details.\n */\nexport const LoginPage: React.FC<LoginPageProps> = () => {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ILoginForm>();\n\n    const { mutate: login, isLoading } = useLogin<ILoginForm>();\n    const translate = useTranslate();\n\n    return (\n        <>\n            <Box\n                component=\"div\"\n                sx={{\n                    background: `radial-gradient(50% 50% at 50% 50%, #63386A 0%, #310438 100%)`,\n                    backgroundSize: \"cover\",\n                }}\n            >\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div>\n                            <img\n                                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                                alt=\"Refine Logo\"\n                                style={{ maxWidth: 200 }}\n                            />\n                        </div>\n                        <Box mt={4}>\n                            <Card>\n                                <CardContent sx={{ paddingX: \"32px\" }}>\n                                    <Typography\n                                        component=\"h1\"\n                                        variant=\"h5\"\n                                        align=\"center\"\n                                        sx={{\n                                            fontWeight: \"700\",\n                                            margin: \"12px 0\",\n                                        }}\n                                    >\n                                        {translate(\n                                            \"pages.login.title\",\n                                            \"Sign in your account\",\n                                        )}\n                                    </Typography>\n                                    <Box\n                                        component=\"form\"\n                                        onSubmit={handleSubmit((data) => {\n                                            login(data);\n                                        })}\n                                        gap=\"16px\"\n                                    >\n                                        <TextField\n                                            {...register(\"username\", {\n                                                required: true,\n                                            })}\n                                            id=\"username\"\n                                            margin=\"normal\"\n                                            size=\"small\"\n                                            fullWidth\n                                            label={translate(\n                                                \"pages.login.username\",\n                                                \"Username\",\n                                            )}\n                                            name=\"username\"\n                                            autoComplete=\"username\"\n                                            autoFocus\n                                        />\n                                        <TextField\n                                            {...register(\"password\", {\n                                                required: true,\n                                            })}\n                                            id=\"password\"\n                                            size=\"small\"\n                                            margin=\"normal\"\n                                            fullWidth\n                                            name=\"password\"\n                                            label={translate(\n                                                \"pages.login.password\",\n                                                \"Password\",\n                                            )}\n                                            helperText={\n                                                errors?.password?.message\n                                            }\n                                            type=\"password\"\n                                            placeholder=\"●●●●●●●●\"\n                                            autoComplete=\"current-password\"\n                                        />\n                                        <Box\n                                            component=\"div\"\n                                            sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"space-between\",\n                                                alignItems: \"center\",\n                                            }}\n                                        >\n                                            <FormControlLabel\n                                                sx={{\n                                                    span: {\n                                                        fontSize: \"12px\",\n                                                        color: \"text.secondary\",\n                                                    },\n                                                }}\n                                                color=\"secondary\"\n                                                control={\n                                                    <Checkbox\n                                                        size=\"small\"\n                                                        id=\"remember\"\n                                                        {...register(\n                                                            \"remember\",\n                                                        )}\n                                                    />\n                                                }\n                                                label={translate(\n                                                    \"pages.login.remember\",\n                                                    \"Remember me\",\n                                                )}\n                                            />\n                                            <Link\n                                                href=\"#\"\n                                                sx={{\n                                                    fontSize: \"12px\",\n                                                    textDecoration: \"none\",\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        fontSize: \"12px\",\n                                                    }}\n                                                >\n                                                    {translate(\n                                                        \"pages.login.forgotPassword\",\n                                                        \"Forgot password?\",\n                                                    )}\n                                                </Typography>\n                                            </Link>\n                                        </Box>\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            sx={{\n                                                my: \"8px\",\n                                                color: \"white\",\n                                            }}\n                                            disabled={isLoading}\n                                        >\n                                            {translate(\n                                                \"pages.login.signin\",\n                                                \"Sign in\",\n                                            )}\n                                        </Button>\n                                        <Box style={{ marginTop: 8 }}>\n                                            <Typography variant=\"subtitle2\">\n                                                {translate(\n                                                    \"pages.login.noAccount\",\n                                                    \"Don’t have an account?\",\n                                                )}{\" \"}\n                                                <Link\n                                                    underline=\"none\"\n                                                    href=\"#\"\n                                                    style={{\n                                                        fontWeight: \"bold\",\n                                                    }}\n                                                >\n                                                    {translate(\n                                                        \"pages.login.signup\",\n                                                        \"Sign up\",\n                                                    )}\n                                                </Link>\n                                            </Typography>\n                                        </Box>\n                                    </Box>\n                                </CardContent>\n                            </Card>\n                        </Box>\n                    </Box>\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport { RefineReadyPageProps } from \"@pankod/refine-ui-types\";\nimport { Stack, Grid, Typography, Button, Link } from \"@mui/material\";\n\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n    const renderCode = (text: string) => (\n        <Typography\n            sx={{\n                backgroundColor: (theme) =>\n                    theme.palette.secondary.contrastText,\n                color: (theme) => theme.palette.secondary.main,\n                display: \"inline-block\",\n                fontFamily: \"monospace\",\n            }}\n        >\n            {text}\n        </Typography>\n    );\n    return (\n        <>\n            <Grid\n                container\n                sx={{\n                    backgroundColor: (theme) => theme.palette.secondary.main,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100vh\",\n                    backgroundImage:\n                        \"url('https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png')\",\n                    backgroundSize: \"cover\",\n                }}\n                p={3}\n            >\n                <Grid\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    flex={1}\n                    alignItems=\"center\"\n                    color={(theme) => theme.palette.primary.contrastText}\n                >\n                    <Typography display=\"flex\" justifyContent=\"center\">\n                        <img\n                            style={{ marginBottom: \"48px\" }}\n                            src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                            alt=\"Refine Logo\"\n                        />\n                    </Typography>\n                    <Typography\n                        variant=\"h2\"\n                        fontWeight=\"bold\"\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        Welcome on board\n                    </Typography>\n                    <Typography variant=\"h5\" mt={2}>\n                        Your configuration is completed.\n                    </Typography>\n                    <Typography variant=\"h6\" mt={2}>\n                        Now you can get started by adding your resources to the{\" \"}\n                        {renderCode(`resources`)} property of{\" \"}\n                        {renderCode(`Refine`)}\n                    </Typography>\n                    <Grid\n                        item\n                        sm={12}\n                        mt={12}\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        <Stack\n                            spacing={2}\n                            direction={{ xs: \"column\", sm: \"row\" }}\n                        >\n                            <Link\n                                href=\"https://refine.dev\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Documentation\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://refine.dev/examples\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Examples\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://discord.gg/refine\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Community\n                                </Button>\n                            </Link>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ResourceErrorRouterParams } from \"@pankod/refine-core\";\nimport { RefineErrorPageProps } from \"@pankod/refine-ui-types\";\nimport {\n    useNavigation,\n    useTranslate,\n    useResourceWithRoute,\n    useRouterContext,\n} from \"@pankod/refine-core\";\nimport { Stack, Button, Tooltip, Typography, Grid } from \"@mui/material\";\nimport { Info } from \"@mui/icons-material\";\n\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const { push } = useNavigation();\n    const translate = useTranslate();\n    const actionTypes = [\"edit\", \"create\", \"show\"];\n\n    const { useParams } = useRouterContext();\n\n    const params = useParams<ResourceErrorRouterParams>();\n    const resource = useResourceWithRoute();\n\n    useEffect(() => {\n        const action = params.action ?? \"list\";\n        const resourceName = params.resource;\n        setErrorMessage(\n            translate(\n                \"pages.error.info\",\n                {\n                    action,\n                    resource: resourceName,\n                },\n                `You may have forgotten to add the \"${action}\" component to \"${resourceName}\" resource.`,\n            ),\n        );\n        if (resourceName) {\n            const resourceFromRoute = resource(resourceName);\n            if (\n                action &&\n                actionTypes.includes(action) &&\n                !resourceFromRoute[action]\n            ) {\n                setErrorMessage(\n                    translate(\n                        \"pages.error.info\",\n                        {\n                            action,\n                            resource: resourceName,\n                        },\n                        `You may have forgotten to add the \"${action}\" component to \"${resourceName}\" resource.`,\n                    ),\n                );\n            }\n        }\n    }, [params]);\n\n    return (\n        <Grid\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            mt={20}\n        >\n            <Grid\n                container\n                direction=\"column\"\n                display=\"flex\"\n                alignItems=\"center\"\n            >\n                <Typography variant=\"h1\">404</Typography>\n                <Stack direction=\"row\" spacing=\"2\">\n                    <Typography>\n                        {translate(\n                            \"pages.error.404\",\n                            \"Sorry, the page you visited does not exist.\",\n                        )}\n                    </Typography>\n\n                    {errorMessage && (\n                        <Tooltip title={errorMessage}>\n                            <Info data-testid=\"error-component-tooltip\" />\n                        </Tooltip>\n                    )}\n                </Stack>\n                <Button onClick={() => push(\"/\")}>\n                    {translate(\"pages.error.backHome\", \"Back Home\")}\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport { BoxProps, CardProps } from \"@mui/material\";\nimport { AuthPageProps, RegisterFormTypes } from \"@pankod/refine-core\";\nimport { UseFormProps } from \"@pankod/refine-react-hook-form\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nexport interface FormPropsType extends UseFormProps {\n    onSubmit?: (values: RegisterFormTypes) => void;\n}\n\nexport type AuthProps = AuthPageProps<BoxProps, CardProps, FormPropsType>;\n\n/**\n * **refine** has a default auth page form served on the `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/mui-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import * as React from \"react\";\nimport { LoginPageProps, LoginFormTypes } from \"@pankod/refine-core\";\nimport { FormProvider, useForm } from \"@pankod/refine-react-hook-form\";\nimport {\n    Button,\n    BoxProps,\n    Box,\n    Checkbox,\n    Container,\n    Card,\n    CardContent,\n    CardContentProps,\n    FormControlLabel,\n    TextField,\n    Typography,\n    Divider,\n    Link as MuiLink,\n} from \"@mui/material\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useLogin,\n    useTranslate,\n    useRouterContext,\n} from \"@pankod/refine-core\";\nimport { layoutStyles, titleStyles } from \"../styles\";\n\nimport { FormPropsType } from \"../../index\";\ntype LoginProps = LoginPageProps<BoxProps, CardContentProps, FormPropsType>;\n\n/**\n * login will be used as the default type of the <AuthPage> component. The login page will be used to log in to the system.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#login} for more details.\n */\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const methods = useForm<BaseRecord, HttpError, LoginFormTypes>({\n        ...useFormProps,\n    });\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = methods;\n\n    const { mutate: login, isLoading } = useLogin<LoginFormTypes>();\n    const translate = useTranslate();\n    const { Link } = useRouterContext();\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    {providers.map((provider: any) => {\n                        return (\n                            <Button\n                                key={provider.name}\n                                fullWidth\n                                variant=\"outlined\"\n                                sx={{\n                                    my: \"8px\",\n                                    textTransform: \"none\",\n                                }}\n                                onClick={() =>\n                                    login({ providerName: provider.name })\n                                }\n                                startIcon={provider.icon}\n                            >\n                                {provider.label}\n                            </Button>\n                        );\n                    })}\n                    <Divider style={{ fontSize: 12 }}>\n                        {translate(\"pages.login.divider\", \"or\")}\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ paddingX: \"32px\" }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                >\n                    {translate(\"pages.login.title\", \"Sign in to your account\")}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return login(data);\n                    })}\n                    gap=\"16px\"\n                >\n                    {renderProviders()}\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\"pages.login.fields.email\", \"Email\")}\n                        error={!!errors.email}\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                    />\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.login.fields.password\",\n                            \"Password\",\n                        )}\n                        helperText={errors?.password?.message}\n                        error={!!errors.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                    />\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {rememberMe ?? (\n                            <FormControlLabel\n                                sx={{\n                                    span: {\n                                        fontSize: \"14px\",\n                                        color: \"text.secondary\",\n                                    },\n                                }}\n                                color=\"secondary\"\n                                control={\n                                    <Checkbox\n                                        size=\"small\"\n                                        id=\"remember\"\n                                        {...register(\"remember\")}\n                                    />\n                                }\n                                label={translate(\n                                    \"pages.login.buttons.rememberMe\",\n                                    \"Remember me\",\n                                )}\n                            />\n                        )}\n                        {forgotPasswordLink ?? (\n                            <MuiLink\n                                variant=\"body2\"\n                                component={Link}\n                                underline=\"none\"\n                                to=\"/forgot-password\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.forgotPassword\",\n                                    \"Forgot password?\",\n                                )}\n                            </MuiLink>\n                        )}\n                    </Box>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            mt: \"8px\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\"pages.login.signin\", \"Sign in\")}\n                    </Button>\n                    {registerLink ?? (\n                        <Box style={{ marginTop: 8 }}>\n                            <Typography variant=\"body2\" component=\"span\">\n                                {translate(\n                                    \"pages.login.buttons.noAccount\",\n                                    \"Don’t have an account?\",\n                                )}\n                            </Typography>\n                            <MuiLink\n                                ml=\"8px\"\n                                variant=\"body2\"\n                                component={Link}\n                                underline=\"none\"\n                                to=\"/register\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signup\", \"Sign up\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <FormProvider {...methods}>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {renderContent ? renderContent(Content) : Content}\n                    </Box>\n                </Container>\n            </Box>\n        </FormProvider>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {\n    background: `radial-gradient(50% 50% at 50% 50%, #6813CB 0%, #2A2A42 100%)`,\n    backgroundSize: \"cover\",\n};\n\nexport const titleStyles: CSSProperties = {\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    letterSpacing: \"-0.04em\",\n    marginBottom: \"24px\",\n    overflowWrap: \"break-word\",\n    hyphens: \"manual\",\n    textOverflow: \"unset\",\n    whiteSpace: \"pre-wrap\",\n};\n","import * as React from \"react\";\nimport { RegisterFormTypes, RegisterPageProps } from \"@pankod/refine-core\";\nimport { useForm } from \"@pankod/refine-react-hook-form\";\n\nimport {\n    Button,\n    TextField,\n    Box,\n    Typography,\n    Container,\n    Card,\n    CardContent,\n    BoxProps,\n    CardContentProps,\n    Divider,\n    Link as MuiLink,\n} from \"@mui/material\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useRouterContext,\n    useRegister,\n} from \"@pankod/refine-core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\n\ntype RegisterProps = RegisterPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The register page will be used to register new users. You can use the following props for the <AuthPage> component when the type is \"register\".\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#register} for more details.\n */\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    providers,\n    formProps,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, RegisterFormTypes>({\n        ...useFormProps,\n    });\n\n    const { mutate: registerMutate, isLoading } =\n        useRegister<RegisterFormTypes>();\n    const translate = useTranslate();\n    const { Link } = useRouterContext();\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    {providers.map((provider: any) => {\n                        return (\n                            <Button\n                                key={provider.name}\n                                fullWidth\n                                variant=\"outlined\"\n                                sx={{\n                                    my: \"8px\",\n                                    textTransform: \"none\",\n                                }}\n                                onClick={() =>\n                                    registerMutate({\n                                        providerName: provider.name,\n                                    })\n                                }\n                                startIcon={provider.icon}\n                            >\n                                {provider.label}\n                            </Button>\n                        );\n                    })}\n                    <Divider style={{ fontSize: 12 }}>\n                        {translate(\"pages.login.divider\", \"or\")}\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ paddingX: \"32px\" }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                >\n                    {translate(\n                        \"pages.register.title\",\n                        \"Sign up for your account\",\n                    )}\n                </Typography>\n                {renderProviders()}\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return registerMutate(data);\n                    })}\n                    gap=\"16px\"\n                >\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\"pages.register.email\", \"Email\")}\n                        error={!!errors.email}\n                        helperText={\n                            errors[\"email\"] ? errors[\"email\"].message : \"\"\n                        }\n                        name=\"email\"\n                        autoComplete=\"email\"\n                    />\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                        helperText={\n                            errors[\"password\"] ? errors[\"password\"].message : \"\"\n                        }\n                        error={!!errors.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                    />\n\n                    {loginLink ?? (\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\n                            <Typography variant=\"body2\" component=\"span\">\n                                {translate(\n                                    \"pages.login.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}\n                            </Typography>\n                            <MuiLink\n                                ml=\"6px\"\n                                variant=\"body2\"\n                                component={Link}\n                                underline=\"none\"\n                                to=\"/login\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            my: \"8px\",\n                            color: \"white\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\"pages.register.signup\", \"Sign up\")}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Container\n                component=\"main\"\n                maxWidth=\"xs\"\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    height: \"100vh\",\n                }}\n            >\n                {renderContent ? renderContent(Content) : Content}\n            </Container>\n        </Box>\n    );\n};\n","import * as React from \"react\";\nimport {\n    ForgotPasswordPageProps,\n    ForgotPasswordFormTypes,\n} from \"@pankod/refine-core\";\nimport { useForm } from \"@pankod/refine-react-hook-form\";\nimport {\n    Button,\n    TextField,\n    Box,\n    Typography,\n    Container,\n    Card,\n    CardContent,\n    BoxProps,\n    CardContentProps,\n    Link as MuiLink,\n} from \"@mui/material\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useRouterContext,\n    useForgotPassword,\n} from \"@pankod/refine-core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The forgotPassword type is a page that allows users to reset their passwords. You can use this page to reset your password.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#forgot-password} for more details.\n */\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ForgotPasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const { mutate, isLoading } = useForgotPassword<ForgotPasswordFormTypes>();\n    const translate = useTranslate();\n    const { Link } = useRouterContext();\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ paddingX: \"32px\" }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                >\n                    {translate(\n                        \"pages.forgotPassword.title\",\n                        \"Forgot your password?\",\n                    )}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return mutate(data);\n                    })}\n                    gap=\"16px\"\n                >\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                        name=\"email\"\n                        type=\"email\"\n                        error={!!errors.email}\n                        autoComplete=\"email\"\n                    />\n                    {loginLink ?? (\n                        <Box textAlign=\"right\">\n                            <Typography variant=\"body2\" component=\"span\">\n                                {translate(\n                                    \"pages.register.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}\n                            </Typography>{\" \"}\n                            <MuiLink\n                                variant=\"body2\"\n                                component={Link}\n                                underline=\"none\"\n                                to=\"/register\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            mt: \"8px\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    {renderContent ? renderContent(Content) : Content}\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport {\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n} from \"@pankod/refine-core\";\nimport { useForm } from \"@pankod/refine-react-hook-form\";\nimport {\n    Button,\n    TextField,\n    Box,\n    Typography,\n    Container,\n    Card,\n    CardContent,\n    BoxProps,\n    CardContentProps,\n} from \"@mui/material\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useUpdatePassword,\n} from \"@pankod/refine-core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The updatePassword type is the page used to update the password of the user.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#update-password} for more details.\n */\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        watch,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, UpdatePasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const { mutate: update, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>();\n    const translate = useTranslate();\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ paddingX: \"32px\" }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                >\n                    {translate(\n                        \"pages.updatePassword.title\",\n                        \"Set New Password\",\n                    )}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return update(data);\n                    })}\n                    gap=\"16px\"\n                >\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                        helperText={errors?.password?.message}\n                        error={!!errors?.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                    />\n\n                    <TextField\n                        {...register(\"confirmPassword\", {\n                            required: true,\n                            validate: (value?: string) => {\n                                if (watch(\"password\") !== value) {\n                                    return translate(\n                                        \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                                        \"Passwords do not match\",\n                                    );\n                                }\n                                return true;\n                            },\n                        })}\n                        id=\"confirmPassword\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"confirmPassword\"\n                        label={translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                        helperText={errors?.confirmPassword?.message}\n                        error={!!errors?.confirmPassword}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-confirm-password\"\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            mt: \"8px\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    {renderContent ? renderContent(Content) : Content}\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useNavigation,\n    useResourceWithRoute,\n    useRouterContext,\n    useTranslate,\n    userFriendlyResourceName,\n    ResourceRouterParams,\n    useRefineContext,\n} from \"@pankod/refine-core\";\n\nimport {\n    Card,\n    CardHeader,\n    CardActions,\n    CardContent,\n    IconButton,\n    Typography,\n    Box,\n} from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport { Breadcrumb, SaveButton } from \"@components\";\nimport { CreateProps } from \"../types\";\n\n/**\n * `<Create>` provides us a layout to display the page.\n * It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/create} for more details.\n */\nexport const Create: React.FC<CreateProps> = ({\n    title,\n    actionButtons,\n    children,\n    saveButtonProps,\n    resource: resourceFromProps,\n    isLoading = false,\n    cardProps,\n    cardHeaderProps,\n    cardContentProps,\n    cardActionsProps,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const { goBack } = useNavigation();\n\n    const translate = useTranslate();\n\n    const { useParams } = useRouterContext();\n\n    const { resource: routeResourceName, action: routeFromAction } =\n        useParams<ResourceRouterParams>();\n\n    const resourceWithRoute = useResourceWithRoute();\n\n    const resource = resourceWithRoute(resourceFromProps ?? routeResourceName);\n\n    const { options } = useRefineContext();\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? options?.breadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const defaultFooterButtons = (\n        <SaveButton\n            {...(isLoading ? { disabled: true } : {})}\n            {...saveButtonProps}\n        />\n    );\n\n    return (\n        <Card {...(cardProps ?? {})} {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n                title={\n                    title ?? (\n                        <Typography variant=\"h5\">\n                            {translate(\n                                `${resource.name}.titles.create`,\n                                `Create ${userFriendlyResourceName(\n                                    resource.label ?? resource.name,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={routeFromAction ? goBack : undefined}\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    headerButtons ? (\n                        <Box\n                            display=\"flex\"\n                            gap=\"16px\"\n                            {...(headerButtonProps ?? {})}\n                        >\n                            {headerButtons\n                                ? typeof headerButtons === \"function\"\n                                    ? headerButtons({\n                                          defaultButtons: null,\n                                      })\n                                    : headerButtons\n                                : null}\n                        </Box>\n                    ) : undefined\n                }\n                {...(cardHeaderProps ?? {})}\n                {...(headerProps ?? {})}\n            />\n            <CardContent\n                {...(cardContentProps ?? {})}\n                {...(contentProps ?? {})}\n            >\n                {children}\n            </CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    gap: \"16px\",\n                    padding: \"16px\",\n                }}\n                {...(cardActionsProps ?? {})}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({\n                              defaultButtons: defaultFooterButtons,\n                          })\n                        : footerButtons\n                    : actionButtons\n                    ? actionButtons\n                    : defaultFooterButtons}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useResourceWithRoute,\n    useMutationMode,\n    useNavigation,\n    useTranslate,\n    useRouterContext,\n    userFriendlyResourceName,\n    ResourceRouterParams,\n    useRefineContext,\n} from \"@pankod/refine-core\";\n\nimport {\n    Card,\n    CardHeader,\n    IconButton,\n    CardContent,\n    CardActions,\n    Typography,\n    Box,\n} from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    SaveButton,\n    Breadcrumb,\n} from \"@components\";\nimport { EditProps } from \"../types\";\n\n/**\n * `<Edit>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/edit} for more details.\n */\nexport const Edit: React.FC<EditProps> = ({\n    title,\n    actionButtons,\n    saveButtonProps,\n    mutationMode: mutationModeProp,\n    recordItemId,\n    children,\n    deleteButtonProps,\n    canDelete,\n    resource: resourceFromProps,\n    isLoading = false,\n    cardProps,\n    cardHeaderProps,\n    cardContentProps,\n    cardActionsProps,\n    breadcrumb: breadcrumbFromProps,\n    dataProviderName,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n\n    const { goBack, list } = useNavigation();\n\n    const resourceWithRoute = useResourceWithRoute();\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { useParams } = useRouterContext();\n\n    const {\n        resource: routeResourceName,\n        action: routeFromAction,\n        id: idFromRoute,\n    } = useParams<ResourceRouterParams>();\n\n    const resource = resourceWithRoute(resourceFromProps ?? routeResourceName);\n\n    const isDeleteButtonVisible =\n        canDelete ?? (resource.canDelete || deleteButtonProps);\n\n    const { options } = useRefineContext();\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? options?.breadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const id = recordItemId ?? idFromRoute;\n\n    const defaultHeaderButtons = (\n        <>\n            {!recordItemId && (\n                <ListButton\n                    {...(isLoading ? { disabled: true } : {})}\n                    resourceNameOrRouteName={resource.route}\n                />\n            )}\n            <RefreshButton\n                {...(isLoading ? { disabled: true } : {})}\n                resourceNameOrRouteName={resource.route}\n                recordItemId={id}\n                dataProviderName={dataProviderName}\n            />\n        </>\n    );\n\n    const defaultFooterButtons = (\n        <>\n            {isDeleteButtonVisible && (\n                <DeleteButton\n                    {...(isLoading ? { disabled: true } : {})}\n                    mutationMode={mutationMode}\n                    variant=\"outlined\"\n                    onSuccess={() => {\n                        list(resource.route ?? resource.name);\n                    }}\n                    dataProviderName={dataProviderName}\n                    {...deleteButtonProps}\n                />\n            )}\n            <SaveButton\n                {...(isLoading ? { disabled: true } : {})}\n                {...saveButtonProps}\n            />\n        </>\n    );\n\n    return (\n        <Card {...(cardProps ?? {})} {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n                title={\n                    title ?? (\n                        <Typography variant=\"h5\">\n                            {translate(\n                                `${resource.name}.titles.edit`,\n                                `Edit ${userFriendlyResourceName(\n                                    resource.label ?? resource.name,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={routeFromAction ? goBack : undefined}\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    <Box\n                        display=\"flex\"\n                        gap=\"16px\"\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(cardHeaderProps ?? {})}\n                {...(headerProps ?? {})}\n            />\n            <CardContent\n                {...(cardContentProps ?? {})}\n                {...(contentProps ?? {})}\n            >\n                {children}\n            </CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    gap: \"16px\",\n                    padding: \"16px\",\n                }}\n                {...(cardActionsProps ?? {})}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({\n                              defaultButtons: defaultFooterButtons,\n                          })\n                        : footerButtons\n                    : actionButtons\n                    ? actionButtons\n                    : defaultFooterButtons}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useResourceWithRoute,\n    useTranslate,\n    useRouterContext,\n    userFriendlyResourceName,\n    ResourceRouterParams,\n    useRefineContext,\n} from \"@pankod/refine-core\";\n\nimport { Card, CardHeader, CardContent, Typography, Box } from \"@mui/material\";\n\nimport { CreateButton, Breadcrumb } from \"@components\";\nimport { ListProps } from \"../types\";\n\n/**\n * `<List>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/list} for more details.\n */\nexport const List: React.FC<ListProps> = ({\n    title,\n    canCreate,\n    children,\n    createButtonProps,\n    resource: resourceFromProps,\n    cardProps,\n    cardHeaderProps,\n    cardContentProps,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n}) => {\n    const { useParams } = useRouterContext();\n\n    const { resource: routeResourceName } = useParams<ResourceRouterParams>();\n\n    const translate = useTranslate();\n\n    const resourceWithRoute = useResourceWithRoute();\n\n    const resource = resourceWithRoute(resourceFromProps ?? routeResourceName);\n\n    const isCreateButtonVisible =\n        canCreate ?? (resource.canCreate || createButtonProps);\n\n    const { options } = useRefineContext();\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? options?.breadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const defaultHeaderButtons = isCreateButtonVisible ? (\n        <CreateButton\n            resourceNameOrRouteName={resource.route}\n            {...createButtonProps}\n        />\n    ) : null;\n\n    return (\n        <Card {...(cardProps ?? {})} {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n                title={\n                    title ?? (\n                        <Typography variant=\"h5\">\n                            {translate(\n                                `${resource.name}.titles.list`,\n                                userFriendlyResourceName(\n                                    resource.label ?? resource.name,\n                                    \"plural\",\n                                ),\n                            )}\n                        </Typography>\n                    )\n                }\n                action={\n                    <Box display=\"flex\" gap=\"16px\" {...headerButtonProps}>\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(cardHeaderProps ?? {})}\n                {...(headerProps ?? {})}\n            />\n            <CardContent\n                {...(cardContentProps ?? {})}\n                {...(contentProps ?? {})}\n            >\n                {children}\n            </CardContent>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useResourceWithRoute,\n    useRouterContext,\n    useTranslate,\n    ResourceRouterParams,\n    userFriendlyResourceName,\n    useRefineContext,\n} from \"@pankod/refine-core\";\n\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    IconButton,\n    Box,\n    Typography,\n} from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    EditButton,\n    Breadcrumb,\n} from \"@components\";\nimport { ShowProps } from \"../types\";\n\n/**\n * `<Show>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/show} for more details.\n */\nexport const Show: React.FC<ShowProps> = ({\n    title,\n    canEdit,\n    canDelete,\n    actionButtons,\n    isLoading = false,\n    children,\n    resource: resourceFromProps,\n    recordItemId,\n    cardProps,\n    cardHeaderProps,\n    cardContentProps,\n    cardActionsProps,\n    breadcrumb: breadcrumbFromProps,\n    dataProviderName,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n\n    const { goBack, list } = useNavigation();\n\n    const resourceWithRoute = useResourceWithRoute();\n\n    const { useParams } = useRouterContext();\n\n    const {\n        resource: routeResourceName,\n        action: routeFromAction,\n        id: idFromRoute,\n    } = useParams<ResourceRouterParams>();\n\n    const resource = resourceWithRoute(resourceFromProps ?? routeResourceName);\n\n    const isDeleteButtonVisible = canDelete ?? resource.canDelete;\n\n    const isEditButtonVisible = canEdit ?? resource.canEdit;\n\n    const { options } = useRefineContext();\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? options?.breadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const id = recordItemId ?? idFromRoute;\n\n    const defaultHeaderButtons = (\n        <>\n            {!recordItemId && (\n                <ListButton\n                    {...(isLoading ? { disabled: true } : {})}\n                    resourceNameOrRouteName={resource.route}\n                />\n            )}\n            {isEditButtonVisible && (\n                <EditButton\n                    {...(isLoading ? { disabled: true } : {})}\n                    resourceNameOrRouteName={resource.route}\n                    recordItemId={id}\n                />\n            )}\n            {isDeleteButtonVisible && (\n                <DeleteButton\n                    {...(isLoading ? { disabled: true } : {})}\n                    resourceNameOrRouteName={resource.route}\n                    recordItemId={id}\n                    onSuccess={() => list(resource.route ?? resource.name)}\n                    dataProviderName={dataProviderName}\n                />\n            )}\n            <RefreshButton\n                {...(isLoading ? { disabled: true } : {})}\n                resourceNameOrRouteName={resource.route}\n                recordItemId={id}\n                dataProviderName={dataProviderName}\n            />\n        </>\n    );\n\n    return (\n        <Card {...(cardProps ?? {})} {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n                title={\n                    title ?? (\n                        <Typography variant=\"h5\">\n                            {translate(\n                                `${resource.name}.titles.show`,\n                                `Show ${userFriendlyResourceName(\n                                    resource.label ?? resource.name,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={routeFromAction ? goBack : undefined}\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    <Box\n                        display=\"flex\"\n                        gap=\"16px\"\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(cardHeaderProps ?? {})}\n                {...(headerProps ?? {})}\n            />\n            <CardContent\n                {...(cardContentProps ?? {})}\n                {...(contentProps ?? {})}\n            >\n                {children}\n            </CardContent>\n            <CardActions\n                sx={{ padding: \"16px\" }}\n                {...(cardActionsProps ?? {})}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({ defaultButtons: null })\n                        : footerButtons\n                    : actionButtons\n                    ? actionButtons\n                    : null}\n                {actionButtons ? actionButtons : null}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useCan,\n    useResource,\n    useRouterContext,\n} from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { Button } from \"@mui/material\";\nimport { AddBoxOutlined } from \"@mui/icons-material\";\n\nimport { CreateButtonProps } from \"../types\";\n\n/**\n * <CreateButton> uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#create `create`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful to redirect the app to the create page route of resource}.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/create-button} for more details.\n */\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    ignoreAccessControlProvider = false,\n    svgIconProps,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled =\n        accessControl?.enabled ?? !ignoreAccessControlProvider;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const { resource, resourceName } = useResource({\n        resourceNameOrRouteName,\n    });\n\n    const { Link } = useRouterContext();\n    const { createUrl: generateCreateUrl } = useNavigation();\n\n    const translate = useTranslate();\n\n    const { data } = useCan({\n        resource: resourceName,\n        action: \"create\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const createUrl = generateCreateUrl(resource.route!);\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Link\n            to={createUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                variant=\"contained\"\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.CreateButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.create\", \"Create\")\n                )}\n            </Button>\n        </Link>\n    );\n};\n","import React from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n} from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { Button } from \"@mui/material\";\nimport { EditOutlined } from \"@mui/icons-material\";\n\nimport { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    ignoreAccessControlProvider = false,\n    svgIconProps,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled =\n        accessControl?.enabled ?? !ignoreAccessControlProvider;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const { resourceName, resource, id } = useResource({\n        resourceNameOrRouteName,\n        recordItemId,\n    });\n\n    const translate = useTranslate();\n\n    const { editUrl: generateEditUrl } = useNavigation();\n    const { Link } = useRouterContext();\n\n    const { data } = useCan({\n        resource: resourceName,\n        action: \"edit\",\n        params: { id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const editUrl = generateEditUrl(resource.route!, id!);\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Link\n            to={editUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={\n                    !hideText && (\n                        <EditOutlined\n                            sx={{ selfAlign: \"center\" }}\n                            {...svgIconProps}\n                        />\n                    )\n                }\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.EditButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <EditOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.edit\", \"Edit\")\n                )}\n            </Button>\n        </Link>\n    );\n};\n","import React from \"react\";\nimport {\n    useDelete,\n    useTranslate,\n    useMutationMode,\n    useCan,\n    useResource,\n} from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { Button, Dialog, DialogActions, DialogTitle } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { DeleteOutline } from \"@mui/icons-material\";\n\nimport { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} and {@link https://mui.com/material-ui/react-dialog/#main-content `<Dialog>`} components.\n * When you try to delete something, a dialog modal shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n    resourceNameOrRouteName,\n    recordItemId,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    children,\n    successNotification,\n    errorNotification,\n    hideText = false,\n    accessControl,\n    ignoreAccessControlProvider = false,\n    metaData,\n    dataProviderName,\n    confirmTitle,\n    confirmOkText,\n    confirmCancelText,\n    svgIconProps,\n    invalidates,\n    ...rest\n}) => {\n    const accessControlEnabled =\n        accessControl?.enabled ?? !ignoreAccessControlProvider;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const { resourceName, id, resource } = useResource({\n        resourceNameOrRouteName,\n        recordItemId,\n    });\n\n    const translate = useTranslate();\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { mutate, isLoading, variables } = useDelete();\n\n    const { data } = useCan({\n        resource: resourceName,\n        action: \"delete\",\n        params: { id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCloseOnConfirm = () => {\n        setOpen(false);\n        mutate(\n            {\n                id: id ?? \"\",\n                resource: resourceName,\n                mutationMode,\n                successNotification,\n                errorNotification,\n                metaData,\n                dataProviderName,\n                invalidates,\n            },\n            {\n                onSuccess: (value) => {\n                    onSuccess && onSuccess(value);\n                },\n            },\n        );\n    };\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <div>\n            <LoadingButton\n                color=\"error\"\n                onClick={handleClickOpen}\n                disabled={data?.can === false}\n                loading={id === variables?.id && isLoading}\n                startIcon={!hideText && <DeleteOutline {...svgIconProps} />}\n                sx={{ minWidth: 0, ...sx }}\n                loadingPosition={hideText ? \"center\" : \"start\"}\n                data-testid={RefineButtonTestIds.DeleteButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <DeleteOutline fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.delete\", \"Delete\")\n                )}\n            </LoadingButton>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {confirmTitle ??\n                        translate(\"buttons.confirm\", \"Are you sure?\")}\n                </DialogTitle>\n                <DialogActions sx={{ justifyContent: \"center\" }}>\n                    <Button onClick={handleClose}>\n                        {confirmCancelText ??\n                            translate(\"buttons.cancel\", \"Cancel\")}\n                    </Button>\n                    <Button\n                        color=\"error\"\n                        onClick={handleCloseOnConfirm}\n                        autoFocus\n                    >\n                        {confirmOkText ?? translate(\"buttons.delete\", \"Delete\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useOne, useTranslate, useResource } from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { RefreshOutlined } from \"@mui/icons-material\";\n\nimport { RefreshButtonProps } from \"../types\";\n\n/**\n * `<RefreshButton>` uses uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component\n * to update the data shown on the page via the {@link https://refine.dev/docs/core/hooks/data/useOne `useOne`} method provided by your dataProvider.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    metaData,\n    dataProviderName,\n    svgIconProps,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const { resourceName, id } = useResource({\n        resourceNameOrRouteName,\n        recordItemId,\n    });\n\n    const translate = useTranslate();\n\n    const { refetch, isFetching } = useOne({\n        resource: resourceName,\n        id: id ?? \"\",\n        queryOptions: {\n            enabled: false,\n        },\n        metaData,\n        liveMode: \"off\",\n        dataProviderName,\n    });\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            startIcon={!hideText && <RefreshOutlined {...svgIconProps} />}\n            loading={isFetching}\n            loadingPosition={hideText ? \"center\" : \"start\"}\n            onClick={(e) => (onClick ? onClick(e) : refetch())}\n            sx={{ minWidth: 0, ...sx }}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <RefreshOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.refresh\", \"Refresh\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n} from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { Button } from \"@mui/material\";\nimport { VisibilityOutlined } from \"@mui/icons-material\";\n\nimport { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when red sirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    ignoreAccessControlProvider = false,\n    svgIconProps,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled =\n        accessControl?.enabled ?? !ignoreAccessControlProvider;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const { resourceName, id, resource } = useResource({\n        resourceNameOrRouteName,\n        recordItemId,\n    });\n\n    const { showUrl: generateShowUrl } = useNavigation();\n    const { Link } = useRouterContext();\n\n    const translate = useTranslate();\n\n    const { data } = useCan({\n        resource: resourceName,\n        action: \"show\",\n        params: { id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const showUrl = generateShowUrl(resource.route!, id!);\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Link\n            to={showUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={\n                    !hideText && <VisibilityOutlined {...svgIconProps} />\n                }\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ShowButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <VisibilityOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.show\", \"Show\")\n                )}\n            </Button>\n        </Link>\n    );\n};\n","import React from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    userFriendlyResourceName,\n    useResource,\n    useRouterContext,\n} from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { Button } from \"@mui/material\";\nimport { ListOutlined } from \"@mui/icons-material\";\n\nimport { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the  {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/list-button} for more details.\n */\nexport const ListButton: React.FC<ListButtonProps> = ({\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    ignoreAccessControlProvider = false,\n    svgIconProps,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled =\n        accessControl?.enabled ?? !ignoreAccessControlProvider;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const { resource, resourceName } = useResource({\n        resourceNameOrRouteName,\n    });\n\n    const { listUrl: generateListUrl } = useNavigation();\n    const { Link } = useRouterContext();\n\n    const translate = useTranslate();\n\n    const { data } = useCan({\n        resource: resourceName,\n        action: \"list\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const listUrl = generateListUrl(resource.route!);\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Link\n            to={listUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <ListOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ListButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <ListOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ??\n                    translate(\n                        `${resourceName}.titles.list`,\n                        userFriendlyResourceName(\n                            resource.label ?? resourceName,\n                            \"plural\",\n                        ),\n                    )\n                )}\n            </Button>\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { ImportExportOutlined } from \"@mui/icons-material\";\n\nimport { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n    hideText = false,\n    children,\n    loading = false,\n    svgIconProps,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            {...rest}\n            loading={loading}\n            startIcon={!hideText && <ImportExportOutlined {...svgIconProps} />}\n            loadingPosition={hideText ? \"center\" : \"start\"}\n            sx={{ minWidth: 0, ...sx }}\n            data-testid={RefineButtonTestIds.ExportButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.export\", \"Export\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { SaveOutlined } from \"@mui/icons-material\";\n\nimport { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n    hideText = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            startIcon={!hideText && <SaveOutlined {...svgIconProps} />}\n            sx={{ minWidth: 0, ...sx }}\n            variant=\"contained\"\n            data-testid={RefineButtonTestIds.SaveButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <SaveOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.save\", \"Save\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n} from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { Button } from \"@mui/material\";\nimport { AddBoxOutlined } from \"@mui/icons-material\";\n\nimport { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/clone-button} for more details.\n *\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    ignoreAccessControlProvider = false,\n    svgIconProps,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled =\n        accessControl?.enabled ?? !ignoreAccessControlProvider;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const { resourceName, resource, id } = useResource({\n        resourceNameOrRouteName,\n        recordItemId,\n    });\n\n    const { cloneUrl: generateCloneUrl } = useNavigation();\n    const { Link } = useRouterContext();\n\n    const translate = useTranslate();\n\n    const { data } = useCan({\n        resource: resourceName,\n        action: \"create\",\n        params: { id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const cloneUrl = generateCloneUrl(resource.route!, id!);\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Link\n            to={cloneUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.CloneButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.clone\", \"Clone\")\n                )}\n            </Button>\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@pankod/refine-core\";\nimport { RefineButtonTestIds } from \"@pankod/refine-ui-types\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { ImportExportOutlined } from \"@mui/icons-material\";\n\nimport { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/core/hooks/import-export/useImport/ `useImport`} core hook.\n * It uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content  `<LoadingButton>`} and native html {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input  `<input>`} element.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n    inputProps,\n    hideText = false,\n    loading = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <label htmlFor=\"contained-button-file\">\n            <input {...inputProps} id=\"contained-button-file\" multiple hidden />\n            <LoadingButton\n                component=\"span\"\n                startIcon={\n                    !hideText && <ImportExportOutlined {...svgIconProps} />\n                }\n                loadingPosition={hideText ? \"center\" : \"start\"}\n                loading={loading}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ImportButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.import\", \"Import\")\n                )}\n            </LoadingButton>\n        </label>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Box, CircularProgress, Typography } from \"@mui/material\";\n\ntype CircularDeterminateProps = {\n    undoableTimeout: number;\n    message: string;\n};\n\nexport const CircularDeterminate: React.FC<CircularDeterminateProps> = ({\n    undoableTimeout,\n    message,\n}) => {\n    const [progress, setProgress] = useState(100);\n\n    const [timeCount, setTimeCount] = useState(undoableTimeout);\n\n    useEffect(() => {\n        const increaseProgress = 100 / undoableTimeout;\n        const timer = setInterval(() => {\n            setTimeCount((prevProgress) => prevProgress - 1);\n            setProgress((prevProgress) => prevProgress - increaseProgress);\n        }, 1000);\n\n        if (timeCount === 0) {\n            clearInterval(timer);\n        }\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, [timeCount]);\n\n    return (\n        <>\n            <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n                <CircularProgress\n                    color=\"inherit\"\n                    variant=\"determinate\"\n                    value={progress}\n                />\n                <Box\n                    sx={{\n                        top: 0,\n                        left: 0,\n                        bottom: 0,\n                        right: 0,\n                        position: \"absolute\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography component=\"div\">{timeCount}</Typography>\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    marginLeft: \"10px\",\n                    maxWidth: { xs: \"150px\", md: \"100%\" },\n                }}\n            >\n                <Typography variant=\"subtitle2\">{message}</Typography>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Materail UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/text} for more details.\n */\nconst TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {value}\n        </Typography>\n    );\n};\n\nexport { TextField as TextFieldComponent };\n","import React from \"react\";\nimport { Chip } from \"@mui/material\";\n\nimport { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Material UI {@link https://mui.com/material-ui/react-chip/#main-content `<Chip>`} component.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n    return <Chip label={value?.toString()} {...rest} />;\n};\n","import React from \"react\";\nimport { Typography, Link } from \"@mui/material\";\n\nimport { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Typography variant=\"body2\">\n            <Link href={`mailto:${value}`} {...rest}>\n                {value}\n            </Link>\n        </Typography>\n    );\n};\n","import React from \"react\";\n\nimport { Tooltip } from \"@mui/material\";\nimport { CheckOutlined, CloseOutlined } from \"@mui/icons-material\";\n\nimport { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://mui.com/material-ui/react-tooltip/#main-content `<Tooltip>`} values from Materila UI.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n    value,\n    valueLabelTrue = \"true\",\n    valueLabelFalse = \"false\",\n    trueIcon,\n    falseIcon,\n    svgIconProps,\n    ...rest\n}) => {\n    return (\n        <Tooltip title={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n            {value ? (\n                <span>{trueIcon ?? <CheckOutlined {...svgIconProps} />}</span>\n            ) : (\n                <span>{falseIcon ?? <CloseOutlined {...svgIconProps} />}</span>\n            )}\n        </Tooltip>\n    );\n};\n","import React from \"react\";\n\nimport dayjs from \"dayjs\";\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\nimport { Typography } from \"@mui/material\";\n\nimport { DateFieldProps } from \"../types\";\n\ndayjs.extend(LocalizedFormat);\n\nconst defaultLocale = dayjs.locale();\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format and\n * Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n    value,\n    locales,\n    format: dateFormat = \"L\",\n    ...rest\n}) => {\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {dayjs(value)\n                .locale(locales || defaultLocale)\n                .format(dateFormat)}\n        </Typography>\n    );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\n\nimport { FileFieldProps } from \"../types\";\n\n/**\n * This field is used to display files and  uses Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`}  and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/file} for more details.\n */\nexport const FileField: React.FC<FileFieldProps> = ({\n    title,\n    src,\n    ...rest\n}) => {\n    return (\n        <UrlField value={src} title={title} {...rest}>\n            {title ?? src}\n        </UrlField>\n    );\n};\n","import React from \"react\";\nimport { Typography, Link } from \"@mui/material\";\n\nimport { UrlFieldProps } from \"../types\";\n\n/**\n * This field lets you embed a link.It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n    children,\n    value,\n    ...rest\n}) => {\n    return (\n        <Typography variant=\"body2\">\n            <Link href={value} {...rest}>\n                {children ?? value}\n            </Link>\n        </Typography>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { NumberFieldProps } from \"../types\";\n\nfunction toLocaleStringSupportsOptions() {\n    return !!(\n        typeof Intl == \"object\" &&\n        Intl &&\n        typeof Intl.NumberFormat == \"function\"\n    );\n}\n\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format\n * and Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n    value,\n    locale,\n    options,\n    ...rest\n}) => {\n    const number = parseFloat(value.toString());\n\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {toLocaleStringSupportsOptions()\n                ? number.toLocaleString(locale, options)\n                : number}\n        </Typography>\n    );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport { MarkdownFieldProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<MarkdownFieldProps> = ({ value = \"\" }) => {\n    return <ReactMarkdown plugins={[gfm]}>{value}</ReactMarkdown>;\n};\n","import React from \"react\";\nimport {\n    useBreadcrumb,\n    useRefineContext,\n    useRouterContext,\n} from \"@pankod/refine-core\";\nimport { RefineBreadcrumbProps } from \"@pankod/refine-ui-types\";\n\nimport {\n    Breadcrumbs,\n    BreadcrumbsProps as MuiBreadcrumbProps,\n    Typography,\n    Link,\n    LinkProps,\n    Grid,\n} from \"@mui/material\";\n\nimport { HomeOutlined } from \"@mui/icons-material\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<MuiBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n    breadcrumbProps,\n    showHome = true,\n    hideIcons = false,\n}) => {\n    const { breadcrumbs } = useBreadcrumb();\n    const { Link: RouterLink } = useRouterContext();\n    const { hasDashboard } = useRefineContext();\n\n    if (breadcrumbs.length === 1) {\n        return null;\n    }\n\n    const LinkRouter = (props: LinkProps & { to?: string }) => (\n        <Link {...props} component={RouterLink} />\n    );\n\n    return (\n        <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            sx={{\n                paddingY: 2,\n                paddingX: 2,\n                ...(breadcrumbProps?.sx ?? {}),\n            }}\n            {...breadcrumbProps}\n        >\n            {showHome && hasDashboard && (\n                <LinkRouter\n                    underline=\"hover\"\n                    sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                    }}\n                    color=\"inherit\"\n                    to=\"/\"\n                >\n                    <HomeOutlined\n                        sx={{\n                            fontSize: \"18px\",\n                        }}\n                    />\n                </LinkRouter>\n            )}\n            {breadcrumbs.map(({ label, icon, href }) => {\n                return (\n                    <Grid\n                        key={label}\n                        sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            \"& .MuiSvgIcon-root\": {\n                                fontSize: \"16px\",\n                            },\n                        }}\n                    >\n                        {!hideIcons && icon}\n                        {href ? (\n                            <LinkRouter\n                                underline=\"hover\"\n                                sx={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    fontSize: \"14px\",\n                                }}\n                                color=\"inherit\"\n                                to={href}\n                                variant=\"subtitle1\"\n                                marginLeft={0.5}\n                            >\n                                {label}\n                            </LinkRouter>\n                        ) : (\n                            <Typography fontSize=\"14px\">{label}</Typography>\n                        )}\n                    </Grid>\n                );\n            })}\n        </Breadcrumbs>\n    );\n};\n","import {\n    useSelect as useSelectCore,\n    HttpError,\n    UseSelectProps,\n    UseSelectReturnType,\n} from \"@pankod/refine-core\";\nimport { AutocompleteProps } from \"@mui/material/Autocomplete\";\nimport isEqual from \"lodash/isEqual\";\nimport unionWith from \"lodash/unionWith\";\n\nexport type UseAutocompleteProps<TData, TError> = Pick<\n    UseSelectProps<TData, TError>,\n    \"resource\"\n> &\n    Omit<UseSelectProps<TData, TError>, \"optionLabel\" | \"optionValue\">;\n\ntype AutocompletePropsType<TData> = Required<\n    Pick<\n        AutocompleteProps<TData, boolean, boolean, boolean>,\n        \"options\" | \"loading\" | \"onInputChange\" | \"filterOptions\"\n    >\n>;\n\nexport type UseAutocompleteReturnType<TData> = Omit<\n    UseSelectReturnType<TData>,\n    \"options\"\n> & {\n    autocompleteProps: AutocompletePropsType<TData>;\n};\n\nexport const useAutocomplete = <\n    TData = any,\n    TError extends HttpError = HttpError,\n>(\n    props: UseAutocompleteProps<TData, TError>,\n): UseAutocompleteReturnType<TData> => {\n    const { queryResult, defaultValueQueryResult, onSearch } =\n        useSelectCore(props);\n\n    return {\n        autocompleteProps: {\n            options: unionWith(\n                queryResult.data?.data || [],\n                defaultValueQueryResult.data?.data || [],\n                isEqual,\n            ),\n            loading:\n                queryResult.isFetching || defaultValueQueryResult.isFetching,\n            onInputChange: (event, value) => {\n                if (event?.type === \"change\") {\n                    onSearch(value);\n                }\n            },\n            filterOptions: (x) => x,\n        },\n        onSearch,\n        queryResult,\n        defaultValueQueryResult,\n    };\n};\n","import { useState, useMemo, useEffect } from \"react\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    HttpError,\n    useTable as useTableCore,\n    useTableProps as useTablePropsCore,\n    useTableReturnType as useTableReturnTypeCore,\n    useTableNoPaginationReturnType as useTableNoPaginationReturnTypeCore,\n    useLiveMode,\n} from \"@pankod/refine-core\";\nimport {\n    DataGridProps,\n    GridFilterModel,\n    GridSortModel,\n} from \"@mui/x-data-grid\";\nimport { useTheme, darken } from \"@mui/material\";\nimport differenceWith from \"lodash/differenceWith\";\nimport isEqual from \"lodash/isEqual\";\nimport warnOnce from \"warn-once\";\n\nimport {\n    transformCrudSortingToSortModel,\n    transformSortModelToCrudSorting,\n    transformFilterModelToCrudFilters,\n    transformCrudFiltersToFilterModel,\n} from \"@definitions\";\n\ntype DataGridPropsType = Pick<DataGridProps, \"filterModel\"> &\n    Required<\n        Pick<\n            DataGridProps,\n            | \"rows\"\n            | \"loading\"\n            | \"rowCount\"\n            | \"sortingMode\"\n            | \"sortModel\"\n            | \"onSortModelChange\"\n            | \"filterMode\"\n            | \"onFilterModelChange\"\n            | \"sx\"\n            | \"disableSelectionOnClick\"\n            | \"onStateChange\"\n        >\n    > &\n    Pick<\n        DataGridProps,\n        | \"hideFooterPagination\"\n        | \"paginationMode\"\n        | \"page\"\n        | \"onPageChange\"\n        | \"pageSize\"\n        | \"onPageSizeChange\"\n    >;\n\nexport type UseDataGridProps<\n    TData,\n    TError,\n    TSearchVariables = unknown,\n> = useTablePropsCore<TData, TError> & {\n    onSearch?: (data: TSearchVariables) => CrudFilters | Promise<CrudFilters>;\n} & {\n    /**\n     * @deprecated columns is deprecated and will be removed in the next major version. # https://github.com/refinedev/refine/pull/2072\n     */\n    columns?: DataGridProps[\"columns\"];\n};\n\nexport type UseDataGridReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n> = useTableReturnTypeCore<TData, TError> & {\n    dataGridProps: DataGridPropsType;\n    search: (value: TSearchVariables) => Promise<void>;\n};\n\nexport type UseDataGridNoPaginationReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TSearchVariables = unknown,\n> = useTableNoPaginationReturnTypeCore<TData> & {\n    dataGridProps: DataGridPropsType;\n    search: (value: TSearchVariables) => Promise<void>;\n};\n\nexport type UseDataGridWithColumnsReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n> = useTableReturnTypeCore<TData, TError> & {\n    dataGridProps: DataGridPropsType & Pick<DataGridProps, \"columns\">;\n    search: (value: TSearchVariables) => Promise<void>;\n};\n\nexport type UseDataGridWithColumnsNoPaginationReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n> = useTableNoPaginationReturnTypeCore<TData, TError> & {\n    dataGridProps: DataGridPropsType & Pick<DataGridProps, \"columns\">;\n    search: (value: TSearchVariables) => Promise<void>;\n};\n\nexport function useDataGrid<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n>(\n    props?: UseDataGridProps<TData, TError, TSearchVariables> & {\n        hasPagination?: true;\n        columns?: undefined;\n    },\n): UseDataGridReturnType<TData, TError, TSearchVariables>;\nexport function useDataGrid<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n>(\n    props?: UseDataGridProps<TData, TError, TSearchVariables> & {\n        hasPagination: false;\n        columns?: undefined;\n    },\n): UseDataGridNoPaginationReturnType<TData, TSearchVariables>;\nexport function useDataGrid<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n>(\n    props?: UseDataGridProps<TData, TError, TSearchVariables> & {\n        hasPagination?: true;\n        columns: DataGridProps<TData>[\"columns\"];\n    },\n): UseDataGridWithColumnsReturnType<TData, TError, TSearchVariables>;\nexport function useDataGrid<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n>(\n    props?: UseDataGridProps<TData, TError, TSearchVariables> & {\n        hasPagination: false;\n        columns: DataGridProps<TData>[\"columns\"];\n    },\n): UseDataGridWithColumnsNoPaginationReturnType<\n    TData,\n    TError,\n    TSearchVariables\n>;\nexport function useDataGrid<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n>({\n    columns,\n    onSearch: onSearchProp,\n    initialCurrent,\n    initialPageSize = 25,\n    hasPagination = true,\n    initialSorter,\n    permanentSorter,\n    defaultSetFilterBehavior = \"replace\",\n    initialFilter,\n    permanentFilter,\n    syncWithLocation: syncWithLocationProp,\n    resource: resourceFromProp,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    metaData,\n    dataProviderName,\n}: UseDataGridProps<TData, TError, TSearchVariables> = {}):\n    | UseDataGridReturnType<TData, TError, TSearchVariables>\n    | UseDataGridNoPaginationReturnType<TData, TSearchVariables>\n    | UseDataGridWithColumnsReturnType<TData, TError, TSearchVariables>\n    | UseDataGridWithColumnsNoPaginationReturnType<\n          TData,\n          TError,\n          TSearchVariables\n      > {\n    const [columnsTypes, setColumnsType] = useState<Record<string, string>>();\n\n    const {\n        tableQueryResult,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        filters,\n        setFilters,\n        sorter,\n        setSorter,\n        pageCount,\n        createLinkForSyncWithLocation,\n    } = useTableCore<TData, TError>({\n        permanentSorter,\n        permanentFilter,\n        initialCurrent,\n        initialPageSize,\n        // @ts-expect-error currently boolean casting is not supported in overloaded types.\n        hasPagination: hasPagination,\n        initialSorter,\n        initialFilter,\n        syncWithLocation: syncWithLocationProp,\n        defaultSetFilterBehavior,\n        resource: resourceFromProp,\n        successNotification,\n        errorNotification,\n        queryOptions,\n        liveMode: liveModeFromProp,\n        onLiveEvent,\n        liveParams,\n        metaData,\n        dataProviderName,\n    });\n\n    const [muiCrudFilters, setMuiCrudFilters] = useState<CrudFilters>(filters);\n\n    useEffect(() => {\n        warnOnce(\n            !!columns,\n            \"[useDataGrid]: `columns` is deprecated and will be removed in the next major version.\\nFor more information, see https://github.com/refinedev/refine/pull/2072\",\n        );\n    }, []);\n\n    const theme = useTheme();\n\n    const { data, isFetched, isLoading } = tableQueryResult;\n\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const handlePageChange = (page: number) => {\n        if (hasPagination) {\n            setCurrent(page + 1);\n        }\n    };\n    const handlePageSizeChange = (pageSize: number) => {\n        if (hasPagination) {\n            setPageSize(pageSize);\n        }\n    };\n\n    const handleSortModelChange = (sortModel: GridSortModel) => {\n        const crudSorting = transformSortModelToCrudSorting(sortModel);\n        setSorter(crudSorting);\n    };\n\n    const handleFilterModelChange = (filterModel: GridFilterModel) => {\n        const crudFilters = transformFilterModelToCrudFilters(filterModel);\n        setMuiCrudFilters(crudFilters);\n        setFilters(crudFilters.filter((f) => f.value !== \"\"));\n        if (hasPagination) {\n            setCurrent(1);\n        }\n    };\n\n    const search = async (value: TSearchVariables) => {\n        if (onSearchProp) {\n            const searchFilters = await onSearchProp(value);\n            setMuiCrudFilters(searchFilters);\n            setFilters(searchFilters.filter((f) => f.value !== \"\"));\n            if (hasPagination) {\n                setCurrent(1);\n            }\n        }\n    };\n\n    const paginationValues = useMemo(() => {\n        if (hasPagination) {\n            return {\n                current,\n                setCurrent,\n                pageSize,\n                setPageSize,\n                pageCount,\n            };\n        }\n\n        return {\n            current: undefined,\n            setCurrent: undefined,\n            pageSize: undefined,\n            setPageSize: undefined,\n            pageCount: undefined,\n        };\n    }, [hasPagination, current, pageSize, pageCount]);\n\n    const dataGridPaginationValues = () => {\n        if (hasPagination) {\n            return {\n                paginationMode: \"server\" as const,\n                page: (current ?? 1) - 1,\n                onPageChange: handlePageChange,\n                pageSize: pageSize,\n                onPageSizeChange: handlePageSizeChange,\n            };\n        }\n\n        return {\n            hideFooterPagination: true,\n        };\n    };\n\n    const isReturnColumn = () => {\n        if (columns) {\n            return {\n                columns,\n            };\n        }\n\n        return {};\n    };\n\n    return {\n        tableQueryResult,\n        dataGridProps: {\n            ...isReturnColumn(),\n            disableSelectionOnClick: true,\n            rows: data?.data || [],\n            loading: liveMode === \"auto\" ? isLoading : !isFetched,\n            rowCount: data?.total || 0,\n            ...dataGridPaginationValues(),\n            sortingMode: \"server\",\n            sortModel: transformCrudSortingToSortModel(\n                differenceWith(sorter, permanentSorter ?? [], isEqual),\n            ),\n            onSortModelChange: handleSortModelChange,\n            filterMode: \"server\",\n            filterModel: transformCrudFiltersToFilterModel(\n                differenceWith(muiCrudFilters, permanentFilter ?? [], isEqual),\n                columnsTypes,\n            ),\n            onFilterModelChange: handleFilterModelChange,\n            onStateChange: (state) => {\n                const newColumnsTypes = Object.fromEntries(\n                    Object.entries(state.columns.lookup).map(([key, value]) => {\n                        return [key, (value as any).type];\n                    }),\n                );\n                const isStateChanged = !isEqual(newColumnsTypes, columnsTypes);\n\n                if (isStateChanged) {\n                    setColumnsType(newColumnsTypes);\n                }\n            },\n            sx: {\n                border: \"none\",\n                \"& .MuiDataGrid-columnHeaders\": {\n                    background: darken(theme.palette.background.paper, 0.05),\n                    borderBottom: `1px solid ${darken(\n                        theme.palette.background.paper,\n                        0.1,\n                    )}`,\n                },\n                \"& .MuiDataGrid-cell\": {\n                    borderBottom: `1px solid ${darken(\n                        theme.palette.background.paper,\n                        0.05,\n                    )}`,\n                },\n            },\n        },\n        ...paginationValues,\n        sorter,\n        setSorter,\n        filters,\n        setFilters,\n        search,\n        createLinkForSyncWithLocation,\n    };\n}\n","import {\n    GridSortModel,\n    GridFilterModel,\n    GridLinkOperator,\n    GridFilterItem,\n} from \"@mui/x-data-grid\";\nimport {\n    CrudFilters,\n    CrudOperators,\n    CrudSorting,\n    LogicalFilter,\n} from \"@pankod/refine-core\";\n\nexport const transformSortModelToCrudSorting = (\n    sortModel: GridSortModel,\n): CrudSorting => {\n    const sorter = sortModel.map(({ field, sort }) => ({\n        field,\n        order: sort || \"asc\",\n    }));\n    return sorter;\n};\n\nexport const transformCrudSortingToSortModel = (\n    crudSorting: CrudSorting,\n): GridSortModel => {\n    const sortModel = crudSorting.map(({ field, order }) => ({\n        field,\n        sort: order,\n    }));\n    return sortModel;\n};\n\nexport const transformMuiOperatorToCrudOperator = (\n    operatorValue?: string,\n): Exclude<CrudOperators, \"or\"> => {\n    if (!operatorValue) {\n        return \"eq\";\n    }\n\n    switch (operatorValue) {\n        case \"equals\":\n        case \"is\":\n        case \"=\":\n            return \"eq\";\n        case \"!=\":\n        case \"not\":\n            return \"ne\";\n        case \">\":\n        case \"after\":\n            return \"gt\";\n        case \">=\":\n        case \"onOrAfter\":\n            return \"gte\";\n        case \"<\":\n        case \"before\":\n            return \"lt\";\n        case \"<=\":\n        case \"onOrBefore\":\n            return \"lte\";\n        case \"isEmpty\":\n            return \"null\";\n        case \"isNotEmpty\":\n            return \"nnull\";\n        default:\n            return operatorValue as Exclude<CrudOperators, \"or\">;\n    }\n};\n\nexport const transformFilterModelToCrudFilters = ({\n    items,\n    linkOperator,\n}: GridFilterModel): CrudFilters => {\n    const filters = items.map(({ columnField, value, operatorValue }) => ({\n        field: columnField,\n        value: value ?? \"\",\n        operator: transformMuiOperatorToCrudOperator(operatorValue),\n    }));\n\n    if (linkOperator === GridLinkOperator.Or) {\n        return [{ operator: \"or\", value: filters }];\n    }\n    return filters;\n};\n\nexport const transformCrudOperatorToMuiOperator = (\n    operator: CrudOperators,\n    columnType?: string,\n): string => {\n    switch (columnType) {\n        case \"number\":\n            switch (operator) {\n                case \"eq\":\n                    return \"=\";\n                case \"ne\":\n                    return \"!=\";\n                case \"gt\":\n                    return \">\";\n                case \"gte\":\n                    return \">=\";\n                case \"lt\":\n                    return \"<\";\n                case \"lte\":\n                    return \"<=\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        case \"singleSelect\":\n        case \"boolean\":\n            switch (operator) {\n                case \"eq\":\n                    return \"is\";\n                default:\n                    return operator;\n            }\n        case undefined:\n        case \"string\":\n            switch (operator) {\n                case \"eq\":\n                    return \"equals\";\n                case \"contains\":\n                    return \"contains\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        case \"date\":\n        case \"dateTime\":\n            switch (operator) {\n                case \"eq\":\n                    return \"is\";\n                case \"ne\":\n                    return \"not\";\n                case \"gt\":\n                    return \"after\";\n                case \"gte\":\n                    return \"onOrAfter\";\n                case \"lt\":\n                    return \"before\";\n                case \"lte\":\n                    return \"onOrBefore\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        default:\n            return operator;\n    }\n};\n\nexport const transformCrudFiltersToFilterModel = (\n    crudFilters: CrudFilters,\n    columnsType?: Record<string, string>,\n): GridFilterModel | undefined => {\n    const gridFilterItems: GridFilterItem[] = [];\n\n    const isExistOrFilter = crudFilters.some(\n        (filter) => filter.operator === \"or\",\n    );\n\n    if (columnsType) {\n        if (isExistOrFilter) {\n            const orLogicalFilters = crudFilters.find(\n                (filter) => filter.operator === \"or\",\n            )?.value as LogicalFilter[];\n\n            orLogicalFilters.map(({ field, value, operator }) => {\n                const columnType = columnsType[field];\n\n                gridFilterItems.push({\n                    columnField: field,\n                    operatorValue: transformCrudOperatorToMuiOperator(\n                        operator,\n                        columnType,\n                    ),\n                    value: value === \"\" ? undefined : value,\n                    id: field + operator,\n                });\n            });\n        } else {\n            (crudFilters as LogicalFilter[]).map(\n                ({ field, value, operator }) => {\n                    const columnType = columnsType[field];\n\n                    gridFilterItems.push({\n                        columnField: field,\n                        operatorValue: transformCrudOperatorToMuiOperator(\n                            operator,\n                            columnType,\n                        ),\n                        value: value === \"\" ? undefined : value,\n                        id: field + operator,\n                    });\n                },\n            );\n        }\n    }\n\n    return {\n        items: gridFilterItems,\n        // If there is \"or\" filter, default link operator is \"or\"\n        linkOperator: isExistOrFilter\n            ? GridLinkOperator.Or\n            : GridLinkOperator.And,\n    };\n};\n","import React from \"react\";\n\nimport { useMenu as useMenuCore, ITreeMenu } from \"@pankod/refine-core\";\n\ntype useMenuReturnType = {\n    defaultOpenKeys: Record<string, boolean>;\n    selectedKey: string;\n    menuItems: ITreeMenu[];\n};\n\n/**\n * `useMenu` is used to get menu items of the default sidebar.\n * These items include a link to dashboard page (if it exists) and links to the user defined resources\n * (passed as children to {@link https://refine.dev/docs/core/components/refine-config `<Refine>`}).\n * This hook can also be used to build custom menus, which is also used by default sidebar to show menu items.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/hooks/useMenu} for more details.\n * @deprecated use {@link https://refine.dev/docs/core/hooks/ui/useMenu} instead.\n */\nexport const useMenu: () => useMenuReturnType = () => {\n    const { selectedKey, menuItems } = useMenuCore();\n\n    const defaultOpenKeys = React.useMemo(() => {\n        const keys = selectedKey.split(\"/\").filter((x) => x !== \"\");\n\n        let _defaultOpenKeys: Record<string, boolean> = {};\n        let key = \"\";\n\n        for (let index = 0; index < keys.length - 1; index++) {\n            if (keys[index] !== \"undefined\") {\n                key = key + `/${keys[index]}`;\n            }\n\n            _defaultOpenKeys = {\n                ..._defaultOpenKeys,\n                [key]: !_defaultOpenKeys[key],\n            };\n        }\n\n        return _defaultOpenKeys;\n    }, []);\n\n    return {\n        selectedKey,\n        defaultOpenKeys,\n        menuItems,\n    };\n};\n","import { createTheme, ThemeOptions } from \"@mui/material\";\n\nimport { lightPalette } from \"./palette/lightPalette\";\nimport { darkPalette } from \"./palette/darkPalette\";\nimport { typography } from \"./typography\";\n\nconst commonThemeProperties: ThemeOptions = {\n    shape: {\n        borderRadius: 6,\n    },\n    typography: {\n        ...typography,\n    },\n};\n\nconst LightTheme = createTheme({\n    ...commonThemeProperties,\n    palette: lightPalette,\n    components: {\n        MuiAppBar: {\n            styleOverrides: {\n                colorDefault: {\n                    backgroundColor: \"#fff\",\n                },\n            },\n        },\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    backgroundImage:\n                        \"linear-gradient(rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.01))\",\n                },\n            },\n        },\n        MuiTypography: {\n            styleOverrides: {\n                h5: {\n                    fontWeight: 800,\n                    lineHeight: \"2rem\",\n                },\n            },\n        },\n    },\n});\n\nconst DarkTheme = createTheme({\n    ...commonThemeProperties,\n    palette: darkPalette,\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    backgroundImage:\n                        \"linear-gradient(rgba(255, 255, 255, 0.025), rgba(255, 255, 255, 0.025))\",\n                },\n            },\n        },\n        MuiAppBar: {\n            defaultProps: {\n                color: \"transparent\",\n            },\n        },\n        MuiTypography: {\n            styleOverrides: {\n                h5: {\n                    fontWeight: 800,\n                    lineHeight: \"2rem\",\n                },\n            },\n        },\n    },\n});\n\nexport { LightTheme, DarkTheme };\n","import { PaletteOptions } from \"@mui/material\";\n\nexport const lightPalette: PaletteOptions = {\n    mode: \"light\",\n    primary: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    secondary: {\n        main: \"#2A132E\",\n        contrastText: \"#fff\",\n    },\n    background: {\n        default: \"#f0f0f0\",\n        paper: \"#ffffff\",\n    },\n    success: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    error: {\n        main: \"#fa541c\",\n        contrastText: \"#fff\",\n    },\n    warning: {\n        main: \"#fa8c16\",\n        contrastText: \"#fff\",\n    },\n    info: {\n        main: \"#0b82f0\",\n        contrastText: \"#fff\",\n    },\n    divider: \"rgba(0,0,0,0)\",\n    text: {\n        primary: \"#626262\",\n        secondary: \"#9f9f9f\",\n        disabled: \"#c1c1c1\",\n    },\n};\n","import { PaletteOptions } from \"@mui/material\";\n\nexport const darkPalette: PaletteOptions = {\n    mode: \"dark\",\n    primary: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    secondary: {\n        main: \"#2A132E\",\n        contrastText: \"#fff\",\n    },\n    background: {\n        default: \"#212121\",\n        paper: \"#242424\",\n    },\n    success: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    error: {\n        main: \"#ee2a1e\",\n        contrastText: \"#fff\",\n    },\n    warning: {\n        main: \"#fa8c16\",\n        contrastText: \"#fff\",\n    },\n    info: {\n        main: \"#1890ff\",\n        contrastText: \"#fff\",\n    },\n    divider: \"rgba(0,0,0,0)\",\n    text: {\n        primary: \"#fff\",\n        secondary: \"rgba(255,255,255,0.7)\",\n        disabled: \"#d1d1d1\",\n    },\n};\n","import { TypographyVariantsOptions } from \"@mui/material\";\n\nexport const typography: TypographyVariantsOptions = {\n    fontFamily: [\n        \"Montserrat\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n};\n","import React from \"react\";\nimport { NotificationProvider } from \"@pankod/refine-core\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport { CircularDeterminate } from \"@components\";\nimport { Box, IconButton, Typography } from \"@mui/material\";\nimport { UndoOutlined } from \"@mui/icons-material\";\n\nexport const notificationProvider = (): NotificationProvider => {\n    const { closeSnackbar, enqueueSnackbar } = useSnackbar();\n\n    const notificationProvider: NotificationProvider = {\n        open: ({\n            message,\n            type,\n            undoableTimeout,\n            key,\n            cancelMutation,\n            description,\n        }) => {\n            if (type === \"progress\") {\n                const action = (key: any) => (\n                    <IconButton\n                        onClick={() => {\n                            cancelMutation?.();\n                            closeSnackbar(key);\n                        }}\n                        color=\"inherit\"\n                    >\n                        <UndoOutlined />\n                    </IconButton>\n                );\n                enqueueSnackbar(\n                    <>\n                        <CircularDeterminate\n                            undoableTimeout={undoableTimeout ?? 0}\n                            message={message}\n                        />\n                    </>,\n                    {\n                        action,\n                        anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        },\n                        preventDuplicate: true,\n                        key,\n                        autoHideDuration: (undoableTimeout ?? 0) * 1000,\n                        disableWindowBlurListener: true,\n                    },\n                );\n            } else {\n                enqueueSnackbar(\n                    <Box>\n                        <Typography variant=\"subtitle2\" component=\"h6\">\n                            {description}\n                        </Typography>\n                        <Typography variant=\"caption\" component=\"p\">\n                            {message}\n                        </Typography>\n                    </Box>,\n                    {\n                        variant: type,\n                        anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        },\n                        disableWindowBlurListener: true,\n                    },\n                );\n            }\n        },\n        close: (key) => {\n            closeSnackbar(key);\n        },\n    };\n\n    return notificationProvider;\n};\n","import { styled } from \"@mui/material\";\nimport { SnackbarProvider } from \"notistack\";\n\nexport const RefineSnackbarProvider = styled(SnackbarProvider)`\n    &.SnackbarItem-contentRoot {\n        background-color: ${(props) => props.theme.palette.background.default};\n        color: ${(props) => props.theme.palette.primary.main};\n    }\n    &.SnackbarItem-variantSuccess {\n        background-color: ${(props) => props.theme.palette.success.main};\n        color: ${(props) => props.theme.palette.success.contrastText};\n    }\n    &.SnackbarItem-variantError {\n        background-color: ${(props) => props.theme.palette.error.main};\n        color: ${(props) => props.theme.palette.error.contrastText};\n    }\n    &.SnackbarItem-variantInfo {\n        background-color: ${(props) => props.theme.palette.info.main};\n        color: ${(props) => props.theme.palette.info.contrastText};\n    }\n    &.SnackbarItem-variantWarning {\n        background-color: ${(props) => props.theme.palette.warning.main};\n        color: ${(props) => props.theme.palette.warning.contrastText};\n    }\n`;\n"],"mappings":"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M,UACN,aAAc,MAClB,EACA,WAAY,CACR,QAAS,UACT,MAAO,SACX,EACA,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,MAAO,CACH,KAAM,UACN,aAAc,MAClB,EACA,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,KAAM,CACF,KAAM,UACN,aAAc,MAClB,EACA,QAAS,gBACT,KAAM,CACF,QAAS,UACT,UAAW,UACX,SAAU,SACd,CACJ,ECpCO,IAAMC,GAA8B,CACvC,KAAM,OACN,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,UAAW,CACP,KAAM,UACN,aAAc,MAClB,EACA,WAAY,CACR,QAAS,UACT,MAAO,SACX,EACA,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,MAAO,CACH,KAAM,UACN,aAAc,MAClB,EACA,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,KAAM,CACF,KAAM,UACN,aAAc,MAClB,EACA,QAAS,gBACT,KAAM,CACF,QAAS,OACT,UAAW,wBACX,SAAU,SACd,CACJ,ECpCO,IAAMC,GAAwC,CACjD,WAAY,CACR,aACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,mBACJ,EAAE,KAAK,GAAG,CACd,EHVA,IAAMC,GAAsC,CACxC,MAAO,CACH,aAAc,CAClB,EACA,WAAY,CACR,GAAGC,EACP,CACJ,EAEMC,MAAa,gBAAY,CAC3B,GAAGF,GACH,QAASG,GACT,WAAY,CACR,UAAW,CACP,eAAgB,CACZ,aAAc,CACV,gBAAiB,MACrB,CACJ,CACJ,EACA,SAAU,CACN,eAAgB,CACZ,KAAM,CACF,gBACI,uEACR,CACJ,CACJ,EACA,cAAe,CACX,eAAgB,CACZ,GAAI,CACA,WAAY,IACZ,WAAY,MAChB,CACJ,CACJ,CACJ,CACJ,CAAC,EAEKC,MAAY,gBAAY,CAC1B,GAAGJ,GACH,QAASK,GACT,WAAY,CACR,SAAU,CACN,eAAgB,CACZ,KAAM,CACF,gBACI,yEACR,CACJ,CACJ,EACA,UAAW,CACP,aAAc,CACV,MAAO,aACX,CACJ,EACA,cAAe,CACX,eAAgB,CACZ,GAAI,CACA,WAAY,IACZ,WAAY,MAChB,CACJ,CACJ,CACJ,CACJ,CAAC,EIvED,IAAAC,GAAkB,oBAGlBC,GAA4B,qBAG5B,IAAAC,GAA4C,yBAC5CC,GAA6B,+BAEhBC,GAAuB,IAA4B,CAC5D,GAAM,CAAE,cAAAC,EAAe,gBAAAC,CAAgB,KAAI,gBAAY,EAoEvD,MAlEmD,CAC/C,KAAM,CAAC,CACH,QAAAC,EACA,KAAAC,EACA,gBAAAC,EACA,IAAAC,EACA,eAAAC,EACA,YAAAC,CACJ,IAAM,CACF,GAAIJ,IAAS,WAAY,CACrB,IAAMK,EAAUH,GACZ,GAAAI,QAAA,cAAC,eACG,QAAS,IAAM,CACXH,GAAA,MAAAA,IACAN,EAAcK,CAAG,CACrB,EACA,MAAM,WAEN,GAAAI,QAAA,cAAC,oBAAa,CAClB,EAEJR,EACI,GAAAQ,QAAA,iBAAAA,QAAA,cACI,GAAAA,QAAA,cAACC,GAAA,CACG,gBAAiBN,GAAA,KAAAA,EAAmB,EACpC,QAASF,EACb,CACJ,EACA,CACI,OAAAM,EACA,aAAc,CACV,SAAU,MACV,WAAY,OAChB,EACA,iBAAkB,GAClB,IAAAH,EACA,kBAAmBD,GAAA,KAAAA,EAAmB,GAAK,IAC3C,0BAA2B,EAC/B,CACJ,CACJ,MACIH,EACI,GAAAQ,QAAA,cAAC,YACG,GAAAA,QAAA,cAAC,eAAW,QAAQ,YAAY,UAAU,MACrCF,CACL,EACA,GAAAE,QAAA,cAAC,eAAW,QAAQ,UAAU,UAAU,KACnCP,CACL,CACJ,EACA,CACI,QAASC,EACT,aAAc,CACV,SAAU,MACV,WAAY,OAChB,EACA,0BAA2B,EAC/B,CACJ,CAER,EACA,MAAQE,GAAQ,CACZL,EAAcK,CAAG,CACrB,CACJ,CAGJ,EC/EA,IAAAM,GAAuB,yBACvBC,GAAiC,qBAEpBC,MAAyB,WAAO,mBAAgB;AAAA;AAAA,4BAEhCC,GAAUA,EAAM,MAAM,QAAQ,WAAW;AAAA,iBACpDA,GAAUA,EAAM,MAAM,QAAQ,QAAQ;AAAA;AAAA;AAAA,4BAG3BA,GAAUA,EAAM,MAAM,QAAQ,QAAQ;AAAA,iBACjDA,GAAUA,EAAM,MAAM,QAAQ,QAAQ;AAAA;AAAA;AAAA,4BAG3BA,GAAUA,EAAM,MAAM,QAAQ,MAAM;AAAA,iBAC/CA,GAAUA,EAAM,MAAM,QAAQ,MAAM;AAAA;AAAA;AAAA,4BAGzBA,GAAUA,EAAM,MAAM,QAAQ,KAAK;AAAA,iBAC9CA,GAAUA,EAAM,MAAM,QAAQ,KAAK;AAAA;AAAA;AAAA,4BAGxBA,GAAUA,EAAM,MAAM,QAAQ,QAAQ;AAAA,iBACjDA,GAAUA,EAAM,MAAM,QAAQ,QAAQ;AAAA;","names":["src_exports","__export","AuthPage","BooleanField","Breadcrumb","CircularDeterminate","CloneButton","Create","CreateButton","DarkTheme","DateField","DeleteButton","Edit","EditButton","EmailField","ErrorComponent","ExportButton","FileField","Header","ImportButton","Layout","LightTheme","List","ListButton","LoginPage","MarkdownField","NumberField","ReadyPage","RefineSnackbarProvider","RefreshButton","SaveButton","Show","ShowButton","Sider","TagField","TextField","Title","UrlField","colors","locale","notificationProvider","useAutocomplete","useDataGrid","useMenu","__toCommonJS","__reExport","src_exports","import_LoadingButton","colors","locale","import_styles","import_Accordion","import_AccordionActions","import_AccordionDetails","import_AccordionSummary","import_Alert","import_AlertTitle","import_AppBar","import_Autocomplete","import_Avatar","import_AvatarGroup","import_Backdrop","import_Badge","import_BottomNavigation","import_BottomNavigationAction","import_Box","import_Breadcrumbs","import_Button","import_ButtonBase","import_ButtonGroup","import_Card","import_CardActionArea","import_CardActions","import_CardContent","import_CardHeader","import_CardMedia","import_Checkbox","import_Chip","import_CircularProgress","import_ClickAwayListener","import_Collapse","import_Container","import_CssBaseline","import_darkScrollbar","import_Dialog","import_DialogActions","import_DialogContent","import_DialogContentText","import_DialogTitle","import_Divider","import_Drawer","import_Fab","import_Fade","import_FilledInput","import_FormControl","import_FormControlLabel","import_FormGroup","import_FormHelperText","import_FormLabel","import_Grid","import_Grow","import_Hidden","import_Icon","import_IconButton","import_ImageList","import_ImageListItem","import_ImageListItemBar","import_Input","import_InputAdornment","import_InputBase","import_InputLabel","import_LinearProgress","import_Link","import_List","import_ListItem","import_ListItemAvatar","import_ListItemButton","import_ListItemIcon","import_ListItemSecondaryAction","import_ListItemText","import_ListSubheader","import_Menu","import_MenuItem","import_MenuList","import_MobileStepper","import_Modal","import_NativeSelect","import_NoSsr","import_OutlinedInput","import_Pagination","import_PaginationItem","import_Paper","import_Popover","import_Popper","import_Portal","import_Radio","import_RadioGroup","import_Rating","import_ScopedCssBaseline","import_Select","import_Skeleton","import_Slide","import_Slider","import_Snackbar","import_SnackbarContent","import_SpeedDial","import_SpeedDialAction","import_SpeedDialIcon","import_Stack","import_Step","import_StepButton","import_StepConnector","import_StepContent","import_StepIcon","import_StepLabel","import_Stepper","import_SvgIcon","import_SwipeableDrawer","import_Switch","import_Tab","import_Table","import_TableBody","import_TableCell","import_TableContainer","import_TableFooter","import_TableHead","import_TablePagination","import_TableRow","import_TableSortLabel","import_Tabs","import_TabScrollButton","import_TextField","import_TextareaAutosize","import_ToggleButton","import_ToggleButtonGroup","import_Toolbar","import_Tooltip","import_Typography","import_useMediaQuery","import_usePagination","import_useScrollTrigger","import_Zoom","import_useAutocomplete","import_GlobalStyles","import_composeClasses","import_generateUtilityClass","import_generateUtilityClasses","import_notistack","import_react","import_material","import_react","import_material","import_icons_material","import_refine_core","Sider","render","collapsed","setCollapsed","opened","setOpened","drawerWidth","t","Link","hasDashboard","translate","menuItems","selectedKey","defaultOpenKeys","isExistAuthentication","mutateLogout","Title","open","setOpen","React","previous","previousOpenKeys","key","uniqueKeys","RenderToTitle","handleClick","renderTreeView","tree","item","icon","label","route","name","children","parentName","isOpen","isSelected","isNested","dashboard","logout","items","drawer","prev","import_react","import_refine_core","import_material","Header","user","React","Layout","Sider","Header","Footer","OffLayoutArea","children","SiderToRender","HeaderToRender","React","theme","import_react","import_refine_core","import_material","Title","collapsed","Link","React","React","import_refine_react_hook_form","import_material","import_refine_core","LoginPage","_a","register","handleSubmit","errors","login","isLoading","translate","data","React","import_material","ReadyPage","renderCode","text","theme","import_react","import_refine_core","import_material","import_icons_material","ErrorComponent","errorMessage","setErrorMessage","push","translate","actionTypes","useParams","params","resource","_a","action","resourceName","resourceFromRoute","React","import_react","React","import_refine_react_hook_form","import_material","import_refine_core","layoutStyles","titleStyles","LoginPage","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","_a","onSubmit","useFormProps","methods","register","handleSubmit","errors","login","isLoading","translate","Link","renderProviders","provider","Content","titleStyles","data","MuiLink","layoutStyles","React","import_refine_react_hook_form","import_material","import_refine_core","RegisterPage","loginLink","wrapperProps","contentProps","renderContent","providers","formProps","onSubmit","useFormProps","register","handleSubmit","errors","registerMutate","isLoading","translate","Link","renderProviders","provider","Content","titleStyles","data","MuiLink","layoutStyles","React","import_refine_react_hook_form","import_material","import_refine_core","ForgotPasswordPage","loginLink","wrapperProps","contentProps","renderContent","formProps","onSubmit","useFormProps","register","handleSubmit","errors","mutate","isLoading","translate","Link","Content","titleStyles","data","MuiLink","layoutStyles","React","import_refine_react_hook_form","import_material","import_refine_core","UpdatePasswordPage","wrapperProps","contentProps","renderContent","formProps","_a","_b","onSubmit","useFormProps","register","watch","handleSubmit","errors","update","isLoading","translate","Content","titleStyles","data","value","layoutStyles","AuthPage","props","type","React","RegisterPage","ForgotPasswordPage","UpdatePasswordPage","LoginPage","import_react","import_refine_core","import_material","import_ArrowBack","Create","title","actionButtons","children","saveButtonProps","resourceFromProps","isLoading","cardProps","cardHeaderProps","cardContentProps","cardActionsProps","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","goBack","translate","useParams","routeResourceName","routeFromAction","resource","options","breadcrumb","breadcrumbComponent","React","Breadcrumb","defaultFooterButtons","SaveButton","ArrowBackIcon","import_react","import_refine_core","import_material","import_ArrowBack","Edit","title","actionButtons","saveButtonProps","mutationModeProp","recordItemId","children","deleteButtonProps","canDelete","resourceFromProps","isLoading","cardProps","cardHeaderProps","cardContentProps","cardActionsProps","breadcrumbFromProps","dataProviderName","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","translate","goBack","list","resourceWithRoute","mutationModeContext","mutationMode","useParams","routeResourceName","routeFromAction","idFromRoute","resource","isDeleteButtonVisible","options","breadcrumb","breadcrumbComponent","React","Breadcrumb","id","defaultHeaderButtons","ListButton","RefreshButton","defaultFooterButtons","DeleteButton","SaveButton","ArrowBackIcon","import_react","import_refine_core","import_material","List","title","canCreate","children","createButtonProps","resourceFromProps","cardProps","cardHeaderProps","cardContentProps","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","_a","_b","useParams","routeResourceName","translate","resource","isCreateButtonVisible","options","breadcrumb","breadcrumbComponent","React","Breadcrumb","defaultHeaderButtons","CreateButton","import_react","import_refine_core","import_material","import_ArrowBack","Show","title","canEdit","canDelete","actionButtons","isLoading","children","resourceFromProps","recordItemId","cardProps","cardHeaderProps","cardContentProps","cardActionsProps","breadcrumbFromProps","dataProviderName","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","translate","goBack","list","resourceWithRoute","useParams","routeResourceName","routeFromAction","idFromRoute","resource","isDeleteButtonVisible","isEditButtonVisible","options","breadcrumb","breadcrumbComponent","React","Breadcrumb","id","defaultHeaderButtons","ListButton","EditButton","DeleteButton","RefreshButton","ArrowBackIcon","import_react","import_refine_core","import_refine_ui_types","import_material","import_icons_material","CreateButton","resourceNameOrRouteName","hideText","accessControl","ignoreAccessControlProvider","svgIconProps","children","onClick","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","resource","resourceName","Link","generateCreateUrl","translate","data","disabledTitle","createUrl","sx","restProps","React","e","import_react","import_refine_core","import_refine_ui_types","import_material","import_icons_material","EditButton","resourceNameOrRouteName","recordItemId","hideText","accessControl","ignoreAccessControlProvider","svgIconProps","children","onClick","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","resourceName","resource","id","translate","generateEditUrl","Link","data","disabledTitle","editUrl","sx","restProps","React","e","import_react","import_refine_core","import_refine_ui_types","import_material","import_lab","import_icons_material","DeleteButton","resourceNameOrRouteName","recordItemId","onSuccess","mutationModeProp","children","successNotification","errorNotification","hideText","accessControl","ignoreAccessControlProvider","metaData","dataProviderName","confirmTitle","confirmOkText","confirmCancelText","svgIconProps","invalidates","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","resourceName","id","resource","translate","mutationModeContext","mutationMode","mutate","isLoading","variables","data","open","setOpen","React","handleClickOpen","handleClose","handleCloseOnConfirm","value","sx","restProps","import_react","import_refine_core","import_refine_ui_types","import_lab","import_icons_material","RefreshButton","resourceNameOrRouteName","recordItemId","hideText","metaData","dataProviderName","svgIconProps","children","onClick","rest","resourceName","id","translate","refetch","isFetching","sx","restProps","React","e","import_react","import_refine_core","import_refine_ui_types","import_material","import_icons_material","ShowButton","resourceNameOrRouteName","recordItemId","hideText","accessControl","ignoreAccessControlProvider","svgIconProps","children","onClick","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","resourceName","id","resource","generateShowUrl","Link","translate","data","disabledTitle","showUrl","sx","restProps","React","e","import_react","import_refine_core","import_refine_ui_types","import_material","import_icons_material","ListButton","resourceNameOrRouteName","hideText","accessControl","ignoreAccessControlProvider","svgIconProps","children","onClick","rest","_a","_b","_c","accessControlEnabled","hideIfUnauthorized","resource","resourceName","generateListUrl","Link","translate","data","disabledTitle","listUrl","sx","restProps","React","e","import_react","import_refine_core","import_refine_ui_types","import_lab","import_icons_material","ExportButton","hideText","children","loading","svgIconProps","rest","translate","sx","restProps","React","import_react","import_refine_core","import_refine_ui_types","import_lab","import_icons_material","SaveButton","hideText","svgIconProps","children","rest","translate","sx","restProps","React","import_react","import_refine_core","import_refine_ui_types","import_material","import_icons_material","CloneButton","resourceNameOrRouteName","recordItemId","hideText","accessControl","ignoreAccessControlProvider","svgIconProps","children","onClick","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","resourceName","resource","id","generateCloneUrl","Link","translate","data","disabledTitle","cloneUrl","sx","restProps","React","e","import_react","import_refine_core","import_refine_ui_types","import_lab","import_icons_material","ImportButton","inputProps","hideText","loading","svgIconProps","children","rest","translate","sx","restProps","React","import_react","import_material","CircularDeterminate","undoableTimeout","message","progress","setProgress","timeCount","setTimeCount","increaseProgress","timer","prevProgress","React","import_react","import_material","TextField","value","rest","React","import_react","import_material","TagField","value","rest","React","import_react","import_material","EmailField","value","rest","React","import_react","import_material","import_icons_material","BooleanField","value","valueLabelTrue","valueLabelFalse","trueIcon","falseIcon","svgIconProps","rest","React","import_react","import_dayjs","import_localizedFormat","import_material","dayjs","LocalizedFormat","defaultLocale","DateField","value","locales","dateFormat","rest","React","import_react","FileField","title","src","rest","React","UrlField","import_react","import_material","UrlField","children","value","rest","React","import_react","import_material","toLocaleStringSupportsOptions","NumberField","value","locale","options","rest","number","React","import_react","import_react_markdown","import_remark_gfm","MarkdownField","value","React","ReactMarkdown","gfm","import_react","import_refine_core","import_material","import_icons_material","Breadcrumb","breadcrumbProps","showHome","hideIcons","_a","breadcrumbs","RouterLink","hasDashboard","LinkRouter","props","React","label","icon","href","import_refine_core","import_isEqual","import_unionWith","useAutocomplete","props","_a","_b","queryResult","defaultValueQueryResult","onSearch","useSelectCore","unionWith","isEqual","event","value","x","import_react","import_refine_core","import_material","import_differenceWith","import_isEqual","import_warn_once","import_x_data_grid","transformSortModelToCrudSorting","sortModel","field","sort","transformCrudSortingToSortModel","crudSorting","order","transformMuiOperatorToCrudOperator","operatorValue","transformFilterModelToCrudFilters","items","linkOperator","filters","columnField","value","transformCrudOperatorToMuiOperator","operator","columnType","transformCrudFiltersToFilterModel","crudFilters","columnsType","_a","gridFilterItems","isExistOrFilter","filter","useDataGrid","columns","onSearchProp","initialCurrent","initialPageSize","hasPagination","initialSorter","permanentSorter","defaultSetFilterBehavior","initialFilter","permanentFilter","syncWithLocationProp","resourceFromProp","successNotification","errorNotification","queryOptions","liveModeFromProp","onLiveEvent","liveParams","metaData","dataProviderName","columnsTypes","setColumnsType","tableQueryResult","current","setCurrent","pageSize","setPageSize","filters","setFilters","sorter","setSorter","pageCount","createLinkForSyncWithLocation","useTableCore","muiCrudFilters","setMuiCrudFilters","warnOnce","theme","data","isFetched","isLoading","liveMode","handlePageChange","page","handlePageSizeChange","handleSortModelChange","sortModel","crudSorting","transformSortModelToCrudSorting","handleFilterModelChange","filterModel","crudFilters","transformFilterModelToCrudFilters","f","search","value","searchFilters","paginationValues","dataGridPaginationValues","transformCrudSortingToSortModel","differenceWith","isEqual","transformCrudFiltersToFilterModel","state","newColumnsTypes","key","import_react","import_refine_core","useMenu","selectedKey","menuItems","useMenuCore","defaultOpenKeys","React","keys","x","_defaultOpenKeys","key","index","import_material","lightPalette","darkPalette","typography","commonThemeProperties","typography","LightTheme","lightPalette","DarkTheme","darkPalette","import_react","import_notistack","import_material","import_icons_material","notificationProvider","closeSnackbar","enqueueSnackbar","message","type","undoableTimeout","key","cancelMutation","description","action","React","CircularDeterminate","import_material","import_notistack","RefineSnackbarProvider","props"]}