import { UseMutationOptions, UseMutationResult } from "@tanstack/react-query";
import { TForgotPasswordData } from "../../../interfaces";
export declare type UseForgotPasswordProps<TVariables> = {
    mutationOptions?: Omit<UseMutationOptions<TForgotPasswordData, Error, TVariables, unknown>, "mutationFn" | "onError" | "onSuccess">;
};
/**
 * `useForgotPassword` calls `forgotPassword` method from {@link https://refine.dev/docs/api-references/providers/auth-provider `authProvider`} under the hood.
 *
 * @see {@link https://refine.dev/docs/core/hooks/auth/useForgotPassword} for more details.
 *
 * @typeParam TData - Result data of the query
 * @typeParam TVariables - Values for mutation function. default `{}`
 *
 */
export declare const useForgotPassword: <TVariables = {}>({ mutationOptions, }?: UseForgotPasswordProps<TVariables>) => UseMutationResult<TForgotPasswordData, Error, TVariables, unknown>;
//# sourceMappingURL=index.d.ts.map