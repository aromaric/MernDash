var B=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var O=Object.prototype.hasOwnProperty;var I=(t,r)=>{for(var u in r)B(t,u,{get:r[u],enumerable:!0})},K=(t,r,u,m)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of N(r))!O.call(t,o)&&o!==u&&B(t,o,{get:()=>r[o],enumerable:!(m=W(r,o))||m.enumerable});return t};var $=t=>K(B({},"__esModule",{value:!0}),t);var G={};I(G,{Controller:()=>e.Controller,FormProvider:()=>e.FormProvider,appendErrors:()=>e.appendErrors,get:()=>e.get,set:()=>e.set,useController:()=>e.useController,useFieldArray:()=>e.useFieldArray,useForm:()=>C,useFormContext:()=>e.useFormContext,useFormState:()=>e.useFormState,useModalForm:()=>M,useReactHookForm:()=>e.useForm,useStepsForm:()=>k,useWatch:()=>e.useWatch});module.exports=$(G);var H=require("react"),A=require("react-hook-form"),h=require("@pankod/refine-core"),C=({refineCoreProps:t,warnWhenUnsavedChanges:r,...u}={})=>{let{warnWhenUnsavedChanges:m,setWarnWhen:o}=(0,h.useWarnAboutChange)(),V=r!=null?r:m,b=(0,h.useForm)({...t}),{queryResult:l,onFinish:U,formLoading:x}=b,R=(0,A.useForm)({...u}),{watch:a,reset:i,getValues:y,handleSubmit:n}=R;(0,H.useEffect)(()=>{var s;if(typeof(l==null?void 0:l.data)<"u"){let p={},T=Object.keys(y());Object.entries(((s=l==null?void 0:l.data)==null?void 0:s.data)||{}).forEach(([S,g])=>{T.includes(S)&&(p[S]=g)}),i(p)}},[l==null?void 0:l.data]),(0,H.useEffect)(()=>{let s=a((p,{type:T})=>{T==="change"&&d(p)});return()=>s.unsubscribe()},[a]);let d=s=>(V&&o(!0),s),f=(s,p)=>async T=>(o(!1),await n(s,p)(T));return{...R,handleSubmit:f,refineCore:b,saveButtonProps:{disabled:x,onClick:s=>{f(U,()=>!1)(s)}}}};var P=require("react");var k=({stepsProps:t,...r}={})=>{let{defaultStep:u=0,isBackValidate:m=!1}=t!=null?t:{},[o,V]=(0,P.useState)(u),b=C({...r}),{trigger:l,getValues:U,reset:x,formState:{dirtyFields:R},refineCore:{queryResult:a}}=b;(0,P.useEffect)(()=>{var n;if(a!=null&&a.data){let d={},f=Object.keys(U());Object.entries((n=a==null?void 0:a.data)==null?void 0:n.data).forEach(([c,s])=>{f.includes(c)&&(R[c]?d[c]=U(c):d[c]=s)}),x(d,{keepDirty:!0,keepValues:!0})}},[a==null?void 0:a.data,o]);let i=n=>{let d=n;n<0&&(d=0),V(d)};return{...b,steps:{currentStep:o,gotoStep:async n=>{if(n===o)return;if(n<o&&!m){i(n);return}await l()&&i(n)}}}};var D=require("react"),F=require("@pankod/refine-core");var M=({modalProps:t,refineCoreProps:r,...u}={})=>{let m=(0,F.useTranslate)(),{resource:o,action:V}=r!=null?r:{},{defaultVisible:b=!1,autoSubmitClose:l=!0,autoResetForm:U=!0}=t!=null?t:{},x=C({refineCoreProps:r,...u}),{reset:R,refineCore:{onFinish:a,setId:i},saveButtonProps:y,handleSubmit:n}=x,{visible:d,show:f,close:c}=(0,F.useModal)({defaultVisible:b}),s=async E=>{await a(E),l&&c(),U&&R()},{resourceName:p}=(0,F.useResource)({resourceNameOrRouteName:o}),{warnWhen:T,setWarnWhen:S}=(0,F.useWarnAboutChange)(),g=(0,D.useCallback)(()=>{if(T)if(window.confirm(m("warnWhenUnsavedChanges","Are you sure you want to leave? You have unsaved changes.")))S(!1);else return;i==null||i(void 0),c()},[T]),j=(0,D.useCallback)(E=>{i==null||i(E),f()},[]),w=m(`${p}.titles.${V}`,void 0,`${(0,F.userFriendlyResourceName)(`${V} ${p}`,"singular")}`);return{modal:{submit:s,close:g,show:j,visible:d,title:w},...x,saveButtonProps:{...y,onClick:E=>n(s)(E)}}};var e=require("react-hook-form");
//# sourceMappingURL=index.js.map