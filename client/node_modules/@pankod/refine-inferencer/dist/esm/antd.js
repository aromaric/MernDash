import ne from"react";import{useRouterContext as Zr}from"@pankod/refine-core";import*as _r from"@pankod/refine-antd";import V from"react";import{useResource as nr}from"@pankod/refine-core";var cr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,se=(e,n)=>{let c=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];cr.test(e)&&c.unshift("url");let s=c.find(u=>u in n&&!!n[u]);if(s)return s==="firstName"&&"lastName"in n?["firstName","lastName"]:s};function ie(e,n,c){var u;if(n)return n;let s=c==null?void 0:c.find(i=>i.name===e);return(u=s==null?void 0:s.options)!=null&&u.dataProviderName?s.options.dataProviderName:"default"}var Y=e=>{var n;return(n=e==null?void 0:e.options)==null?void 0:n.dataProviderName};var ce=e=>{let n=[...e].filter(Boolean).sort((c,s)=>(s.priority||0)-(c.priority||0))[0];return n||null};import ur from"prettier/standalone";import mr from"prettier/parser-typescript";var ue=e=>{try{return ur.format(e,{parser:"typescript",plugins:[mr],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),e}};var me=e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`);var pe=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,we=(e,n)=>{let c=pe.test(e),s=typeof n=="string"||typeof n=="number",u=Array.isArray(n)&&n.every(i=>typeof i=="string"||typeof i=="number");return c&&s||c&&u?{key:e,relation:!0,multiple:!!u,type:"relation",priority:1}:!1};var L=e=>e.replace(pe,"");var y=e=>L(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(m=>m.charAt(0).toUpperCase()+m.slice(1)).join(" ");var le=e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(u=>!u.trim().startsWith("export default")).join(`
`);var Se=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,pr=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,lr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,de=(e,n={})=>{let c=e.matchAll(Se),s=new Set;for(let u of c){let[,i,m,g,d]=u;if(d in n){let k=n[d];if(d==="react")continue;i&&s.add(`const { default: ${i} } = ${k};`),m&&s.add(`const${m.replace(lr,"$1: $3$4")} = ${k};`),g&&s.add(`const ${g} = ${k};`)}}return me(`
    ${Array.from(s).join(`
`)}
    ${e.replace(Se,"").replace(pr,"")}
    `)};import re from"pluralize";var ye=(e,n)=>e?n.find(s=>{let u=L(e.key);return s.name===u||s.name===(re.isPlural(u)?u:re.plural(u))||s.name===(re.isSingular(u)?u:re.singular(u))}):void 0;import dr from"pluralize";var P=(e,n,c="Inferred")=>{let s=e.replace(/[^a-zA-Z0-9]/g," "),u=dr.singular(s),m=y(u).replace(/ /g,"")||c,g=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(m)?`${m}${g}`:`${g}${m}`};var yr=e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"",l=(e,...n)=>e.reduce((s,u,i)=>`${s}${u}${yr(n[i])}`,"").trim();var fe=(e,n)=>`
    ${e!=null?e:""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `;var ge=e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,"");var fr=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,z=e=>fr.test(e);function Ie(e,n,c){let s=`${e}`;return n&&(s+="?.",z(n)?s+=n:s+=`['${n}']`),c&&(s+="?.",z(c)?s+=c:s+=`['${c}']`),s}function gr(e,n,c){return(c!=null?c:[]).map(u=>Ie(e,n,u))}var p=(e,n,c,s=' + " " + ')=>Array.isArray(c)?s?gr(e,n,c).join(s):Ie(e,n,c[0]):Ie(e,n,c);var B=e=>{let n=e.reduce((s,[u,i,m])=>(s[i]||(s[i]=[]),s[i].includes(u)||(m?s[i].push([u,!0]):s[i].push(u)),s),{});return Object.entries(n).map(([s,u])=>{let i=u.find(k=>Array.isArray(k)&&k[1]),m=u.filter(k=>typeof k=="string"),g=i?`${i[0]}`:"",d=m.length?`{ ${m.join(", ")} }`:"";return`import ${g}${g&&d?", ":""}${d} from "${s}";`})};import Ne from"pluralize";var O=(e="")=>Ne.isSingular(e)?e:Ne.singular(e);import Le from"pluralize";var H=(e="")=>Le.isPlural(e)?e:Le.plural(e);var Ir=/^id$/i,W=e=>Ir.test(e);var $e=e=>e.relationInfer&&e.relationInfer.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":"";var j=e=>{};var R=(e,n="")=>{if(Number.isInteger(Number(e)))return n.charAt(0).toLowerCase()+n.slice(1)+e;let s=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),u=y(s).replace(/ /g,"");return`${u.charAt(0).toLowerCase()+u.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`};var Pe=e=>{let n=(c,s,u,i=n)=>{let m=e.map(d=>d(c,s,u,i));return ce(m)};return n};var Ee=e=>(c,s,u,i,m)=>e.reduce((g,d)=>d(g,s,u,i,m),c);var Ve=(e,n,c,s)=>{let u=Array.isArray(n),i=Array.isArray(n)&&n.every(m=>typeof m=="string"||typeof m=="number");if(u){if(!i){let g=s(e,n[0],c,s);return g?{...g,key:e,multiple:!0,priority:1}:!1}let m=s(e,n[0],c,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:m==null?void 0:m.type}}return!1};var De=(e,n)=>typeof n=="boolean"?{key:e,type:"boolean"}:!1;import Be from"dayjs";var $r=/(_at|_on|At|On|AT|ON)(\[\])?$/,je=(e,n)=>{let c=$r.test(e)&&Be(n).isValid(),s=typeof n=="string"&&Be(n).isValid(),u=typeof n=="string"&&n.length>4;return c||s&&u?{key:e,type:"date",priority:1}:!1};var kr=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Oe=(e,n)=>typeof n=="string"&&kr.test(n)?{key:e,type:"email",priority:1}:!1;var Fr=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,Me=(e,n)=>typeof n=="string"&&Fr.test(n)?{key:e,type:"image",priority:2}:!1;var Ue=(e,n)=>typeof n>"u"||n===null?null:!1;var _e=(e,n)=>typeof n=="number"?{key:e,type:"number"}:!1;var hr=/id$/i,Ke=(e,n,c,s)=>{let u=n!==null,i=!Array.isArray(n);if(u&&i&&typeof n=="object"){if(Object.keys(n).length===1&&hr.test(Object.keys(n)[0]))return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let d=se(e,n);if((d?d.length>0:!1)&&d){let x=d&&Array.isArray(d)?d[0]:d,v=s(x,n[x],n,s);if(v){let $=Array.isArray(d)?d.map(b=>v.accessor?`${b}.${Array.isArray(v.accessor)?v.accessor[0]:v.accessor}`:b):v.accessor?Array.isArray(v.accessor)?`${d}.${v.accessor[0]}`:`${d}.${v.accessor}`:d;return{...v,fieldable:!0,key:e,accessor:$,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1};var ze=(e,n)=>typeof n=="string"&&n.length>100?{key:e,type:"richtext",priority:1}:!1;var qe=(e,n)=>typeof n=="string"?{key:e,type:"text"}:!1;var xr=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,He=(e,n)=>typeof n=="string"&&xr.test(n)?{key:e,type:"url",priority:1}:!1;var We=[Ve,De,je,Oe,Me,Ue,_e,Ke,we,ze,qe,He];var Ze=(e,n,c,s)=>e.map(i=>{if(!i.relation&&(i.type==="text"||i.type==="richtext"||i.type==="number")&&!i.canRelation){let m=/^[a-z0-9-]+$/,g=$=>m.test(`${$}`),d=i.key.toLowerCase()!=="id";return!(!i.accessor||typeof i.accessor=="string")||!d?i:(i.multiple?s[i.key]:[s[i.key]]).every($=>g(i.accessor?$[i.accessor]:$))?{...i,canRelation:!0}:i}return i});var vr=/(image|photo|avatar|cover|thumbnail|icon)/i,Ge=e=>e.map(c=>c.type==="url"&&vr.test(c.key)?{...c,type:"image"}:c);var Xe=(e,n)=>e.map(s=>{let u=ye(s,n);return u?{...s,relation:!0,type:"relation",resource:u}:s});var Ye=(e,n,c,s,u)=>e.map(m=>{if(m.relation&&m.type==="relation"&&!m.resource){let g=m.accessor?s[m.key][m.accessor]:s[m.key],d=u(m.key,g,s,u);if(d&&d.type!=="relation")return{...m,fieldable:!0,relation:!1,type:d.type,canRelation:!0}}return m});var Je=[Ge,Xe,Ye,Ze];import J,{useEffect as br}from"react";import Cr,{defaultProps as Ar}from"prism-react-renderer";import Tr from"prism-react-renderer/themes/vsDark";var ke=({code:e,wrapperProps:n})=>(br(()=>{var s;let c=document.createElement("style");c.appendChild(document.createTextNode(`
                #code-highlight::-webkit-scrollbar {-webkit-appearance: none; height: 7px; width: 7px;}
                #code-highlight::-webkit-scrollbar-thumb {background-color: #666b7a;}
                #code-highlight::-webkit-scrollbar-corner {background-color: rgb(30, 30, 30);}
                `)),(s=document.getElementById("code-highlight"))==null||s.appendChild(c)},[]),J.createElement("div",{id:"code-highlight",style:{maxHeight:"75vh",height:"100%",overflow:"auto",backgroundColor:"rgb(30, 30, 30)"},...n!=null?n:{}},J.createElement(Cr,{...Ar,theme:Tr,code:e,language:"tsx"},({className:c,style:s,tokens:u,getLineProps:i,getTokenProps:m})=>J.createElement("pre",{className:c,style:{...s,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},u.map((g,d)=>J.createElement("div",{key:d,...i({line:g,key:d})},g.map((k,x)=>J.createElement("span",{key:x,...m({token:k,key:x})}))))))));import E from"react";import*as Rr from"@pankod/refine-core";import{LivePreview as wr,LiveProvider as Sr}from"@aliemir/react-live";var Qe=[["react","React",E],["@pankod/refine-core","RefineCore",Rr]],Fe=E.createContext({}),he=({fetchError:e,code:n,additionalScope:c,errorComponent:s})=>{var g;let u=(g=n&&le(de(n,[...Qe,...c!=null?c:[]].reduce((d,[k,x,v,$])=>$?d:{...d,[k]:x},{}))))!=null?g:"",i=E.useMemo(()=>({React:E,...E,...[...Qe,...c!=null?c:[]].reduce((d,[k,x,v])=>({...d,[x]:v}),{})}),[c]),m=E.useMemo(()=>()=>{let{error:k}=E.useContext(Fe);return s?E.createElement(s,{error:k?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${k}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},[s,e]);return E.createElement(Sr,{Context:Fe,code:u,scope:i,noInline:!0},!e&&E.createElement(wr,{Context:Fe}),E.createElement(m,null))};import Z from"react";import{useDataProvider as Nr,useResource as Lr}from"@pankod/refine-core";var er=(e,n,c)=>{let{resource:s,resourceName:u,id:i,resources:m}=Lr({resourceNameOrRouteName:n}),g=c!=null?c:i,d=Nr(),[k,x]=Z.useState(void 0),[v,$]=Z.useState(void 0),[b,N]=Z.useState(!0),[o,A]=Z.useState(!1),S=Z.useCallback(async a=>{var I,r;let f=(I=Y(s))!=null?I:ie(u,void 0,m),t=d(f);A(!0),x(void 0);try{if(e==="list"||e==="create"){let h=(r=(await t.getList({resource:u})).data)==null?void 0:r[0];h||x(`<p>No records/data found for resource "${u}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),$(h),setTimeout(()=>{A(!1)},500)}if((e==="edit"||e==="show")&&a){let h=(await t.getOne({resource:u,id:a})).data;h||x(`<p>No records/data found for resource "${u}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),$(h),setTimeout(()=>{A(!1)},500)}}catch(F){console.warn("An error occured while fetching the resource data. Please check the error message below:",F),x(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${u}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{A(!1)},500)}},[e,d,s,u,m]);return Z.useEffect(()=>{N(!1),!o&&!v&&S(g)},[S,g]),{data:v,loading:o,initial:b,error:k}};import Q from"react";import{useDataProvider as Pr}from"@pankod/refine-core";import{get as rr}from"lodash";var tr=({record:e,fields:n,infer:c})=>{let s=Pr(),[u,i]=Q.useState([]),[m,g]=Q.useState(!0),[d,k]=Q.useState(!1),x=Q.useCallback(async v=>{console.groupCollapsed("@pankod/refine-inferencer is trying to detect relations");let $=[];k(!0);try{let b=v.map(async o=>{if(o&&(o.relation||o.canRelation)&&e){let A=Y(o.resource),S=s(A),a=Array.isArray(o.accessor)?void 0:o.multiple?e[o.key].map(f=>o.accessor?rr(f,o.accessor):f)[0]:o.accessor?rr(e[o.key],o.accessor):e[o.key];if(a&&o.resource)try{let{data:f}=await S.getOne({resource:o.resource.name,id:a});$.push({status:"success",resource:o.resource.name,field:o.key});let t=c("__",f,{},c);return{...o,relationInfer:t}}catch{return $.push({status:"error",resource:o.resource.name,field:o.key}),{...o,relationInfer:null}}if(a){let f,t;try{let{data:F}=await S.getOne({resource:H(L(o.key)),id:a});$.push({status:"success",resource:H(L(o.key)),field:o.key}),f=F,t=!0}catch{$.push({status:"error",resource:H(L(o.key)),field:o.key});try{let{data:h}=await S.getOne({resource:O(L(o.key)),id:a});$.push({status:"success",resource:O(L(o.key)),field:o.key}),f=h,t=!1}catch{return $.push({status:"error",resource:O(L(o.key)),field:o.key}),{...o,relationInfer:null}}}let I=c("__",f,{},c),r=L(o.key);return{...o,relation:!0,type:"relation",resource:{name:t?H(r):O(r)},fieldable:!1,canRelation:void 0,relationInfer:I}}return{...o,relationInfer:null}}return o}),N=await Promise.all(b);i(N.filter(o=>o)),setTimeout(()=>{k(!1)},500)}catch{setTimeout(()=>{k(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${$.length} attempts and succeeded with ${$.filter(b=>b.status==="success").length} attempts.`),console.groupEnd()},500)},[s,e]);return Q.useEffect(()=>{g(!1),!d&&n&&n.length>0&&u.length===0&&x(n)},[x,d,n,x]),{fields:u,loading:d,initial:m}};var M=({type:e,additionalScope:n=[],customElements:c=[],fieldTransformers:s=[],renderer:u,loadingComponent:i,errorComponent:m,codeViewerComponent:g})=>{let d=Pe([...We,...c]),k=Ee([...Je,...s]),x=({resourceName:$,fieldTransformer:b,id:N})=>{var T;let{resource:o,resources:A}=nr({resourceNameOrRouteName:$}),{resource:S}=nr(),{data:a,loading:f,initial:t,error:I}=er(e,$!=null?$:o==null?void 0:o.name,N),r=V.useMemo(()=>{if(a){let oe=Object.keys(a).map(q=>{let D=a[q];return d(q,D,a,d)}).filter(Boolean),G=k(oe,A,o,a,d);return b?G.flatMap(q=>{let D=b(q);return D?[D]:[]}):G}return[]},[a,A,o,b]),{fields:F,loading:h}=tr({record:a,fields:r,infer:d}),C=V.useMemo(()=>!f&&!h&&!t?u({resource:o,resources:A,fields:F,infer:d,isCustomPage:o.name!==S.name,id:N}):"",[o,A,F,f,h]);return V.createElement(V.Fragment,null,i&&(f||h)&&V.createElement(i,null),!f&&!h&&V.createElement(V.Fragment,null,V.createElement(he,{fetchError:!f&&I?I:!f&&!t&&!a,code:fe(C,P((T=o.label)!=null?T:o.name,e)),errorComponent:m,additionalScope:n}),g&&V.createElement(g,{code:ge(C),loading:f||h})))};return({name:$,resource:b,fieldTransformer:N,id:o})=>V.createElement(x,{fieldTransformer:N,resourceName:b!=null?b:$,key:b!=null?b:$,id:o})};import te from"react";import{Alert as Er,Row as Vr,Col as Dr}from"@pankod/refine-antd";var U=({error:e})=>e?te.createElement(Vr,{justify:"center",align:"middle",style:{minHeight:"200px"}},te.createElement(Dr,null,te.createElement(Er,{message:"Error",description:te.createElement("div",{dangerouslySetInnerHTML:{__html:e!=null?e:""}}),type:"error",showIcon:!0}))):null;import xe from"react";import{Spin as Br,Row as jr,Col as Or}from"@pankod/refine-antd";var _=()=>xe.createElement(jr,{justify:"center",align:"middle",style:{minHeight:"300px"}},xe.createElement(Or,null,xe.createElement(Br,{size:"large"})));import w from"react";import{Button as ve,Modal as Mr,Icons as ee,Space as Ur}from"@pankod/refine-antd";var K=({code:e,loading:n})=>{let c=w.useMemo(()=>ue(e!=null?e:""),[e]),s=w.useRef(null),[u,i]=w.useState(!1),[m,g]=w.useState(!1);if(n)return null;let d=()=>{var k,x,v,$;(k=s==null?void 0:s.current)==null||k.select(),(x=s==null?void 0:s.current)==null||x.setSelectionRange(0,Number.MAX_SAFE_INTEGER),typeof navigator<"u"&&(navigator.clipboard.writeText(($=(v=s==null?void 0:s.current)==null?void 0:v.value)!=null?$:""),g(!0),setTimeout(()=>{g(!1)},1e3))};return c?w.createElement(w.Fragment,null,w.createElement("div",{style:{position:"fixed",bottom:12,right:60}},w.createElement(Ur,null,w.createElement(ve,{type:"primary",onClick:()=>i(!0),icon:w.createElement(ee.CodeOutlined,null)},"Show Code"),w.createElement(ve,{type:"default",target:"_blank",href:"https://github.com/refinedev/refine/discussions/3046",icon:w.createElement(ee.MessageOutlined,null)},"Give Feedback"))),w.createElement("div",{style:{height:"50px"}}),w.createElement(Mr,{width:800,open:u,onCancel:()=>i(!1),closeIcon:w.createElement(ee.CloseOutlined,{style:{color:"#666b7a"}}),footer:null,bodyStyle:{padding:0}},w.createElement(ke,{code:c}),w.createElement("textarea",{ref:s,defaultValue:(c!=null?c:"").replace(/\\n/g,`\r
`),id:"code-input","aria-hidden":"true",style:{padding:0,margin:0,width:0,height:0,opacity:0,border:"none",display:"block"}}),w.createElement(ve,{style:{position:"absolute",bottom:12,right:12,width:100},key:"copy",type:"default",icon:m?w.createElement(ee.CheckOutlined,{style:{color:"green"}}):w.createElement(ee.CopyOutlined,null),onClick:d},m?"Copied":"Copy"))):null};var or=({resource:e,fields:n,isCustomPage:c,id:s})=>{var f;let u=P((f=e.label)!=null?f:e.name,"show"),i="record",m=[["React","react",!0],["IResourceComponentsProps","@pankod/refine-core"],["useShow","@pankod/refine-core"],["Show","@pankod/refine-antd"],["Typography","@pankod/refine-antd"]],d=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{if((t==null?void 0:t.relation)&&!t.fieldable&&t.resource){if(t.multiple){m.push(["useMany","@pankod/refine-core"]);let I=p(i,t.key);return t.accessor&&(I=`${p(i,t.key)}?.map((item: any) => ${p("item",void 0,t.accessor)})`),`
                const { data: ${R(t.key,"Data")}, isLoading: ${R(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${I} || [],
                    queryOptions: {
                        enabled: !!${i},
                    },
                });
                `}return m.push(["useOne","@pankod/refine-core"]),`
                const { data: ${R(t.key,"Data")}, isLoading: ${R(t.key,"IsLoading")} } =
                useOne({
                    resource: "${t.resource.name}",
                    id: ${p(i,t.key,t.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${i},
                    },
                });
            `}}).filter(Boolean),k=t=>{if(t.relation&&t.resource){let I=R(t.key,"Data"),r=R(t.key,"IsLoading");return t.multiple?(m.push(["TagField","@pankod/refine-antd"]),l`
                <Title level={5}>${y(t.key)}</Title>
                {${r} ? <>Loading...</> : (
                    <>
                    ${(()=>{var F,h;if(t.relationInfer)if((F=t.relationInfer)!=null&&F.accessor){if(Array.isArray(t.relationInfer.accessor))return"Not Handled.";{let C=O((h=t.resource)==null?void 0:h.name),T=p(C,void 0,t.relationInfer.accessor);return`{${I}?.data?.map((${C}: any) => <TagField key={${T}} value={${T}} />)}`}}else return;else return})()}
                    </>
                )}
                `):l`
                <Title level={5}>${y(t.key)}</Title>
                {${r} ? <>Loading...</> : (
                    <>
                    ${(()=>{var F;return t.relationInfer?(F=t.relationInfer)!=null&&F.accessor?Array.isArray(t.relationInfer.accessor)?`{${p(`${I}?.data`,void 0,t.relationInfer.accessor,' + " " + ')}}`:`{${I}?.data?.${t.relationInfer.accessor}}`:`{${I}?.data}`:`{${I}?.data?.id}`})()}
                    </>
                )}
                
                `}},x=t=>{if(t.type==="text"){if(m.push(["TagField","@pankod/refine-antd"],["TextField","@pankod/refine-antd"]),t.multiple){let I=p("item",void 0,t.accessor);return l`
                <Title level={5}>${y(t.key)}</Title>
                {${p(i,t.key)}?.map((item: any) => (
                    <TagField value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(t.key)}</Title>
                <TextField value={${p(i,t.key,t.accessor)}} />
            `}},v=t=>{if(t.type==="image"){if(m.push(["ImageField","@pankod/refine-antd"]),t.multiple){let I=p("item",void 0,t.accessor);return l`
                <Title level={5}>${y(t.key)}</Title>
                {${p(i,t.key)}?.map((item: any) => (
                    <ImageField style={{ maxWidth: 200 }} value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(t.key)}</Title>
                <ImageField style={{ maxWidth: 200 }} value={${p(i,t.key,t.accessor," + ")}} />
                `}},$=t=>{if(t.type==="email"){if(m.push(["TagField","@pankod/refine-antd"],["EmailField","@pankod/refine-antd"]),t.multiple){let I=p("item",void 0,t.accessor);return l`
                <Title level={5}>${y(t.key)}</Title>
                <>
                {${p(i,t.key)}?.map((item: any) => (
                    <TagField value={${I}} key={${I}} />
                ))}
                </>
            `}return l`
                <Title level={5}>${y(t.key)}</Title>
                <EmailField value={${p(i,t.key,t.accessor," + ")}} />
            `}},b=t=>{if(t.type==="url"){if(m.push(["TagField","@pankod/refine-antd"],["UrlField","@pankod/refine-antd"]),t.multiple){let I=p("item",void 0,t.accessor);return l`
                <Title level={5}>${y(t.key)}</Title>
                {${p(i,t.key)}?.map((item: any) => (
                    <TagField value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(t.key)}</Title>
                <UrlField value={${p(i,t.key,t.accessor," + ")}} />
            `}},N=t=>{if(t.type==="boolean"){if(m.push(["TagField","@pankod/refine-antd"],["BooleanField","@pankod/refine-antd"]),t.multiple){let I=p("item",void 0,t.accessor);return l`
                <Title level={5}>${y(t.key)}</Title>
                {(${p(i,t.key)} as any[])?.map((item, index) => (
                    <BooleanField value={${I}} key={index} />
                ))}
            `}return l`
                <Title level={5}>${y(t.key)}</Title>
                <BooleanField value={${p(i,t.key,t.accessor," && ")}} />
            `}},o=t=>{if(t.type==="date"){if(m.push(["DateField","@pankod/refine-antd"]),t.multiple){let I=p("item",void 0,t.accessor);return l`
                <Title level={5}>${y(t.key)}</Title>
                {${p(i,t.key)}?.map((item: any) => (
                    <DateField value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(t.key)}</Title>
                <DateField value={${p(i,t.key,t.accessor," + ' ' + ")}} />
            `}},A=t=>{if(t.type==="richtext")return m.push(["MarkdownField","@pankod/refine-antd"]),l`
                <Title level={5}>${y(t.key)}</Title>
                <MarkdownField value={${p(i,t.key,t.accessor,' + " " + ')}} />
            `},S=t=>{if(t.type==="number"){if(m.push(["NumberField","@pankod/refine-antd"]),t.multiple){let I=p("item",void 0,t.accessor);return l`
                <Title level={5}>${y(t.key)}</Title>
                {${p(i,t.key)}?.map((item: any) => (
                    <TagField value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(t.key)}</Title>
                <NumberField value={${p(i,t.key,t.accessor,' + " " + ')} ?? ""} />
            `}},a=n.map(t=>{switch(t==null?void 0:t.type){case"text":return x(t);case"number":return S(t);case"richtext":return A(t);case"email":return $(t);case"image":return v(t);case"date":return o(t);case"boolean":return N(t);case"url":return b(t);case"relation":return k(t);default:return}});return j(m),l`
    ${B(m)}
    
    const { Title } = Typography;

    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        const { queryResult } = useShow(${c?`{ 
                    resource: "${e.name}", 
                    id: ${s}
                }`:""});
        const { data, isLoading } = queryResult;
    
        const ${i} = data?.data;

        ${d}

        return (
            <Show isLoading={isLoading}>
                ${a.join("")}
            </Show>
        );
    };
    `},be=M({type:"show",additionalScope:[["@pankod/refine-antd","RefineAntd",_r]],codeViewerComponent:K,loadingComponent:_,errorComponent:U,renderer:or});import*as Kr from"@pankod/refine-antd";var ar=({resource:e,fields:n,isCustomPage:c})=>{var I;let s=P((I=e.label)!=null?I:e.name,"list"),u="tableProps?.dataSource",i=[["React","react",!0],["IResourceComponentsProps","@pankod/refine-core"],["BaseRecord","@pankod/refine-core"],["useTable","@pankod/refine-antd"],["List","@pankod/refine-antd"],["Table","@pankod/refine-antd"],["Space","@pankod/refine-antd"]],g=n.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)).filter(Boolean).map(r=>{if((r==null?void 0:r.relation)&&!r.fieldable&&r.resource){i.push(["useMany","@pankod/refine-core"]);let F="";return r.multiple?F=`[].concat(...(${u}?.map((item) => ${p("item",r.key,r.accessor,!1)}) ?? []))`:F=`${u}?.map((item) => ${p("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${R(r.key,"Data")}, isLoading: ${R(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${F},
                    queryOptions: {
                        enabled: !!${u},
                    },
                });
                `}}).filter(Boolean),d=r=>{var F,h;if(r.relation&&r.resource){let T=`${R(r.key,"Data")}?.data`,oe=R(r.key,"IsLoading");if(Array.isArray(r.accessor))return;let G=`${oe} ? <>Loading...</> : `,Re=r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,q=`title="${y(r.key)}"`,D="";if(r.multiple){i.push(["TagField","@pankod/refine-antd"]);let X="item";if(r!=null&&r.relationInfer){let ae=`${T}?.find((resourceItems) => resourceItems.id === ${p("item",void 0,r.accessor)})`;X=p(ae,void 0,(F=r==null?void 0:r.relationInfer)==null?void 0:F.accessor)}D=`render={(value: any[]) => ${G} (
                    <>
                        {${p("value",void 0)}?.map((item, index) => (
                            <TagField key={index} value={${X}} />
                        ))}
                    </>
                )}`}else if(r!=null&&r.relationInfer){let X=`${T}?.find((item) => item.id === value)`,ae=p(X,void 0,(h=r==null?void 0:r.relationInfer)==null?void 0:h.accessor);D=`render={(value) => ${G} ${ae}}`}else D="";return l`<Table.Column ${Re} ${q} ${D} />`}},k=r=>{if(r.type==="image"){i.push(["ImageField","@pankod/refine-antd"]);let F=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${y(r.key)}"`,C=l`render={(value: any) => <ImageField style={{ maxWidth: "100px" }} value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor," + ");C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <ImageField style={{ maxWidth: "100px" }} value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${F} ${h} ${C} />`}},x=r=>{if(r.type==="email"){i.push(["TagField","@pankod/refine-antd"],["EmailField","@pankod/refine-antd"]);let F=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${y(r.key)}"`,C=l`render={(value: any) => <EmailField value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor,' + " " + ');C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${F} ${h} ${C} />`}},v=r=>{if(r.type==="url"){i.push(["UrlField","@pankod/refine-antd"],["TagField","@pankod/refine-antd"]);let F=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${y(r.key)}"`,C=l`render={(value: any) => <UrlField value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor," + ");C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${F} ${h} ${C} />`}},$=r=>{if((r==null?void 0:r.type)==="boolean"){i.push(["BooleanField","@pankod/refine-antd"]);let F=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${y(r.key)}"`,C=l`render={(value: any) => <BooleanField value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," && ")}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor," && ");C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <BooleanField value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${F} ${h} ${C} />`}},b=r=>{if(r.type==="date"){i.push(["DateField","@pankod/refine-antd"]);let F=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${y(r.key)}"`,C=l`render={(value: any) => <DateField value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor,' + " " + ');C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <DateField value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${F} ${h} ${C} />`}},N=r=>{if((r==null?void 0:r.type)==="richtext"){i.push(["MarkdownField","@pankod/refine-antd"]);let F=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:r.accessor?`dataIndex={["${r.key}", "${r.accessor}"]}`:`dataIndex="${r.key}"`,h=`title="${y(r.key)}"`,C=l`render={(value: any) => <MarkdownField value={(${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0)}).slice(0, 80) + "..."} />}`;if(r.multiple){let T=p("item",void 0,r.accessor,' + " " + ');C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <MarkdownField value={(${T})?.slice(0, 80) + "..."} key={index} />
                ))}</>)}`}return l`<Table.Column ${F} ${h} ${C} />`}},o=r=>{if(r&&(r.type==="text"||r.type==="number")){let F=r.accessor&&!Array.isArray(r.accessor)&&!r.multiple?`dataIndex={["${r.key}", "${r.accessor}"]}`:`dataIndex="${r.key}"`,h=`title="${y(r.key)}"`,C="";if(r.multiple){i.push(["TagField","@pankod/refine-antd"]);let T=p("item",void 0,r.accessor,' + " " + ');C=`render={(value: any[]) => (<>{value?.map((item) => (
                    <TagField value={${T}} key={${T}} />
                ))}</>)}`}return!r.multiple&&Array.isArray(r.accessor)&&(C=`render={(value: any) => (<>{${p("value",void 0,r.accessor)}}</>)}`),`<Table.Column ${F} ${h} ${C} />`}},{canEdit:A,canShow:S,canDelete:a}=e!=null?e:{};A&&i.push(["EditButton","@pankod/refine-antd"]),S&&i.push(["ShowButton","@pankod/refine-antd"]),a&&i.push(["DeleteButton","@pankod/refine-antd"]);let f=A||S||a?l`
            <Table.Column
                title="Actions"
                dataIndex="actions"
                render={(_, record: BaseRecord) => (
                    <Space>
                    ${A?l`
                        <EditButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${S?l`
                        <ShowButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${a?l`
                        <DeleteButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    </Space>
                )}
            />
        `:"",t=n.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":return o(r);case"richtext":return N(r);case"email":return x(r);case"image":return k(r);case"date":return b(r);case"boolean":return $(r);case"url":return v(r);case"relation":return d(r);default:return}});return j(i),l`
    ${B(i)}
    
    export const ${s}: React.FC<IResourceComponentsProps> = () => {
        const { tableProps } = useTable({
            syncWithLocation: true,
            ${c?` resource: "${e.name}",`:""}
        });
    
        ${g}

        return (
            <List>
                <Table {...tableProps} rowKey="id">
                    ${t.join(`\r
`)}
                    ${f}
                </Table>
            </List>
        );
    };
    `},Ce=M({type:"list",additionalScope:[["@pankod/refine-antd","RefineAntd",Kr]],codeViewerComponent:K,loadingComponent:_,errorComponent:U,renderer:ar});import*as zr from"@pankod/refine-antd";import qr from"dayjs";var sr=({resource:e,fields:n,isCustomPage:c})=>{var N;let s=P((N=e.label)!=null?N:e.name,"create"),u=[["React","react",!0],["IResourceComponentsProps","@pankod/refine-core"],["Create","@pankod/refine-antd"],["Form","@pankod/refine-antd"],["useForm","@pankod/refine-antd"],["Input","@pankod/refine-antd"]],m=n.filter(o=>(o==null?void 0:o.relation)&&!(o!=null&&o.fieldable)&&(o==null?void 0:o.resource)).filter(Boolean).map(o=>{if((o==null?void 0:o.relation)&&!o.fieldable&&o.resource)return u.push(["useSelect","@pankod/refine-antd"]),`
                const { selectProps: ${R(o.key,"SelectProps")} } =
                useSelect({
                    resource: "${o.resource.name}",
                    ${$e(o)}
                });
            `}).filter(Boolean),g=o=>{if(o.relation&&o.resource){u.push(["Select","@pankod/refine-antd"]);let A=R(o.key,"SelectProps"),S=o.accessor?o.multiple?`"${o.key}"`:`["${o.key}", "${o.accessor}"]`:`"${o.key}"`,a="",f="";return o.accessor&&o.multiple&&(f=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${z(`${o.accessor}`)?o.accessor:`["${o.accessor}"]`}: item }));
                }}`,a=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${p("item",void 0,o.accessor)}),
                    };
                }}`),l`
                <Form.Item
                    label="${y(o.key)}"
                    name={${S}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${a}
                    ${f}
                >
                    <Select ${o.multiple?'mode="multiple"':""} {...${A}} />
                </Form.Item>             
                `}},d=o=>{if(o.type==="text"||o.type==="url"||o.type==="email"||o.type==="number")return W(o.key)||o.multiple?void 0:l`
                <Form.Item
                    label="${y(o.key)}"
                    name={["${o.key}"${o.accessor?', "'+o.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input  />
                </Form.Item>
            `},k=o=>{if(o.type==="image"){u.push(["Upload","@pankod/refine-antd"],["getValueFromEvent","@pankod/refine-antd"]);let A='valuePropName="fileList"';return o.multiple&&!o.accessor&&(A="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),o.multiple||(o.accessor?A="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":A="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),l`
                <Form.Item label="${y(o.key)}">
                    <Form.Item
                        name="${o.key}"
                        ${A}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${o.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},x=o=>{if(o.type==="boolean")return u.push(["Checkbox","@pankod/refine-antd"]),o.multiple?void 0:l`
                <Form.Item
                    label="${y(o.key)}"
                    valuePropName="checked"
                    name={["${o.key}"${o.accessor?', "'+o.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${y(o.key)}</Checkbox>
                </Form.Item>
            `},v=o=>{if(o.type==="date")return u.push(["DatePicker","@pankod/refine-antd"],["dayjs","dayjs",!0]),o.multiple?void 0:l`
                <Form.Item
                    label="${y(o.key)}"
                    name={["${o.key}"${o.accessor?', "'+o.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `},$=o=>{if(o.type==="richtext")return l`
            <Form.Item
                label="${y(o.key)}"
                name="${o.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},b=n.map(o=>{switch(o==null?void 0:o.type){case"text":case"number":case"email":case"url":return d(o);case"richtext":return $(o);case"image":return k(o);case"date":return v(o);case"boolean":return x(o);case"relation":return g(o);default:return}});return j(u),l`
    ${B(u)}
    
    export const ${s}: React.FC<IResourceComponentsProps> = () => {
        const { formProps, saveButtonProps, queryResult } = useForm(${c?`{
                      resource: "${e.name}",
                      action: "create",
                  }`:""});
    
        ${m}

        return (
            <Create saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${b.join("")}
                </Form>
            </Create>
        );
    };
    `},Ae=M({type:"create",additionalScope:[["@pankod/refine-antd","RefineAntd",zr],["dayjs","dayjs",qr,!0]],codeViewerComponent:K,loadingComponent:_,errorComponent:U,renderer:sr});import*as Hr from"@pankod/refine-antd";import Wr from"dayjs";var ir=({resource:e,fields:n,isCustomPage:c,id:s})=>{var A,S;let u=P((A=e.label)!=null?A:e.name,"edit"),i=R((S=e.label)!=null?S:e.name,"Data"),m=[["React","react",!0],["IResourceComponentsProps","@pankod/refine-core"],["Edit","@pankod/refine-antd"],["Form","@pankod/refine-antd"],["useForm","@pankod/refine-antd"],["Input","@pankod/refine-antd"]],d=n.filter(a=>(a==null?void 0:a.relation)&&!(a!=null&&a.fieldable)&&(a==null?void 0:a.resource)).filter(Boolean).map(a=>{if((a==null?void 0:a.relation)&&!a.fieldable&&a.resource){m.push(["useSelect","@pankod/refine-antd"]);let f=p(i,a.key,a.accessor,!1);return a.multiple&&a.accessor&&(f=`${p(i,a.key)}?.map((item: any) => ${p("item",void 0,a.accessor)})`),`
                const { selectProps: ${R(a.key,"SelectProps")} } =
                useSelect({
                    resource: "${a.resource.name}",
                    defaultValue: ${f},
                    ${a.relationInfer&&a.relationInfer.accessor?typeof a.relationInfer.accessor=="string"?a.relationInfer.accessor!=="title"?`optionLabel: "${a.relationInfer.accessor}",`:"":`optionLabel: "${a.relationInfer.accessor[0]}",`:""}
                });
            `}}).filter(Boolean),k=a=>{if(a.relation&&a.resource){m.push(["Select","@pankod/refine-antd"]);let f=R(a.key,"SelectProps"),t=a.accessor?a.multiple?`"${a.key}"`:`["${a.key}", "${a.accessor}"]`:`"${a.key}"`,I="",r="";return a.accessor&&a.multiple&&(r=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${z(`${a.accessor}`)?a.accessor:`["${a.accessor}"]`}: item }));
                }}`,I=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${p("item",void 0,a.accessor)}),
                    };
                }}`),l`
                <Form.Item
                    label="${y(a.key)}"
                    name={${t}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${I}
                    ${r}
                >
                    <Select ${a.multiple?'mode="multiple"':""} {...${f}} />
                </Form.Item>             
                `}},x=a=>{if(a.type==="text"||a.type==="url"||a.type==="email"||a.type==="number"){if(a.multiple){let f=p(a.key,"index",a.accessor).split("?.").map(t=>`"${t}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${p(i,a.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label={\`${y(a.key)} \${index+1}\`}
                                name={[${f}]}
                            >
                                <Input
                                    type="${a.type}"
                                ${W(a.key)?"readOnly disabled":""} />
                            </Form.Item>
                        ))}
                    </>
                `}return l`
                <Form.Item
                    label="${y(a.key)}"
                    name={["${a.key}"${a.accessor?', "'+a.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input ${W(a.key)?"readOnly disabled":""} />
                </Form.Item>
            `}},v=a=>{if(a.type==="image"){m.push(["Upload","@pankod/refine-antd"],["getValueFromEvent","@pankod/refine-antd"]);let f='valuePropName="fileList"';return a.multiple&&!a.accessor&&(f="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),a.multiple||(a.accessor?f="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":f="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),l`
                <Form.Item label="${y(a.key)}">
                    <Form.Item
                        name="${a.key}"
                        ${f}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${a.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},$=a=>{if(a.type==="boolean"){if(m.push(["Checkbox","@pankod/refine-antd"]),a.multiple){let f=p(a.key,"index",a.accessor).split("?.").map(t=>`"${t}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${p(i,a.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                valuePropName="checked"
                                label={\`${y(a.key)} \${index+1}\`}
                                name={[${f}]}
                            >
                                <Checkbox>${y(a.key)}</Checkbox>
                            </Form.Item>
                        ))}
                    </>
                `}return l`
                <Form.Item
                    label="${y(a.key)}"
                    valuePropName="checked"
                    name={["${a.key}"${a.accessor?', "'+a.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${y(a.key)}</Checkbox>
                </Form.Item>
            `}},b=a=>{if(a.type==="date"){if(m.push(["DatePicker","@pankod/refine-antd"],["dayjs","dayjs",!0]),a.multiple){let f=p(a.key,"index",a.accessor).split("?.").map(t=>`"${t}"`).join(", ").replace(/"index"/,"index");return l`
                    <>
                        {(${p(i,a.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label={\`${y(a.key)} \${index+1}\`}
                                name={[${f}]}
                                getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                            >
                                <DatePicker />
                            </Form.Item>
                        ))}
                    </>
                `}return l`
                <Form.Item
                    label="${y(a.key)}"
                    name={["${a.key}"${a.accessor?', "'+a.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `}},N=a=>{if(a.type==="richtext")return l`
            <Form.Item
                label="${y(a.key)}"
                name="${a.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},o=n.map(a=>{switch(a==null?void 0:a.type){case"text":case"number":case"email":case"url":return x(a);case"richtext":return N(a);case"image":return v(a);case"date":return b(a);case"boolean":return $(a);case"relation":return k(a);default:return}});return j(m),l`
    ${B(m)}
    
    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        const { formProps, saveButtonProps, queryResult } = useForm(${c?`{
                      resource: "${e.name}",
                      id: ${s},
                      action: "edit",
                  }`:""});
    
        const ${i} = queryResult?.data?.data;
    
        ${d}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${o.join("")}
                </Form>
            </Edit>
        );
    };
    `},Te=M({type:"edit",additionalScope:[["@pankod/refine-antd","RefineAntd",Hr],["dayjs","dayjs",Wr,!0]],codeViewerComponent:K,loadingComponent:_,errorComponent:U,renderer:ir});var ya=({action:e,id:n,...c})=>{let{useParams:s}=Zr(),{action:u,id:i}=s();switch(e!=null?e:u){case"show":return ne.createElement(be,{...c,id:n!=null?n:i});case"create":return ne.createElement(Ae,{...c,id:n!=null?n:i});case"edit":return ne.createElement(Te,{...c,id:n!=null?n:i});default:return ne.createElement(Ce,{...c,id:n!=null?n:i})}};export{Ae as AntdCreateInferencer,sr as AntdCreateRenderer,Te as AntdEditInferencer,ir as AntdEditRenderer,ya as AntdInferencer,Ce as AntdListInferencer,ar as AntdListRenderer,be as AntdShowInferencer,or as AntdShowRenderer};
//# sourceMappingURL=antd.js.map