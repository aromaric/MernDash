var vr=Object.create;var ce=Object.defineProperty;var Cr=Object.getOwnPropertyDescriptor;var Ar=Object.getOwnPropertyNames;var Tr=Object.getPrototypeOf,Rr=Object.prototype.hasOwnProperty;var wr=(e,t)=>{for(var i in t)ce(e,i,{get:t[i],enumerable:!0})},qe=(e,t,i,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let u of Ar(t))!Rr.call(e,u)&&u!==i&&ce(e,u,{get:()=>t[u],enumerable:!(s=Cr(t,u))||s.enumerable});return e};var R=(e,t,i)=>(i=e!=null?vr(Tr(e)):{},qe(t||!e||!e.__esModule?ce(i,"default",{value:e,enumerable:!0}):i,e)),Sr=e=>qe(ce({},"__esModule",{value:!0}),e);var Xr={};wr(Xr,{AntdCreateInferencer:()=>fe,AntdCreateRenderer:()=>Ue,AntdEditInferencer:()=>ge,AntdEditRenderer:()=>Ke,AntdInferencer:()=>Gr,AntdListInferencer:()=>ye,AntdListRenderer:()=>_e,AntdShowInferencer:()=>de,AntdShowRenderer:()=>Me});module.exports=Sr(Xr);var ie=R(require("react")),br=require("@pankod/refine-core");var qr=R(require("@pankod/refine-antd"));var B=R(require("react")),Oe=require("@pankod/refine-core");var Nr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,ke=(e,t)=>{let i=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];Nr.test(e)&&i.unshift("url");let s=i.find(u=>u in t&&!!t[u]);if(s)return s==="firstName"&&"lastName"in t?["firstName","lastName"]:s};function Fe(e,t,i){var u;if(t)return t;let s=i==null?void 0:i.find(c=>c.name===e);return(u=s==null?void 0:s.options)!=null&&u.dataProviderName?s.options.dataProviderName:"default"}var oe=e=>{var t;return(t=e==null?void 0:e.options)==null?void 0:t.dataProviderName};var xe=e=>{let t=[...e].filter(Boolean).sort((i,s)=>(s.priority||0)-(i.priority||0))[0];return t||null};var He=R(require("prettier/standalone")),We=R(require("prettier/parser-typescript")),he=e=>{try{return He.default.format(e,{parser:"typescript",plugins:[We.default],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(t){return console.warn("Formatting error in inferencer",t),e}};var be=e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`);var ve=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Ze=(e,t)=>{let i=ve.test(e),s=typeof t=="string"||typeof t=="number",u=Array.isArray(t)&&t.every(c=>typeof c=="string"||typeof c=="number");return i&&s||i&&u?{key:e,relation:!0,multiple:!!u,type:"relation",priority:1}:!1};var V=e=>e.replace(ve,"");var f=e=>V(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(p=>p.charAt(0).toUpperCase()+p.slice(1)).join(" ");var Ce=e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(u=>!u.trim().startsWith("export default")).join(`
`);var Ge=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Lr=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Pr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Ae=(e,t={})=>{let i=e.matchAll(Ge),s=new Set;for(let u of i){let[,c,p,I,d]=u;if(d in t){let F=t[d];if(d==="react")continue;c&&s.add(`const { default: ${c} } = ${F};`),p&&s.add(`const${p.replace(Pr,"$1: $3$4")} = ${F};`),I&&s.add(`const ${I} = ${F};`)}}return be(`
    ${Array.from(s).join(`
`)}
    ${e.replace(Ge,"").replace(Lr,"")}
    `)};var ae=R(require("pluralize"));var Te=(e,t)=>e?t.find(s=>{let u=V(e.key);return s.name===u||s.name===(ae.default.isPlural(u)?u:ae.default.plural(u))||s.name===(ae.default.isSingular(u)?u:ae.default.singular(u))}):void 0;var Xe=R(require("pluralize"));var j=(e,t,i="Inferred")=>{let s=e.replace(/[^a-zA-Z0-9]/g," "),u=Xe.default.singular(s),p=f(u).replace(/ /g,"")||i,I=t.charAt(0).toUpperCase()+t.slice(1);return/^[a-zA-Z]/.test(p)?`${p}${I}`:`${I}${p}`};var Er=e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"",l=(e,...t)=>e.reduce((s,u,c)=>`${s}${u}${Er(t[c])}`,"").trim();var Re=(e,t)=>`
    ${e!=null?e:""}
    
    render(typeof ${t} !== "undefined" ? <${t} /> : <></>);
    `;var we=e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,"");var Vr=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,Z=e=>Vr.test(e);function Se(e,t,i){let s=`${e}`;return t&&(s+="?.",Z(t)?s+=t:s+=`['${t}']`),i&&(s+="?.",Z(i)?s+=i:s+=`['${i}']`),s}function Dr(e,t,i){return(i!=null?i:[]).map(u=>Se(e,t,u))}var m=(e,t,i,s=' + " " + ')=>Array.isArray(i)?s?Dr(e,t,i).join(s):Se(e,t,i[0]):Se(e,t,i);var M=e=>{let t=e.reduce((s,[u,c,p])=>(s[c]||(s[c]=[]),s[c].includes(u)||(p?s[c].push([u,!0]):s[c].push(u)),s),{});return Object.entries(t).map(([s,u])=>{let c=u.find(F=>Array.isArray(F)&&F[1]),p=u.filter(F=>typeof F=="string"),I=c?`${c[0]}`:"",d=p.length?`{ ${p.join(", ")} }`:"";return`import ${I}${I&&d?", ":""}${d} from "${s}";`})};var Ne=R(require("pluralize")),U=(e="")=>Ne.default.isSingular(e)?e:Ne.default.singular(e);var Le=R(require("pluralize")),Y=(e="")=>Le.default.isPlural(e)?e:Le.default.plural(e);var jr=/^id$/i,J=e=>jr.test(e);var Pe=e=>e.relationInfer&&e.relationInfer.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":"";var _=e=>{};var N=(e,t="")=>{if(Number.isInteger(Number(e)))return t.charAt(0).toLowerCase()+t.slice(1)+e;let s=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),u=f(s).replace(/ /g,"");return`${u.charAt(0).toLowerCase()+u.slice(1)}${t.charAt(0).toUpperCase()+t.slice(1)}`};var Ye=e=>{let t=(i,s,u,c=t)=>{let p=e.map(d=>d(i,s,u,c));return xe(p)};return t};var Je=e=>(i,s,u,c,p)=>e.reduce((I,d)=>d(I,s,u,c,p),i);var Qe=(e,t,i,s)=>{let u=Array.isArray(t),c=Array.isArray(t)&&t.every(p=>typeof p=="string"||typeof p=="number");if(u){if(!c){let I=s(e,t[0],i,s);return I?{...I,key:e,multiple:!0,priority:1}:!1}let p=s(e,t[0],i,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:p==null?void 0:p.type}}return!1};var er=(e,t)=>typeof t=="boolean"?{key:e,type:"boolean"}:!1;var Ee=R(require("dayjs")),Br=/(_at|_on|At|On|AT|ON)(\[\])?$/,rr=(e,t)=>{let i=Br.test(e)&&(0,Ee.default)(t).isValid(),s=typeof t=="string"&&(0,Ee.default)(t).isValid(),u=typeof t=="string"&&t.length>4;return i||s&&u?{key:e,type:"date",priority:1}:!1};var Or=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,tr=(e,t)=>typeof t=="string"&&Or.test(t)?{key:e,type:"email",priority:1}:!1;var Mr=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,nr=(e,t)=>typeof t=="string"&&Mr.test(t)?{key:e,type:"image",priority:2}:!1;var or=(e,t)=>typeof t>"u"||t===null?null:!1;var ar=(e,t)=>typeof t=="number"?{key:e,type:"number"}:!1;var _r=/id$/i,sr=(e,t,i,s)=>{let u=t!==null,c=!Array.isArray(t);if(u&&c&&typeof t=="object"){if(Object.keys(t).length===1&&_r.test(Object.keys(t)[0]))return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let d=ke(e,t);if((d?d.length>0:!1)&&d){let b=d&&Array.isArray(d)?d[0]:d,v=s(b,t[b],t,s);if(v){let k=Array.isArray(d)?d.map(C=>v.accessor?`${C}.${Array.isArray(v.accessor)?v.accessor[0]:v.accessor}`:C):v.accessor?Array.isArray(v.accessor)?`${d}.${v.accessor[0]}`:`${d}.${v.accessor}`:d;return{...v,fieldable:!0,key:e,accessor:k,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1};var ir=(e,t)=>typeof t=="string"&&t.length>100?{key:e,type:"richtext",priority:1}:!1;var cr=(e,t)=>typeof t=="string"?{key:e,type:"text"}:!1;var Ur=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,ur=(e,t)=>typeof t=="string"&&Ur.test(t)?{key:e,type:"url",priority:1}:!1;var pr=[Qe,er,rr,tr,nr,or,ar,sr,Ze,ir,cr,ur];var mr=(e,t,i,s)=>e.map(c=>{if(!c.relation&&(c.type==="text"||c.type==="richtext"||c.type==="number")&&!c.canRelation){let p=/^[a-z0-9-]+$/,I=k=>p.test(`${k}`),d=c.key.toLowerCase()!=="id";return!(!c.accessor||typeof c.accessor=="string")||!d?c:(c.multiple?s[c.key]:[s[c.key]]).every(k=>I(c.accessor?k[c.accessor]:k))?{...c,canRelation:!0}:c}return c});var Kr=/(image|photo|avatar|cover|thumbnail|icon)/i,lr=e=>e.map(i=>i.type==="url"&&Kr.test(i.key)?{...i,type:"image"}:i);var dr=(e,t)=>e.map(s=>{let u=Te(s,t);return u?{...s,relation:!0,type:"relation",resource:u}:s});var yr=(e,t,i,s,u)=>e.map(p=>{if(p.relation&&p.type==="relation"&&!p.resource){let I=p.accessor?s[p.key][p.accessor]:s[p.key],d=u(p.key,I,s,u);if(d&&d.type!=="relation")return{...p,fieldable:!0,relation:!1,type:d.type,canRelation:!0}}return p});var fr=[lr,dr,yr,mr];var K=R(require("react")),ue=R(require("prism-react-renderer")),gr=R(require("prism-react-renderer/themes/vsDark")),Ve=({code:e,wrapperProps:t})=>((0,K.useEffect)(()=>{var s;let i=document.createElement("style");i.appendChild(document.createTextNode(`
                #code-highlight::-webkit-scrollbar {-webkit-appearance: none; height: 7px; width: 7px;}
                #code-highlight::-webkit-scrollbar-thumb {background-color: #666b7a;}
                #code-highlight::-webkit-scrollbar-corner {background-color: rgb(30, 30, 30);}
                `)),(s=document.getElementById("code-highlight"))==null||s.appendChild(i)},[]),K.default.createElement("div",{id:"code-highlight",style:{maxHeight:"75vh",height:"100%",overflow:"auto",backgroundColor:"rgb(30, 30, 30)"},...t!=null?t:{}},K.default.createElement(ue.default,{...ue.defaultProps,theme:gr.default,code:e,language:"tsx"},({className:i,style:s,tokens:u,getLineProps:c,getTokenProps:p})=>K.default.createElement("pre",{className:i,style:{...s,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},u.map((I,d)=>K.default.createElement("div",{key:d,...c({line:I,key:d})},I.map((F,b)=>K.default.createElement("span",{key:b,...p({token:F,key:b})}))))))));var D=R(require("react")),zr=R(require("@pankod/refine-core")),pe=require("@aliemir/react-live");var Ir=[["react","React",D.default],["@pankod/refine-core","RefineCore",zr]],De=D.default.createContext({}),je=({fetchError:e,code:t,additionalScope:i,errorComponent:s})=>{var I;let u=(I=t&&Ce(Ae(t,[...Ir,...i!=null?i:[]].reduce((d,[F,b,v,k])=>k?d:{...d,[F]:b},{}))))!=null?I:"",c=D.default.useMemo(()=>({React:D.default,...D.default,...[...Ir,...i!=null?i:[]].reduce((d,[F,b,v])=>({...d,[b]:v}),{})}),[i]),p=D.default.useMemo(()=>()=>{let{error:F}=D.default.useContext(De);return s?D.default.createElement(s,{error:F?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${F}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},[s,e]);return D.default.createElement(pe.LiveProvider,{Context:De,code:u,scope:c,noInline:!0},!e&&D.default.createElement(pe.LivePreview,{Context:De}),D.default.createElement(p,null))};var G=R(require("react")),me=require("@pankod/refine-core");var $r=(e,t,i)=>{let{resource:s,resourceName:u,id:c,resources:p}=(0,me.useResource)({resourceNameOrRouteName:t}),I=i!=null?i:c,d=(0,me.useDataProvider)(),[F,b]=G.default.useState(void 0),[v,k]=G.default.useState(void 0),[C,P]=G.default.useState(!0),[o,T]=G.default.useState(!1),L=G.default.useCallback(async a=>{var $,r;let g=($=oe(s))!=null?$:Fe(u,void 0,p),n=d(g);T(!0),b(void 0);try{if(e==="list"||e==="create"){let h=(r=(await n.getList({resource:u})).data)==null?void 0:r[0];h||b(`<p>No records/data found for resource "${u}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),k(h),setTimeout(()=>{T(!1)},500)}if((e==="edit"||e==="show")&&a){let h=(await n.getOne({resource:u,id:a})).data;h||b(`<p>No records/data found for resource "${u}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),k(h),setTimeout(()=>{T(!1)},500)}}catch(x){console.warn("An error occured while fetching the resource data. Please check the error message below:",x),b(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${u}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{T(!1)},500)}},[e,d,s,u,p]);return G.default.useEffect(()=>{P(!1),!o&&!v&&L(I)},[L,I]),{data:v,loading:o,initial:C,error:F}};var Q=R(require("react")),kr=require("@pankod/refine-core");var Be=require("lodash"),Fr=({record:e,fields:t,infer:i})=>{let s=(0,kr.useDataProvider)(),[u,c]=Q.default.useState([]),[p,I]=Q.default.useState(!0),[d,F]=Q.default.useState(!1),b=Q.default.useCallback(async v=>{console.groupCollapsed("@pankod/refine-inferencer is trying to detect relations");let k=[];F(!0);try{let C=v.map(async o=>{if(o&&(o.relation||o.canRelation)&&e){let T=oe(o.resource),L=s(T),a=Array.isArray(o.accessor)?void 0:o.multiple?e[o.key].map(g=>o.accessor?(0,Be.get)(g,o.accessor):g)[0]:o.accessor?(0,Be.get)(e[o.key],o.accessor):e[o.key];if(a&&o.resource)try{let{data:g}=await L.getOne({resource:o.resource.name,id:a});k.push({status:"success",resource:o.resource.name,field:o.key});let n=i("__",g,{},i);return{...o,relationInfer:n}}catch{return k.push({status:"error",resource:o.resource.name,field:o.key}),{...o,relationInfer:null}}if(a){let g,n;try{let{data:x}=await L.getOne({resource:Y(V(o.key)),id:a});k.push({status:"success",resource:Y(V(o.key)),field:o.key}),g=x,n=!0}catch{k.push({status:"error",resource:Y(V(o.key)),field:o.key});try{let{data:h}=await L.getOne({resource:U(V(o.key)),id:a});k.push({status:"success",resource:U(V(o.key)),field:o.key}),g=h,n=!1}catch{return k.push({status:"error",resource:U(V(o.key)),field:o.key}),{...o,relationInfer:null}}}let $=i("__",g,{},i),r=V(o.key);return{...o,relation:!0,type:"relation",resource:{name:n?Y(r):U(r)},fieldable:!1,canRelation:void 0,relationInfer:$}}return{...o,relationInfer:null}}return o}),P=await Promise.all(C);c(P.filter(o=>o)),setTimeout(()=>{F(!1)},500)}catch{setTimeout(()=>{F(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${k.length} attempts and succeeded with ${k.filter(C=>C.status==="success").length} attempts.`),console.groupEnd()},500)},[s,e]);return Q.default.useEffect(()=>{I(!1),!d&&t&&t.length>0&&u.length===0&&b(t)},[b,d,t,b]),{fields:u,loading:d,initial:p}};var z=({type:e,additionalScope:t=[],customElements:i=[],fieldTransformers:s=[],renderer:u,loadingComponent:c,errorComponent:p,codeViewerComponent:I})=>{let d=Ye([...pr,...i]),F=Je([...fr,...s]),b=({resourceName:k,fieldTransformer:C,id:P})=>{var w;let{resource:o,resources:T}=(0,Oe.useResource)({resourceNameOrRouteName:k}),{resource:L}=(0,Oe.useResource)(),{data:a,loading:g,initial:n,error:$}=$r(e,k!=null?k:o==null?void 0:o.name,P),r=B.default.useMemo(()=>{if(a){let Ie=Object.keys(a).map(X=>{let O=a[X];return d(X,O,a,d)}).filter(Boolean),te=F(Ie,T,o,a,d);return C?te.flatMap(X=>{let O=C(X);return O?[O]:[]}):te}return[]},[a,T,o,C]),{fields:x,loading:h}=Fr({record:a,fields:r,infer:d}),A=B.default.useMemo(()=>!g&&!h&&!n?u({resource:o,resources:T,fields:x,infer:d,isCustomPage:o.name!==L.name,id:P}):"",[o,T,x,g,h]);return B.default.createElement(B.default.Fragment,null,c&&(g||h)&&B.default.createElement(c,null),!g&&!h&&B.default.createElement(B.default.Fragment,null,B.default.createElement(je,{fetchError:!g&&$?$:!g&&!n&&!a,code:Re(A,j((w=o.label)!=null?w:o.name,e)),errorComponent:p,additionalScope:t}),I&&B.default.createElement(I,{code:we(A),loading:g||h})))};return({name:k,resource:C,fieldTransformer:P,id:o})=>B.default.createElement(b,{fieldTransformer:P,resourceName:C!=null?C:k,key:C!=null?C:k,id:o})};var se=R(require("react")),ee=require("@pankod/refine-antd"),q=({error:e})=>e?se.default.createElement(ee.Row,{justify:"center",align:"middle",style:{minHeight:"200px"}},se.default.createElement(ee.Col,null,se.default.createElement(ee.Alert,{message:"Error",description:se.default.createElement("div",{dangerouslySetInnerHTML:{__html:e!=null?e:""}}),type:"error",showIcon:!0}))):null;var le=R(require("react")),re=require("@pankod/refine-antd"),H=()=>le.default.createElement(re.Row,{justify:"center",align:"middle",style:{minHeight:"300px"}},le.default.createElement(re.Col,null,le.default.createElement(re.Spin,{size:"large"})));var S=R(require("react")),E=require("@pankod/refine-antd");var W=({code:e,loading:t})=>{let i=S.default.useMemo(()=>he(e!=null?e:""),[e]),s=S.default.useRef(null),[u,c]=S.default.useState(!1),[p,I]=S.default.useState(!1);if(t)return null;let d=()=>{var F,b,v,k;(F=s==null?void 0:s.current)==null||F.select(),(b=s==null?void 0:s.current)==null||b.setSelectionRange(0,Number.MAX_SAFE_INTEGER),typeof navigator<"u"&&(navigator.clipboard.writeText((k=(v=s==null?void 0:s.current)==null?void 0:v.value)!=null?k:""),I(!0),setTimeout(()=>{I(!1)},1e3))};return i?S.default.createElement(S.default.Fragment,null,S.default.createElement("div",{style:{position:"fixed",bottom:12,right:60}},S.default.createElement(E.Space,null,S.default.createElement(E.Button,{type:"primary",onClick:()=>c(!0),icon:S.default.createElement(E.Icons.CodeOutlined,null)},"Show Code"),S.default.createElement(E.Button,{type:"default",target:"_blank",href:"https://github.com/refinedev/refine/discussions/3046",icon:S.default.createElement(E.Icons.MessageOutlined,null)},"Give Feedback"))),S.default.createElement("div",{style:{height:"50px"}}),S.default.createElement(E.Modal,{width:800,open:u,onCancel:()=>c(!1),closeIcon:S.default.createElement(E.Icons.CloseOutlined,{style:{color:"#666b7a"}}),footer:null,bodyStyle:{padding:0}},S.default.createElement(Ve,{code:i}),S.default.createElement("textarea",{ref:s,defaultValue:(i!=null?i:"").replace(/\\n/g,`\r
`),id:"code-input","aria-hidden":"true",style:{padding:0,margin:0,width:0,height:0,opacity:0,border:"none",display:"block"}}),S.default.createElement(E.Button,{style:{position:"absolute",bottom:12,right:12,width:100},key:"copy",type:"default",icon:p?S.default.createElement(E.Icons.CheckOutlined,{style:{color:"green"}}):S.default.createElement(E.Icons.CopyOutlined,null),onClick:d},p?"Copied":"Copy"))):null};var Me=({resource:e,fields:t,isCustomPage:i,id:s})=>{var g;let u=j((g=e.label)!=null?g:e.name,"show"),c="record",p=[["React","react",!0],["IResourceComponentsProps","@pankod/refine-core"],["useShow","@pankod/refine-core"],["Show","@pankod/refine-antd"],["Typography","@pankod/refine-antd"]],d=t.filter(n=>(n==null?void 0:n.relation)&&!(n!=null&&n.fieldable)&&(n==null?void 0:n.resource)).filter(Boolean).map(n=>{if((n==null?void 0:n.relation)&&!n.fieldable&&n.resource){if(n.multiple){p.push(["useMany","@pankod/refine-core"]);let $=m(c,n.key);return n.accessor&&($=`${m(c,n.key)}?.map((item: any) => ${m("item",void 0,n.accessor)})`),`
                const { data: ${N(n.key,"Data")}, isLoading: ${N(n.key,"IsLoading")} } =
                useMany({
                    resource: "${n.resource.name}",
                    ids: ${$} || [],
                    queryOptions: {
                        enabled: !!${c},
                    },
                });
                `}return p.push(["useOne","@pankod/refine-core"]),`
                const { data: ${N(n.key,"Data")}, isLoading: ${N(n.key,"IsLoading")} } =
                useOne({
                    resource: "${n.resource.name}",
                    id: ${m(c,n.key,n.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${c},
                    },
                });
            `}}).filter(Boolean),F=n=>{if(n.relation&&n.resource){let $=N(n.key,"Data"),r=N(n.key,"IsLoading");return n.multiple?(p.push(["TagField","@pankod/refine-antd"]),l`
                <Title level={5}>${f(n.key)}</Title>
                {${r} ? <>Loading...</> : (
                    <>
                    ${(()=>{var x,h;if(n.relationInfer)if((x=n.relationInfer)!=null&&x.accessor){if(Array.isArray(n.relationInfer.accessor))return"Not Handled.";{let A=U((h=n.resource)==null?void 0:h.name),w=m(A,void 0,n.relationInfer.accessor);return`{${$}?.data?.map((${A}: any) => <TagField key={${w}} value={${w}} />)}`}}else return;else return})()}
                    </>
                )}
                `):l`
                <Title level={5}>${f(n.key)}</Title>
                {${r} ? <>Loading...</> : (
                    <>
                    ${(()=>{var x;return n.relationInfer?(x=n.relationInfer)!=null&&x.accessor?Array.isArray(n.relationInfer.accessor)?`{${m(`${$}?.data`,void 0,n.relationInfer.accessor,' + " " + ')}}`:`{${$}?.data?.${n.relationInfer.accessor}}`:`{${$}?.data}`:`{${$}?.data?.id}`})()}
                    </>
                )}
                
                `}},b=n=>{if(n.type==="text"){if(p.push(["TagField","@pankod/refine-antd"],["TextField","@pankod/refine-antd"]),n.multiple){let $=m("item",void 0,n.accessor);return l`
                <Title level={5}>${f(n.key)}</Title>
                {${m(c,n.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
            `}return l`
                <Title level={5}>${f(n.key)}</Title>
                <TextField value={${m(c,n.key,n.accessor)}} />
            `}},v=n=>{if(n.type==="image"){if(p.push(["ImageField","@pankod/refine-antd"]),n.multiple){let $=m("item",void 0,n.accessor);return l`
                <Title level={5}>${f(n.key)}</Title>
                {${m(c,n.key)}?.map((item: any) => (
                    <ImageField style={{ maxWidth: 200 }} value={${$}} key={${$}} />
                ))}
            `}return l`
                <Title level={5}>${f(n.key)}</Title>
                <ImageField style={{ maxWidth: 200 }} value={${m(c,n.key,n.accessor," + ")}} />
                `}},k=n=>{if(n.type==="email"){if(p.push(["TagField","@pankod/refine-antd"],["EmailField","@pankod/refine-antd"]),n.multiple){let $=m("item",void 0,n.accessor);return l`
                <Title level={5}>${f(n.key)}</Title>
                <>
                {${m(c,n.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
                </>
            `}return l`
                <Title level={5}>${f(n.key)}</Title>
                <EmailField value={${m(c,n.key,n.accessor," + ")}} />
            `}},C=n=>{if(n.type==="url"){if(p.push(["TagField","@pankod/refine-antd"],["UrlField","@pankod/refine-antd"]),n.multiple){let $=m("item",void 0,n.accessor);return l`
                <Title level={5}>${f(n.key)}</Title>
                {${m(c,n.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
            `}return l`
                <Title level={5}>${f(n.key)}</Title>
                <UrlField value={${m(c,n.key,n.accessor," + ")}} />
            `}},P=n=>{if(n.type==="boolean"){if(p.push(["TagField","@pankod/refine-antd"],["BooleanField","@pankod/refine-antd"]),n.multiple){let $=m("item",void 0,n.accessor);return l`
                <Title level={5}>${f(n.key)}</Title>
                {(${m(c,n.key)} as any[])?.map((item, index) => (
                    <BooleanField value={${$}} key={index} />
                ))}
            `}return l`
                <Title level={5}>${f(n.key)}</Title>
                <BooleanField value={${m(c,n.key,n.accessor," && ")}} />
            `}},o=n=>{if(n.type==="date"){if(p.push(["DateField","@pankod/refine-antd"]),n.multiple){let $=m("item",void 0,n.accessor);return l`
                <Title level={5}>${f(n.key)}</Title>
                {${m(c,n.key)}?.map((item: any) => (
                    <DateField value={${$}} key={${$}} />
                ))}
            `}return l`
                <Title level={5}>${f(n.key)}</Title>
                <DateField value={${m(c,n.key,n.accessor," + ' ' + ")}} />
            `}},T=n=>{if(n.type==="richtext")return p.push(["MarkdownField","@pankod/refine-antd"]),l`
                <Title level={5}>${f(n.key)}</Title>
                <MarkdownField value={${m(c,n.key,n.accessor,' + " " + ')}} />
            `},L=n=>{if(n.type==="number"){if(p.push(["NumberField","@pankod/refine-antd"]),n.multiple){let $=m("item",void 0,n.accessor);return l`
                <Title level={5}>${f(n.key)}</Title>
                {${m(c,n.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
            `}return l`
                <Title level={5}>${f(n.key)}</Title>
                <NumberField value={${m(c,n.key,n.accessor,' + " " + ')} ?? ""} />
            `}},a=t.map(n=>{switch(n==null?void 0:n.type){case"text":return b(n);case"number":return L(n);case"richtext":return T(n);case"email":return k(n);case"image":return v(n);case"date":return o(n);case"boolean":return P(n);case"url":return C(n);case"relation":return F(n);default:return}});return _(p),l`
    ${M(p)}
    
    const { Title } = Typography;

    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        const { queryResult } = useShow(${i?`{ 
                    resource: "${e.name}", 
                    id: ${s}
                }`:""});
        const { data, isLoading } = queryResult;
    
        const ${c} = data?.data;

        ${d}

        return (
            <Show isLoading={isLoading}>
                ${a.join("")}
            </Show>
        );
    };
    `},de=z({type:"show",additionalScope:[["@pankod/refine-antd","RefineAntd",qr]],codeViewerComponent:W,loadingComponent:H,errorComponent:q,renderer:Me});var Hr=R(require("@pankod/refine-antd"));var _e=({resource:e,fields:t,isCustomPage:i})=>{var $;let s=j(($=e.label)!=null?$:e.name,"list"),u="tableProps?.dataSource",c=[["React","react",!0],["IResourceComponentsProps","@pankod/refine-core"],["BaseRecord","@pankod/refine-core"],["useTable","@pankod/refine-antd"],["List","@pankod/refine-antd"],["Table","@pankod/refine-antd"],["Space","@pankod/refine-antd"]],I=t.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)).filter(Boolean).map(r=>{if((r==null?void 0:r.relation)&&!r.fieldable&&r.resource){c.push(["useMany","@pankod/refine-core"]);let x="";return r.multiple?x=`[].concat(...(${u}?.map((item) => ${m("item",r.key,r.accessor,!1)}) ?? []))`:x=`${u}?.map((item) => ${m("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${N(r.key,"Data")}, isLoading: ${N(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${x},
                    queryOptions: {
                        enabled: !!${u},
                    },
                });
                `}}).filter(Boolean),d=r=>{var x,h;if(r.relation&&r.resource){let w=`${N(r.key,"Data")}?.data`,Ie=N(r.key,"IsLoading");if(Array.isArray(r.accessor))return;let te=`${Ie} ? <>Loading...</> : `,ze=r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,X=`title="${f(r.key)}"`,O="";if(r.multiple){c.push(["TagField","@pankod/refine-antd"]);let ne="item";if(r!=null&&r.relationInfer){let $e=`${w}?.find((resourceItems) => resourceItems.id === ${m("item",void 0,r.accessor)})`;ne=m($e,void 0,(x=r==null?void 0:r.relationInfer)==null?void 0:x.accessor)}O=`render={(value: any[]) => ${te} (
                    <>
                        {${m("value",void 0)}?.map((item, index) => (
                            <TagField key={index} value={${ne}} />
                        ))}
                    </>
                )}`}else if(r!=null&&r.relationInfer){let ne=`${w}?.find((item) => item.id === value)`,$e=m(ne,void 0,(h=r==null?void 0:r.relationInfer)==null?void 0:h.accessor);O=`render={(value) => ${te} ${$e}}`}else O="";return l`<Table.Column ${ze} ${X} ${O} />`}},F=r=>{if(r.type==="image"){c.push(["ImageField","@pankod/refine-antd"]);let x=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${f(r.key)}"`,A=l`render={(value: any) => <ImageField style={{ maxWidth: "100px" }} value={${m("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />}`;if(r.multiple){let w=m("item",void 0,r.accessor," + ");A=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <ImageField style={{ maxWidth: "100px" }} value={${w}} key={index} />
                ))}</>)}`}return l`<Table.Column ${x} ${h} ${A} />`}},b=r=>{if(r.type==="email"){c.push(["TagField","@pankod/refine-antd"],["EmailField","@pankod/refine-antd"]);let x=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${f(r.key)}"`,A=l`render={(value: any) => <EmailField value={${m("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />}`;if(r.multiple){let w=m("item",void 0,r.accessor,' + " " + ');A=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${w}} key={index} />
                ))}</>)}`}return l`<Table.Column ${x} ${h} ${A} />`}},v=r=>{if(r.type==="url"){c.push(["UrlField","@pankod/refine-antd"],["TagField","@pankod/refine-antd"]);let x=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${f(r.key)}"`,A=l`render={(value: any) => <UrlField value={${m("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />}`;if(r.multiple){let w=m("item",void 0,r.accessor," + ");A=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${w}} key={index} />
                ))}</>)}`}return l`<Table.Column ${x} ${h} ${A} />`}},k=r=>{if((r==null?void 0:r.type)==="boolean"){c.push(["BooleanField","@pankod/refine-antd"]);let x=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${f(r.key)}"`,A=l`render={(value: any) => <BooleanField value={${m("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," && ")}} />}`;if(r.multiple){let w=m("item",void 0,r.accessor," && ");A=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <BooleanField value={${w}} key={index} />
                ))}</>)}`}return l`<Table.Column ${x} ${h} ${A} />`}},C=r=>{if(r.type==="date"){c.push(["DateField","@pankod/refine-antd"]);let x=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,h=`title="${f(r.key)}"`,A=l`render={(value: any) => <DateField value={${m("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />}`;if(r.multiple){let w=m("item",void 0,r.accessor,' + " " + ');A=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <DateField value={${w}} key={index} />
                ))}</>)}`}return l`<Table.Column ${x} ${h} ${A} />`}},P=r=>{if((r==null?void 0:r.type)==="richtext"){c.push(["MarkdownField","@pankod/refine-antd"]);let x=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:r.accessor?`dataIndex={["${r.key}", "${r.accessor}"]}`:`dataIndex="${r.key}"`,h=`title="${f(r.key)}"`,A=l`render={(value: any) => <MarkdownField value={(${m("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0)}).slice(0, 80) + "..."} />}`;if(r.multiple){let w=m("item",void 0,r.accessor,' + " " + ');A=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <MarkdownField value={(${w})?.slice(0, 80) + "..."} key={index} />
                ))}</>)}`}return l`<Table.Column ${x} ${h} ${A} />`}},o=r=>{if(r&&(r.type==="text"||r.type==="number")){let x=r.accessor&&!Array.isArray(r.accessor)&&!r.multiple?`dataIndex={["${r.key}", "${r.accessor}"]}`:`dataIndex="${r.key}"`,h=`title="${f(r.key)}"`,A="";if(r.multiple){c.push(["TagField","@pankod/refine-antd"]);let w=m("item",void 0,r.accessor,' + " " + ');A=`render={(value: any[]) => (<>{value?.map((item) => (
                    <TagField value={${w}} key={${w}} />
                ))}</>)}`}return!r.multiple&&Array.isArray(r.accessor)&&(A=`render={(value: any) => (<>{${m("value",void 0,r.accessor)}}</>)}`),`<Table.Column ${x} ${h} ${A} />`}},{canEdit:T,canShow:L,canDelete:a}=e!=null?e:{};T&&c.push(["EditButton","@pankod/refine-antd"]),L&&c.push(["ShowButton","@pankod/refine-antd"]),a&&c.push(["DeleteButton","@pankod/refine-antd"]);let g=T||L||a?l`
            <Table.Column
                title="Actions"
                dataIndex="actions"
                render={(_, record: BaseRecord) => (
                    <Space>
                    ${T?l`
                        <EditButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${L?l`
                        <ShowButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${a?l`
                        <DeleteButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    </Space>
                )}
            />
        `:"",n=t.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":return o(r);case"richtext":return P(r);case"email":return b(r);case"image":return F(r);case"date":return C(r);case"boolean":return k(r);case"url":return v(r);case"relation":return d(r);default:return}});return _(c),l`
    ${M(c)}
    
    export const ${s}: React.FC<IResourceComponentsProps> = () => {
        const { tableProps } = useTable({
            syncWithLocation: true,
            ${i?` resource: "${e.name}",`:""}
        });
    
        ${I}

        return (
            <List>
                <Table {...tableProps} rowKey="id">
                    ${n.join(`\r
`)}
                    ${g}
                </Table>
            </List>
        );
    };
    `},ye=z({type:"list",additionalScope:[["@pankod/refine-antd","RefineAntd",Hr]],codeViewerComponent:W,loadingComponent:H,errorComponent:q,renderer:_e});var Wr=R(require("@pankod/refine-antd")),xr=R(require("dayjs"));var Ue=({resource:e,fields:t,isCustomPage:i})=>{var P;let s=j((P=e.label)!=null?P:e.name,"create"),u=[["React","react",!0],["IResourceComponentsProps","@pankod/refine-core"],["Create","@pankod/refine-antd"],["Form","@pankod/refine-antd"],["useForm","@pankod/refine-antd"],["Input","@pankod/refine-antd"]],p=t.filter(o=>(o==null?void 0:o.relation)&&!(o!=null&&o.fieldable)&&(o==null?void 0:o.resource)).filter(Boolean).map(o=>{if((o==null?void 0:o.relation)&&!o.fieldable&&o.resource)return u.push(["useSelect","@pankod/refine-antd"]),`
                const { selectProps: ${N(o.key,"SelectProps")} } =
                useSelect({
                    resource: "${o.resource.name}",
                    ${Pe(o)}
                });
            `}).filter(Boolean),I=o=>{if(o.relation&&o.resource){u.push(["Select","@pankod/refine-antd"]);let T=N(o.key,"SelectProps"),L=o.accessor?o.multiple?`"${o.key}"`:`["${o.key}", "${o.accessor}"]`:`"${o.key}"`,a="",g="";return o.accessor&&o.multiple&&(g=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${Z(`${o.accessor}`)?o.accessor:`["${o.accessor}"]`}: item }));
                }}`,a=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${m("item",void 0,o.accessor)}),
                    };
                }}`),l`
                <Form.Item
                    label="${f(o.key)}"
                    name={${L}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${a}
                    ${g}
                >
                    <Select ${o.multiple?'mode="multiple"':""} {...${T}} />
                </Form.Item>             
                `}},d=o=>{if(o.type==="text"||o.type==="url"||o.type==="email"||o.type==="number")return J(o.key)||o.multiple?void 0:l`
                <Form.Item
                    label="${f(o.key)}"
                    name={["${o.key}"${o.accessor?', "'+o.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input  />
                </Form.Item>
            `},F=o=>{if(o.type==="image"){u.push(["Upload","@pankod/refine-antd"],["getValueFromEvent","@pankod/refine-antd"]);let T='valuePropName="fileList"';return o.multiple&&!o.accessor&&(T="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),o.multiple||(o.accessor?T="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":T="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),l`
                <Form.Item label="${f(o.key)}">
                    <Form.Item
                        name="${o.key}"
                        ${T}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${o.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},b=o=>{if(o.type==="boolean")return u.push(["Checkbox","@pankod/refine-antd"]),o.multiple?void 0:l`
                <Form.Item
                    label="${f(o.key)}"
                    valuePropName="checked"
                    name={["${o.key}"${o.accessor?', "'+o.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${f(o.key)}</Checkbox>
                </Form.Item>
            `},v=o=>{if(o.type==="date")return u.push(["DatePicker","@pankod/refine-antd"],["dayjs","dayjs",!0]),o.multiple?void 0:l`
                <Form.Item
                    label="${f(o.key)}"
                    name={["${o.key}"${o.accessor?', "'+o.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `},k=o=>{if(o.type==="richtext")return l`
            <Form.Item
                label="${f(o.key)}"
                name="${o.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},C=t.map(o=>{switch(o==null?void 0:o.type){case"text":case"number":case"email":case"url":return d(o);case"richtext":return k(o);case"image":return F(o);case"date":return v(o);case"boolean":return b(o);case"relation":return I(o);default:return}});return _(u),l`
    ${M(u)}
    
    export const ${s}: React.FC<IResourceComponentsProps> = () => {
        const { formProps, saveButtonProps, queryResult } = useForm(${i?`{
                      resource: "${e.name}",
                      action: "create",
                  }`:""});
    
        ${p}

        return (
            <Create saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${C.join("")}
                </Form>
            </Create>
        );
    };
    `},fe=z({type:"create",additionalScope:[["@pankod/refine-antd","RefineAntd",Wr],["dayjs","dayjs",xr.default,!0]],codeViewerComponent:W,loadingComponent:H,errorComponent:q,renderer:Ue});var Zr=R(require("@pankod/refine-antd")),hr=R(require("dayjs"));var Ke=({resource:e,fields:t,isCustomPage:i,id:s})=>{var T,L;let u=j((T=e.label)!=null?T:e.name,"edit"),c=N((L=e.label)!=null?L:e.name,"Data"),p=[["React","react",!0],["IResourceComponentsProps","@pankod/refine-core"],["Edit","@pankod/refine-antd"],["Form","@pankod/refine-antd"],["useForm","@pankod/refine-antd"],["Input","@pankod/refine-antd"]],d=t.filter(a=>(a==null?void 0:a.relation)&&!(a!=null&&a.fieldable)&&(a==null?void 0:a.resource)).filter(Boolean).map(a=>{if((a==null?void 0:a.relation)&&!a.fieldable&&a.resource){p.push(["useSelect","@pankod/refine-antd"]);let g=m(c,a.key,a.accessor,!1);return a.multiple&&a.accessor&&(g=`${m(c,a.key)}?.map((item: any) => ${m("item",void 0,a.accessor)})`),`
                const { selectProps: ${N(a.key,"SelectProps")} } =
                useSelect({
                    resource: "${a.resource.name}",
                    defaultValue: ${g},
                    ${a.relationInfer&&a.relationInfer.accessor?typeof a.relationInfer.accessor=="string"?a.relationInfer.accessor!=="title"?`optionLabel: "${a.relationInfer.accessor}",`:"":`optionLabel: "${a.relationInfer.accessor[0]}",`:""}
                });
            `}}).filter(Boolean),F=a=>{if(a.relation&&a.resource){p.push(["Select","@pankod/refine-antd"]);let g=N(a.key,"SelectProps"),n=a.accessor?a.multiple?`"${a.key}"`:`["${a.key}", "${a.accessor}"]`:`"${a.key}"`,$="",r="";return a.accessor&&a.multiple&&(r=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${Z(`${a.accessor}`)?a.accessor:`["${a.accessor}"]`}: item }));
                }}`,$=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${m("item",void 0,a.accessor)}),
                    };
                }}`),l`
                <Form.Item
                    label="${f(a.key)}"
                    name={${n}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${$}
                    ${r}
                >
                    <Select ${a.multiple?'mode="multiple"':""} {...${g}} />
                </Form.Item>             
                `}},b=a=>{if(a.type==="text"||a.type==="url"||a.type==="email"||a.type==="number"){if(a.multiple){let g=m(a.key,"index",a.accessor).split("?.").map(n=>`"${n}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${m(c,a.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label={\`${f(a.key)} \${index+1}\`}
                                name={[${g}]}
                            >
                                <Input
                                    type="${a.type}"
                                ${J(a.key)?"readOnly disabled":""} />
                            </Form.Item>
                        ))}
                    </>
                `}return l`
                <Form.Item
                    label="${f(a.key)}"
                    name={["${a.key}"${a.accessor?', "'+a.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input ${J(a.key)?"readOnly disabled":""} />
                </Form.Item>
            `}},v=a=>{if(a.type==="image"){p.push(["Upload","@pankod/refine-antd"],["getValueFromEvent","@pankod/refine-antd"]);let g='valuePropName="fileList"';return a.multiple&&!a.accessor&&(g="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),a.multiple||(a.accessor?g="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":g="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),l`
                <Form.Item label="${f(a.key)}">
                    <Form.Item
                        name="${a.key}"
                        ${g}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${a.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},k=a=>{if(a.type==="boolean"){if(p.push(["Checkbox","@pankod/refine-antd"]),a.multiple){let g=m(a.key,"index",a.accessor).split("?.").map(n=>`"${n}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${m(c,a.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                valuePropName="checked"
                                label={\`${f(a.key)} \${index+1}\`}
                                name={[${g}]}
                            >
                                <Checkbox>${f(a.key)}</Checkbox>
                            </Form.Item>
                        ))}
                    </>
                `}return l`
                <Form.Item
                    label="${f(a.key)}"
                    valuePropName="checked"
                    name={["${a.key}"${a.accessor?', "'+a.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${f(a.key)}</Checkbox>
                </Form.Item>
            `}},C=a=>{if(a.type==="date"){if(p.push(["DatePicker","@pankod/refine-antd"],["dayjs","dayjs",!0]),a.multiple){let g=m(a.key,"index",a.accessor).split("?.").map(n=>`"${n}"`).join(", ").replace(/"index"/,"index");return l`
                    <>
                        {(${m(c,a.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label={\`${f(a.key)} \${index+1}\`}
                                name={[${g}]}
                                getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                            >
                                <DatePicker />
                            </Form.Item>
                        ))}
                    </>
                `}return l`
                <Form.Item
                    label="${f(a.key)}"
                    name={["${a.key}"${a.accessor?', "'+a.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `}},P=a=>{if(a.type==="richtext")return l`
            <Form.Item
                label="${f(a.key)}"
                name="${a.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},o=t.map(a=>{switch(a==null?void 0:a.type){case"text":case"number":case"email":case"url":return b(a);case"richtext":return P(a);case"image":return v(a);case"date":return C(a);case"boolean":return k(a);case"relation":return F(a);default:return}});return _(p),l`
    ${M(p)}
    
    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        const { formProps, saveButtonProps, queryResult } = useForm(${i?`{
                      resource: "${e.name}",
                      id: ${s},
                      action: "edit",
                  }`:""});
    
        const ${c} = queryResult?.data?.data;
    
        ${d}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${o.join("")}
                </Form>
            </Edit>
        );
    };
    `},ge=z({type:"edit",additionalScope:[["@pankod/refine-antd","RefineAntd",Zr],["dayjs","dayjs",hr.default,!0]],codeViewerComponent:W,loadingComponent:H,errorComponent:q,renderer:Ke});var Gr=({action:e,id:t,...i})=>{let{useParams:s}=(0,br.useRouterContext)(),{action:u,id:c}=s();switch(e!=null?e:u){case"show":return ie.default.createElement(de,{...i,id:t!=null?t:c});case"create":return ie.default.createElement(fe,{...i,id:t!=null?t:c});case"edit":return ie.default.createElement(ge,{...i,id:t!=null?t:c});default:return ie.default.createElement(ye,{...i,id:t!=null?t:c})}};
//# sourceMappingURL=antd.js.map